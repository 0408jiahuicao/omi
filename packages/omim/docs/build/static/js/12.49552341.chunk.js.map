{"version":3,"sources":["../static/js/12.49552341.chunk.js","docs/zh-cn/introduction.md"],"names":["webpackJsonp","72","module","exports"],"mappings":"AAAAA,cAAc,KAERC,GACA,SAAUC,EAAQC,GCHxBD,EAAAC,QAAA","file":"static/js/12.49552341.chunk.js","sourcesContent":["webpackJsonp([12],{\n\n/***/ 72:\n/***/ (function(module, exports) {\n\nmodule.exports = \"# Omim\\n\\nMaterial Design for the Web, powered by [Omi](https://github.com/Tencent/omi).\\n\\n* [DOCS & REPL](https://tencent.github.io/omi/packages/omim/docs/build/index.html)\\n* [material.io docs](https://material.io/develop/web/components/buttons/) & [material.io demo](https://material-components.github.io/material-components-web-catalog/#/) \\n\\n## 特性\\n\\n* 基于 [material-components-web](https://github.com/material-components/material-components-web) 简单包装\\n* 使用标准 Web Components 的 Custom Elements 渲染 \\n* 任意框架都可以使用这些组件(比如 Omi, React, Vue and Angular)\\n* 同时支持 JSX 和 原生 HTML 标签的使用方式 \\n* 每个组件可以单独使用\\n\\n## 使用指南\\n\\n### 通过 script\\n\\n```html\\n<script src=\\\"https://unpkg.com/omi\\\"></script>\\n<script src=\\\"https://unpkg.com/@omim/core@0.0.1/button/index.js\\\"></script>\\n\\n<m-button>I am button</m-button>\\n```\\n\\n### 通过 npm\\n\\n``` bash\\nnpm install @omim/core\\n```\\n\\nThen:\\n\\n```js\\nimport '@omim/core/button'\\n```\\n\\n然后在任意框架中使用，比如 Omi, React, Vue or Angular:\\n\\n``` html\\n<m-button>I am button</m-button>\\n```\\n\\nIt can also be used in pure js:\\n\\n```js\\nvar button = document.createElement('m-button')\\nbutton.innerHTML = 'I am button'\\ndocument.body.append(button)\\nbutton.addEventListener('click', function () {\\n  console.log('Clicked!')\\n})\\n\\n//or\\n//document.body.innerHTML = '<m-button>I am button</m-button>'\\n```\\n\\n\\n## 贡献\\n\\n### CMD\\n\\nBuild component:\\n\\n```bash\\nnpm run build -- component-name\\n```\\n\\nBuild demo:\\n\\n```bash\\nnpm start demo-name\\n```\\n\\nPublish:\\n\\n```bash\\nnpm publish --access public\\n```\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/12.49552341.chunk.js","module.exports = \"# Omim\\n\\nMaterial Design for the Web, powered by [Omi](https://github.com/Tencent/omi).\\n\\n* [DOCS & REPL](https://tencent.github.io/omi/packages/omim/docs/build/index.html)\\n* [material.io docs](https://material.io/develop/web/components/buttons/) & [material.io demo](https://material-components.github.io/material-components-web-catalog/#/) \\n\\n## 特性\\n\\n* 基于 [material-components-web](https://github.com/material-components/material-components-web) 简单包装\\n* 使用标准 Web Components 的 Custom Elements 渲染 \\n* 任意框架都可以使用这些组件(比如 Omi, React, Vue and Angular)\\n* 同时支持 JSX 和 原生 HTML 标签的使用方式 \\n* 每个组件可以单独使用\\n\\n## 使用指南\\n\\n### 通过 script\\n\\n```html\\n<script src=\\\"https://unpkg.com/omi\\\"></script>\\n<script src=\\\"https://unpkg.com/@omim/core@0.0.1/button/index.js\\\"></script>\\n\\n<m-button>I am button</m-button>\\n```\\n\\n### 通过 npm\\n\\n``` bash\\nnpm install @omim/core\\n```\\n\\nThen:\\n\\n```js\\nimport '@omim/core/button'\\n```\\n\\n然后在任意框架中使用，比如 Omi, React, Vue or Angular:\\n\\n``` html\\n<m-button>I am button</m-button>\\n```\\n\\nIt can also be used in pure js:\\n\\n```js\\nvar button = document.createElement('m-button')\\nbutton.innerHTML = 'I am button'\\ndocument.body.append(button)\\nbutton.addEventListener('click', function () {\\n  console.log('Clicked!')\\n})\\n\\n//or\\n//document.body.innerHTML = '<m-button>I am button</m-button>'\\n```\\n\\n\\n## 贡献\\n\\n### CMD\\n\\nBuild component:\\n\\n```bash\\nnpm run build -- component-name\\n```\\n\\nBuild demo:\\n\\n```bash\\nnpm start demo-name\\n```\\n\\nPublish:\\n\\n```bash\\nnpm publish --access public\\n```\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/docs/zh-cn/introduction.md\n// module id = 72\n// module chunks = 12"],"sourceRoot":""}