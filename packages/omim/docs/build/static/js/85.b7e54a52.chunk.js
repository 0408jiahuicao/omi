webpackJsonp([85],{59:function(n,r){n.exports="# Omim\r\n\r\nCross-Frameworks components, powered by Material Design and [Omi](https://github.com/Tencent/omi).\r\n\r\n![](https://tencent.github.io/omi/packages/omim/assets/pv4.jpeg?a=1)\r\n\r\n## Features\r\n\r\n* Render by Custom Elements of Web Components\r\n* Any framework can use the components, such as Omi, React, Vue and Angular \r\n* Support both JSX and native HTML elements \r\n* Each element can be used independently\r\n* Super easy to change theme colors, fonts and rounded corners\r\n* Extended HTML capabilities, you can pass false attributes to elements through string `'0'` or string `'flase'`\r\n\r\n## Usage\r\n\r\n### Via script\r\n\r\n```html\r\n<script src=\"https://unpkg.com/omi\"><\/script>\r\n<script src=\"https://unpkg.com/@omim/core@latest/button/index.js\"><\/script>\r\n\r\n<m-button>I am button</m-button>\r\n```\r\n\r\n### Via npm\r\n\r\n``` bash\r\nnpm install @omim/core\r\n```\r\n\r\nThen:\r\n\r\n```js\r\nimport '@omim/core/button'\r\n```\r\n\r\nThen use the element in Omi, React, Vue or Angular:\r\n\r\n``` html\r\n<m-button>I am button</m-button>\r\n```\r\n\r\nIt can also be used in pure js:\r\n\r\n```js\r\nvar button = document.createElement('m-button')\r\nbutton.innerHTML = 'I am button'\r\ndocument.body.append(button)\r\nbutton.addEventListener('click', function () {\r\n  console.log('Clicked!')\r\n})\r\n\r\n//or\r\n//document.body.innerHTML = '<m-button>I am button</m-button>'\r\n```\r\n\r\n## Change Theme Color\r\n\r\n```js\r\ndocument.body.style.setProperty('--mdc-theme-primary', 'red')\r\ndocument.body.style.setProperty('--mdc-theme-secondary', 'blue')\r\ndocument.body.style.setProperty('--mdc-theme-error', 'yellow')\r\n```\r\n\r\nAll the config:\r\n\r\n```css\r\n--mdc-theme-primary: #0072d9;\r\n--mdc-theme-secondary: #2170b8;\r\n--mdc-theme-error: #f5222d;\r\n--mdc-theme-surface: #ffffff;\r\n--mdc-theme-on-primary: #ffffff;\r\n--mdc-theme-on-secondary: #ffffff;\r\n--mdc-theme-on-error: #ffffff;\r\n--mdc-theme-on-surface: #000000;\r\n--mdc-theme-background: #ffffff;\r\n--mdc-shape-small-component-radius: 4px;\r\n--mdc-shape-medium-component-radius: 4px;\r\n--mdc-shape-large-component-radius: 0px;\r\n--mdc-typography--font-family: Roboto, sans-serif;\r\n```\r\n\r\n## HTML Extention \r\n\r\nYou can set boolean prop to false from markup by 0 or false string.\r\n\r\n```js\r\ndefine('my-element', class extends WeElement {\r\n  static defaultProps = {\r\n    show: true\r\n  }\r\n\r\n static propTypes = {\r\n    show: Boolean\r\n  }\r\n\r\n  render(props) {\r\n    ...\r\n    ...\r\n  }\r\n})\r\n```\r\n\r\nUse:\r\n\r\n```html\r\n<my-element show=\"false\"></my-element>\r\n```\r\n\r\nor\r\n\r\n```html\r\n<my-element show=\"0\"></my-element>\r\n```\r\n\r\n## Contribution\r\n\r\n### CMD\r\n\r\nBuild component:\r\n\r\n```bash\r\nnpm run build -- component-name\r\n```\r\n\r\nBuild all components:\r\n\r\n```bash\r\nnpm run build-all\r\n```\r\n\r\nBuild demo:\r\n\r\n```bash\r\nnpm start demo-name\r\n```\r\n\r\nPublish:\r\n\r\n```bash\r\nnpm publish --access public\r\n```\r\n\r\n## Links\r\n\r\n* [material.io docs](https://material.io/develop/web/components/buttons/) \r\n* [material.io demo](https://material-components.github.io/material-components-web-catalog/#/) \r\n* [material-theme-builder](https://material-theme-builder.glitch.me/)\r\n* [material-components-web](https://github.com/material-components/material-components-web)\r\n"}});
//# sourceMappingURL=85.b7e54a52.chunk.js.map