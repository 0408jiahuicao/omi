{"version":3,"sources":["../src/vnode.js","../src/h.js","../src/util.js","../src/clone-element.js","../src/constants.js","../src/render-queue.js","../src/vdom/index.js","../src/dom/index.js","../src/style.js","../src/vdom/diff.js","../src/define.js","../src/vdom/component-recycler.js","../src/vdom/component.js","../src/obaa.js","../src/render.js","../src/tag.js","../src/class.js","../src/render-to-string.js","../src/options.js","../src/component.js","../src/get-host.js","../node_modules/_htm@2.1.1@htm/dist/htm.mjs","../src/omi.js"],"names":["VNode","h","nodeName","attributes","lastSimple","child","simple","i","children","arguments","length","stack","push","pop","String","p","key","options","vnode","toObject","val","TypeError","Object","assign","target","from","symbols","to","s","hasOwnProperty","call","getOwnPropertySymbols","propIsEnumerable","extend","obj","props","applyRef","ref","value","current","isArray","prototype","toString","getUse","data","paths","forEach","path","index","getTargetByPath","keys","tempPath","tempVal","args","apply","origin","arr","replace","split","len","cloneElement","slice","ATTR_KEY","component","debounceRendering","defer","rerender","items","enqueueRender","renderComponent","mapping","hydrating","isSameNodeType","node","splitText","_componentConstructor","normalizedNodeName","toLowerCase","defaultProps","doc","createElementNS","createElement","_ref","createNode","a","b","cssTxt","isSvg","rule","map","o","x","trim","Array","Symbol","iterator","_ref3","properties","next","done","_ref2","property","style","parseCSSText","match","cssText","parentNode","removeChild","setAccessor","name","old","IS_NON_DIMENSIONAL$1","test","oldJson","currentJson","changed","ckey","result","setStyles","substring","addEventListener","eventProxy","useCapture","touchStart","touchEnd","_listeners","setProperty","removeEventListener","removeAttribute","ns","removeAttributeNS","setAttributeNS","setAttribute","e","this","type","event","___touchY","touches","pageY","Math","abs","changedTouches","pageX","___touchX","document","body","scrollTop","___scrollTop","dispatchEvent","CustomEvent","styleCache","item","ctor","attrName","getCtorName","styleId","prefix","css","g0","g1","g2","g3","addStyle","id","ele","appendClass","head","getElementsByTagName","appendChild","someThingStyles","getElementById","textContent","window","ActiveXObject","styleSheet","addStyleWithoutId","attr","scopeVdom","addStyleToHead","scopedStyle","addScopedAttrStatic","vdom","staticStyleMapping","scoper","diffLevel","c","mounts","isSvgMode","afterMount","constructor","diff","dom","context","mountAll","parent","componentRoot","updateSelf","ret","out","prevSvgMode","vnodeName","buildComponentFromVNode","createTextNode","replaceChild","recollectNodeTree","__omiattr_","vchildren","innerDiffNode","fc","nodeValue","isHydrating","j","originalChildren","keyed","keyedLen","childrenLen","vlen","_child","f","_component","__key","vchild","min","undefined","nextSibling","idiff","removeNode","insertBefore","unmountOnly","removeChildren","previousSibling","attrs","self","ReferenceError","superClass","subClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","define","is","OBJECTTYPE","ARRAYTYPE","updatePath","getPath","depPaths","config","Comp","_Component","install","installed","render","uninstall","beforeUpdate","updated","receiveProps","rendered","use","useSelf","getUpdatePath","dataToPath","_objToPath","_arrayToPath","components","Ctor","Component","inst","createComponent","store","_updatePath","instances","_use","using","list","doRender","_disable","__ref","setComponentProps","prevContext","prevProps","opts","isChild","previousContext","previousProps","isUpdate","initialBase","initialChildComponent","skip","cbase","receiveResult","nextBase","getChildContext","beforeRender","childComponent","scopeHost","base","_parentComponent","getNodeProps","toUnmount","baseParent","SYNC_RENDER","unmountComponent","t","componentRef","afterUpdate","unshift","_renderCallbacks","flushMounts","oldDom","isDirectOwner","isOwner","originalComponent","beforeUnmount","updateSelfInstances","inner","mock","obaa","eventPropArr","isInArray","prop","$_o_","$_p_","watch","all","callback","propChanged","$_c_","RegExp","triggerStr","cprop","root","onPropertyChanged","$_r_","currentValue","get","isFunction","set","defineProperty","oldValue","nan","rootName","getRootName","handler","indexOf","isArray$1","isString","isNaN","empty","merge","firstChild","obsStore","patchs","update","extendStoreUpate","fixPath","patch","_this","updateAll","matchGlobalData","globalData","querySelector","needUpdate","instance","_updateSelfPath","usingSelf","includePath","keyA","onChange","diffResult","keyB","pathB","pathA","substr","mpPath","rpx","innerWidth","classNames","hasOwn","arg","classes","argType","join","extractClass","_Array$prototype$slic","class","className","VOID_ELEMENTS","isLargeString","str","JS_TO_CSS","scopedCSS","_renderToString","values","html","pretty","encodeEntities","isComponent","indentChar","__x","cssStr","cssAttr","scopedCSSAttr","v","sortAttributes","hooked","styleObjToCss","attributeHook","sub","isVoid","pieces","indent","childSvgMode","hasLarge","assign$1","htm","r","n","createRef","isWeb","global","propertyIsEnumerable","Element","runListeners","oEvent","iLstId","iElId","oEvtListeners","oListeners","aEls","aEvts","sEventType","fListener","nElIdx","aElListeners","splice","proto","F","Error","usePromise","Promise","__config__","platform","systemVersion","resolve","then","bind","setTimeout","ASYNC_RENDER","collectComponent","_willUpdate","elementId","componentChange","_willUpdateSelf","fire","FORCE_RENDER","every","ignoreLines","u","Map","defineElement","Omi","WeElement","omi","getHost","renderToString","tag","module","exports"],"mappings":"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","file":"omi.min.js","sourcesContent":["/** Virtual DOM Node */\nexport function VNode() {}\n","import { VNode } from './vnode'\nimport options from './options'\n\nconst stack = []\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a lightweight representation\n * of the structure of a DOM tree. This structure can be realized by recursively comparing it against\n * the current _actual_ DOM structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string} nodeName\tAn element name. Ex: `div`, `a`, `span`, etc.\n * @param {Object} attributes\tAny attributes/props to set on the created element.\n * @param rest\t\t\tAdditional arguments are taken to be children to append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n  let children = [],\n    lastSimple,\n    child,\n    simple,\n    i\n  for (i = arguments.length; i-- > 2; ) {\n    stack.push(arguments[i])\n  }\n  if (attributes && attributes.children != null) {\n    if (!stack.length) stack.push(attributes.children)\n    delete attributes.children\n  }\n  while (stack.length) {\n    if ((child = stack.pop()) && child.pop !== undefined) {\n      for (i = child.length; i--; ) stack.push(child[i])\n    } else {\n      if (typeof child === 'boolean') child = null\n\n      if ((simple = typeof nodeName !== 'function')) {\n        if (child == null) child = ''\n        else if (typeof child === 'number') child = String(child)\n        else if (typeof child !== 'string') simple = false\n      }\n\n      if (simple && lastSimple) {\n        children[children.length - 1] += child\n      } else if (children.length === 0) {\n        children = [child]\n      } else {\n        children.push(child)\n      }\n\n      lastSimple = simple\n    }\n  }\n\n  let p = new VNode()\n  p.nodeName = nodeName\n  p.children = children\n\tp.attributes = attributes == null ? undefined : attributes\n  p.key = attributes == null ? undefined : attributes.key\n\n  // if a \"vnode hook\" is defined, pass every created VNode to it\n  if (options.vnode !== undefined) options.vnode(p)\n\n  return p\n}\n","'use strict'\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols\nvar hasOwnProperty = Object.prototype.hasOwnProperty\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined')\n  }\n\n  return Object(val)\n}\n\nexport function assign(target, source) {\n  var from\n  var to = toObject(target)\n  var symbols\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s])\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key]\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from)\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]]\n        }\n      }\n    }\n  }\n\n  return to\n}\n\nif (typeof Element !== 'undefined' && !Element.prototype.addEventListener) {\n  var oListeners = {};\n  function runListeners(oEvent) {\n    if (!oEvent) { oEvent = window.event; }\n    for (var iLstId = 0, iElId = 0, oEvtListeners = oListeners[oEvent.type]; iElId < oEvtListeners.aEls.length; iElId++) {\n      if (oEvtListeners.aEls[iElId] === this) {\n        for (iLstId; iLstId < oEvtListeners.aEvts[iElId].length; iLstId++) { oEvtListeners.aEvts[iElId][iLstId].call(this, oEvent); }\n        break;\n      }\n    }\n  }\n  Element.prototype.addEventListener = function (sEventType, fListener /*, useCapture (will be ignored!) */) {\n    if (oListeners.hasOwnProperty(sEventType)) {\n      var oEvtListeners = oListeners[sEventType];\n      for (var nElIdx = -1, iElId = 0; iElId < oEvtListeners.aEls.length; iElId++) {\n        if (oEvtListeners.aEls[iElId] === this) { nElIdx = iElId; break; }\n      }\n      if (nElIdx === -1) {\n        oEvtListeners.aEls.push(this);\n        oEvtListeners.aEvts.push([fListener]);\n        this[\"on\" + sEventType] = runListeners;\n      } else {\n        var aElListeners = oEvtListeners.aEvts[nElIdx];\n        if (this[\"on\" + sEventType] !== runListeners) {\n          aElListeners.splice(0);\n          this[\"on\" + sEventType] = runListeners;\n        }\n        for (var iLstId = 0; iLstId < aElListeners.length; iLstId++) {\n          if (aElListeners[iLstId] === fListener) { return; }\n        }\n        aElListeners.push(fListener);\n      }\n    } else {\n      oListeners[sEventType] = { aEls: [this], aEvts: [[fListener]] };\n      this[\"on\" + sEventType] = runListeners;\n    }\n  };\n  Element.prototype.removeEventListener = function (sEventType, fListener /*, useCapture (will be ignored!) */) {\n    if (!oListeners.hasOwnProperty(sEventType)) { return; }\n    var oEvtListeners = oListeners[sEventType];\n    for (var nElIdx = -1, iElId = 0; iElId < oEvtListeners.aEls.length; iElId++) {\n      if (oEvtListeners.aEls[iElId] === this) { nElIdx = iElId; break; }\n    }\n    if (nElIdx === -1) { return; }\n    for (var iLstId = 0, aElListeners = oEvtListeners.aEvts[nElIdx]; iLstId < aElListeners.length; iLstId++) {\n      if (aElListeners[iLstId] === fListener) { aElListeners.splice(iLstId, 1); }\n    }\n  };\n}\n\n\nif (typeof Object.create !== 'function') {\n  Object.create = function(proto, propertiesObject) {\n    if (typeof proto !== 'object' && typeof proto !== 'function') {\n      throw new TypeError('Object prototype may only be an Object: ' + proto)\n    } else if (proto === null) {\n      throw new Error(\n        \"This browser's implementation of Object.create is a shim and doesn't support 'null' as the first argument.\"\n      )\n    }\n\n    // if (typeof propertiesObject != 'undefined') {\n    //     throw new Error(\"This browser's implementation of Object.create is a shim and doesn't support a second argument.\");\n    // }\n\n    function F() {}\n    F.prototype = proto\n\n    return new F()\n  }\n}\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '')\n  }\n}\n\n/**\n *  Copy all properties from `props` onto `obj`.\n *  @param {Object} obj\t\tObject onto which properties should be copied.\n *  @param {Object} props\tObject from which to copy properties.\n *  @returns obj\n *  @private\n */\nexport function extend(obj, props) {\n  for (let i in props) obj[i] = props[i]\n  return obj\n}\n\n/** Invoke or update a ref, depending on whether it is a function or object ref.\n *  @param {object|function} [ref=null]\n *  @param {any} [value]\n */\nexport function applyRef(ref, value) {\n  if (ref) {\n    if (typeof ref == 'function') ref(value)\n    else ref.current = value\n  }\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n *\n * @param {Function} callback\n */\n\nlet usePromise = typeof Promise == 'function'\n\n// for native\nif (\n  typeof document !== 'object' &&\n  typeof global !== 'undefined' &&\n  global.__config__\n) {\n  if (global.__config__.platform === 'android') {\n    usePromise = true\n  } else {\n    let systemVersion =\n      (global.__config__.systemVersion &&\n        global.__config__.systemVersion.split('.')[0]) ||\n      0\n    if (systemVersion > 8) {\n      usePromise = true\n    }\n  }\n}\n\nexport const defer = usePromise\n  ? Promise.resolve().then.bind(Promise.resolve())\n  : setTimeout\n\nexport function isArray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nexport function nProps(props) {\n  if (!props || isArray(props)) return {}\n  const result = {}\n  Object.keys(props).forEach(key => {\n    result[key] = props[key].value\n  })\n  return result\n}\n\nexport function getUse(data, paths) {\n  const obj = []\n  paths.forEach((path, index) => {\n    const isPath = typeof path === 'string'\n    if (isPath) {\n      obj[index] = getTargetByPath(data, path)\n    } else {\n      const key = Object.keys(path)[0]\n      const value = path[key]\n      if (typeof value === 'string') {\n        obj[index] = getTargetByPath(data, value)\n      } else {\n        const tempPath = value[0]\n        if (typeof tempPath === 'string') {\n          const tempVal = getTargetByPath(data, tempPath)\n          obj[index] = value[1] ? value[1](tempVal) : tempVal\n        } else {\n          const args = []\n          tempPath.forEach(path =>{\n            args.push(getTargetByPath(data, path))\n          })\n          obj[index] = value[1].apply(null, args)\n        }\n      }\n      obj[key] = obj[index]\n    }\n  })\n  return obj\n}\n\nexport function getTargetByPath(origin, path) {\n  const arr = path.replace(/]/g, '').replace(/\\[/g, '.').split('.')\n  let current = origin\n  for (let i = 0, len = arr.length; i < len; i++) {\n    current = current[arr[i]]\n  }\n  return current\n}\n","import { extend } from './util'\nimport { h } from './h'\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {VNode} vnode\t\tThe virtual DOM element to clone\n * @param {Object} props\tAttributes/props to add when cloning\n * @param {VNode} rest\t\tAny additional arguments will be used as replacement children.\n */\nexport function cloneElement(vnode, props) {\n  return h(\n    vnode.nodeName,\n    extend(extend({}, vnode.attributes), props),\n    arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children\n  )\n}\n","// render modes\n\nexport const NO_RENDER = 0\nexport const SYNC_RENDER = 1\nexport const FORCE_RENDER = 2\nexport const ASYNC_RENDER = 3\n\nexport const ATTR_KEY = '__omiattr_'\n\n// DOM properties that should NOT have \"px\" added when numeric\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i\n","import options from './options'\nimport { defer } from './util'\nimport { renderComponent } from './vdom/component'\n\n/** Managed queue of dirty components to be re-rendered */\n\nlet items = []\n\nexport function enqueueRender(component) {\n  if (items.push(component) == 1) {\n    ;(options.debounceRendering || defer)(rerender)\n  }\n}\n\n/** Rerender all enqueued dirty components */\nexport function rerender() {\n\tlet p\n\twhile ( (p = items.pop()) ) {\n    renderComponent(p)\n\t}\n}","import { extend } from '../util'\nimport options from '../options'\n\nconst mapping = options.mapping\n/**\n * Check if two nodes are equivalent.\n *\n * @param {Node} node\t\t\tDOM Node to compare\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\n * @param {boolean} [hydrating=false]\tIf true, ignores component constructors when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    return node.splitText !== undefined\n  }\n  if (typeof vnode.nodeName === 'string') {\n    var ctor = mapping[vnode.nodeName]\n    if (ctor) {\n      return hydrating || node._componentConstructor === ctor\n    }\n    return !node._componentConstructor && isNamedNode(node, vnode.nodeName)\n  }\n  return hydrating || node._componentConstructor === vnode.nodeName\n}\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n *\n * @param {Element} node\tA DOM Element to inspect the name of.\n * @param {String} nodeName\tUnnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n  return (\n    node.normalizedNodeName === nodeName ||\n    node.nodeName.toLowerCase() === nodeName.toLowerCase()\n  )\n}\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n *\n * @param {VNode} vnode\n * @returns {Object} props\n */\nexport function getNodeProps(vnode) {\n  let props = extend({}, vnode.attributes)\n  props.children = vnode.children\n\n  let defaultProps = vnode.nodeName.defaultProps\n  if (defaultProps !== undefined) {\n    for (let i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i]\n      }\n    }\n  }\n\n  return props\n}\n","import { IS_NON_DIMENSIONAL } from '../constants'\nimport { applyRef } from '../util'\nimport options from '../options'\n\n/** Create an element with the given nodeName.\n *\t@param {String} nodeName\n *\t@param {Boolean} [isSvg=false]\tIf `true`, creates an element within the SVG namespace.\n *\t@returns {Element} node\n */\nexport function createNode(nodeName, isSvg) {\n  let node = isSvg\n    ? options.doc.createElementNS('http://www.w3.org/2000/svg', nodeName)\n    : options.doc.createElement(nodeName)\n  node.normalizedNodeName = nodeName\n  return node\n}\n\nfunction parseCSSText(cssText) {\n  let cssTxt = cssText.replace(/\\/\\*(.|\\s)*?\\*\\//g, ' ').replace(/\\s+/g, ' ')\n  let style = {},\n    [a, b, rule] = cssTxt.match(/ ?(.*?) ?{([^}]*)}/) || [a, b, cssTxt]\n  let cssToJs = s => s.replace(/\\W+\\w/g, match => match.slice(-1).toUpperCase())\n  let properties = rule\n    .split(';')\n    .map(o => o.split(':').map(x => x && x.trim()))\n  for (let [property, value] of properties) style[cssToJs(property)] = value\n  return style\n}\n\n/** Remove a child node from its parent if attached.\n *\t@param {Element} node\t\tThe node to remove\n */\nexport function removeNode(node) {\n  let parentNode = node.parentNode\n  if (parentNode) parentNode.removeChild(node)\n}\n\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n *\tIf `value` is `null`, the attribute/handler will be removed.\n *\t@param {Element} node\tAn element to mutate\n *\t@param {string} name\tThe name/key to set, such as an event or attribute name\n *\t@param {any} old\tThe last value that was set for this name/node pair\n *\t@param {any} value\tAn attribute value, such as a function to be used as an event handler\n *\t@param {Boolean} isSvg\tAre we currently diffing inside an svg?\n *\t@private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n  if (name === 'className') name = 'class'\n\n  if (name === 'key') {\n    // ignore\n  } else if (name === 'ref') {\n    applyRef(old, null)\n    applyRef(value, node)\n  } else if (name === 'class' && !isSvg) {\n    node.className = value || ''\n  } else if (name === 'style') {\n    if (options.isWeb) {\n      if (!value || typeof value === 'string' || typeof old === 'string') {\n        node.style.cssText = value || ''\n      }\n      if (value && typeof value === 'object') {\n        if (typeof old !== 'string') {\n          for (let i in old) if (!(i in value)) node.style[i] = ''\n        }\n        for (let i in value) {\n          node.style[i] =\n            typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false\n              ? value[i] + 'px'\n              : value[i]\n        }\n      }\n    } else {\n      let oldJson = old,\n        currentJson = value\n      if (typeof old === 'string') {\n        oldJson = parseCSSText(old)\n      }\n      if (typeof value == 'string') {\n        currentJson = parseCSSText(value)\n      }\n\n      let result = {},\n        changed = false\n\n      if (oldJson) {\n        for (let key in oldJson) {\n          if (typeof currentJson == 'object' && !(key in currentJson)) {\n            result[key] = ''\n            changed = true\n          }\n        }\n\n        for (let ckey in currentJson) {\n          if (currentJson[ckey] !== oldJson[ckey]) {\n            result[ckey] = currentJson[ckey]\n            changed = true\n          }\n        }\n\n        if (changed) {\n          node.setStyles(result)\n        }\n      } else {\n        node.setStyles(currentJson)\n      }\n    }\n  } else if (name === 'dangerouslySetInnerHTML') {\n    if (value) node.innerHTML = value.__html || ''\n  } else if (name[0] == 'o' && name[1] == 'n') {\n    let useCapture = name !== (name = name.replace(/Capture$/, ''))\n    name = name.toLowerCase().substring(2)\n    if (value) {\n      if (!old) {\n        node.addEventListener(name, eventProxy, useCapture)\n        if (name == 'tap') {\n          node.addEventListener('touchstart', touchStart, useCapture)\n          node.addEventListener('touchend', touchEnd, useCapture)\n        }\n      }\n    } else {\n      node.removeEventListener(name, eventProxy, useCapture)\n      if (name == 'tap') {\n        node.removeEventListener('touchstart', touchStart, useCapture)\n        node.removeEventListener('touchend', touchEnd, useCapture)\n      }\n    }\n    ;(node._listeners || (node._listeners = {}))[name] = value\n  } else if (name !== 'list' && name !== 'type' && !isSvg && name in node) {\n    setProperty(node, name, value == null ? '' : value)\n    if (value == null || value === false) node.removeAttribute(name)\n  } else {\n    let ns = isSvg && name !== (name = name.replace(/^xlink:?/, ''))\n    if (value == null || value === false) {\n      if (ns)\n        node.removeAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          name.toLowerCase()\n        )\n      else node.removeAttribute(name)\n    } else if (typeof value !== 'function') {\n      if (ns)\n        node.setAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          name.toLowerCase(),\n          value\n        )\n      else node.setAttribute(name, value)\n    }\n  }\n}\n\n/** Attempt to set a DOM property to the given value.\n *\tIE & FF throw for certain property-value combinations.\n */\nfunction setProperty(node, name, value) {\n  try {\n    node[name] = value\n  } catch (e) {}\n}\n\n/** Proxy an event to hooked event handlers\n *\t@private\n */\nfunction eventProxy(e) {\n  return this._listeners[e.type]((options.event && options.event(e)) || e)\n}\n\nfunction touchStart(e) {\n  this.___touchX = e.touches[0].pageX\n  this.___touchY = e.touches[0].pageY\n  this.___scrollTop = document.body.scrollTop\n}\n\nfunction touchEnd(e) {\n  if (\n    Math.abs(e.changedTouches[0].pageX - this.___touchX) < 30 &&\n    Math.abs(e.changedTouches[0].pageY - this.___touchY) < 30 &&\n    Math.abs(document.body.scrollTop - this.___scrollTop) < 30\n  ) {\n    this.dispatchEvent(new CustomEvent('tap', { detail: e }))\n  }\n}","import options from './options'\n\nlet styleId = 0\n\nexport function getCtorName(ctor) {\n  for (let i = 0, len = options.styleCache.length; i < len; i++) {\n    let item = options.styleCache[i]\n\n    if (item.ctor === ctor) {\n      return item.attrName\n    }\n  }\n\n  let attrName = 's' + styleId\n  options.styleCache.push({ ctor, attrName })\n  styleId++\n\n  return attrName\n}\n\n// many thanks to https://github.com/thomaspark/scoper/\nexport function scoper(css, prefix) {\n  prefix = '[' + prefix.toLowerCase() + ']'\n  // https://www.w3.org/TR/css-syntax-3/#lexical\n  css = css.replace(/\\/\\*[^*]*\\*+([^/][^*]*\\*+)*\\//g, '')\n  // eslint-disable-next-line\n    let re = new RegExp('([^\\r\\n,{}:]+)(:[^\\r\\n,{}]+)?(,(?=[^{}]*{)|\\s*{)', 'g')\n  /**\n   * Example:\n   *\n   * .classname::pesudo { color:red }\n   *\n   * g1 is normal selector `.classname`\n   * g2 is pesudo class or pesudo element\n   * g3 is the suffix\n   */\n  css = css.replace(re, (g0, g1, g2, g3) => {\n    if (typeof g2 === 'undefined') {\n      g2 = ''\n    }\n\n    /* eslint-ignore-next-line */\n    if (\n      g1.match(\n        /^\\s*(@media|\\d+%?|@-webkit-keyframes|@keyframes|to|from|@font-face)/\n      )\n    ) {\n      return g1 + g2 + g3\n    }\n\n    let appendClass = g1.replace(/(\\s*)$/, '') + prefix + g2\n    //let prependClass = prefix + ' ' + g1.trim() + g2;\n\n    return appendClass + g3\n    //return appendClass + ',' + prependClass + g3;\n  })\n\n  return css\n}\n\nexport function addStyle(cssText, id) {\n  id = id.toLowerCase()\n  let ele = document.getElementById(id)\n  let head = document.getElementsByTagName('head')[0]\n  if (ele && ele.parentNode === head) {\n    head.removeChild(ele)\n  }\n\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n  someThingStyles.setAttribute('id', id)\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addStyleWithoutId(cssText) {\n  let head = document.getElementsByTagName('head')[0]\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addScopedAttrStatic(vdom, attr) {\n  if (options.scopedStyle) {\n    scopeVdom(attr, vdom)\n  } \n}\n\nexport function addStyleToHead(style, attr) {\n  if (options.scopedStyle) {\n    if (!options.staticStyleMapping[attr]) {\n      addStyle(scoper(style, attr), attr)\n      options.staticStyleMapping[attr] = true\n    }\n  } else if (!options.staticStyleMapping[attr]) {\n    addStyleWithoutId(style)\n    options.staticStyleMapping[attr] = true\n  }\n}\n\nexport function scopeVdom(attr, vdom) {\n  if (typeof vdom === 'object') {\n    vdom.attributes = vdom.attributes || {}\n    vdom.attributes[attr] = ''\n    vdom.css = vdom.css || {}\n    vdom.css[attr] = ''\n    vdom.children.forEach(child => scopeVdom(attr, child))\n  }\n}\n\nexport function scopeHost(vdom, css) {\n  if (typeof vdom === 'object' && css) {\n    vdom.attributes = vdom.attributes || {}\n    for (let key in css) {\n      vdom.attributes[key] = ''\n    }\n  }\n}\n","import { ATTR_KEY } from '../constants'\nimport { isSameNodeType, isNamedNode } from './index'\nimport { buildComponentFromVNode } from './component'\nimport { createNode, setAccessor } from '../dom/index'\nimport { unmountComponent } from './component'\nimport options from '../options'\nimport { applyRef } from '../util'\nimport { removeNode } from '../dom/index'\nimport { isArray } from '../util'\nimport { addStyleToHead, getCtorName } from '../style'\n/** Queue of components that have been mounted and are awaiting componentDidMount */\nexport const mounts = []\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n  let c\n  while ((c = mounts.pop())) {\n    if (options.afterMount) options.afterMount(c)\n    if (c.installed) c.installed()\n    if (c.constructor.css || c.css) {\n      addStyleToHead(c.constructor.css ? c.constructor.css : (typeof c.css === 'function' ? c.css() : c.css), '_s' + getCtorName(c.constructor))\n    }\n  }\n}\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot, updateSelf) {\n  // diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n  if (!diffLevel++) {\n    // when first starting the diff, check if we're diffing an SVG or within an SVG\n    isSvgMode = parent != null && parent.ownerSVGElement !== undefined\n\n    // hydration is indicated by the existing element to be diffed not having a prop cache\n    hydrating = dom != null && !(ATTR_KEY in dom)\n  }\n  let ret\n\n  if (isArray(vnode)) {\n    vnode = {\n      nodeName: 'span',\n      children: vnode\n    }\n  }\n\n  ret = idiff(dom, vnode, context, mountAll, componentRoot, updateSelf)\n  // append the element if its a new parent\n  if (parent && ret.parentNode !== parent) parent.appendChild(ret)\n\n  // diffLevel being reduced to 0 means we're exiting the diff\n  if (!--diffLevel) {\n    hydrating = false\n    // invoke queued componentDidMount lifecycle methods\n    if (!componentRoot) flushMounts()\n  }\n\n  return ret\n}\n\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\nfunction idiff(dom, vnode, context, mountAll, componentRoot, updateSelf) {\n  let out = dom,\n    prevSvgMode = isSvgMode\n\n  // empty values (null, undefined, booleans) render as empty Text nodes\n  if (vnode == null || typeof vnode === 'boolean') vnode = ''\n\n  // If the VNode represents a Component, perform a component diff:\n  let vnodeName = vnode.nodeName\n  if (options.mapping[vnodeName]) {\n    vnode.nodeName = options.mapping[vnodeName]\n    return buildComponentFromVNode(dom, vnode, context, mountAll, updateSelf)\n  }\n  if (typeof vnodeName == 'function') {\n    return buildComponentFromVNode(dom, vnode, context, mountAll, updateSelf)\n  }\n\n  // Fast case: Strings & Numbers create/update Text nodes.\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    // update if it's already a Text node:\n    if (\n      dom &&\n      dom.splitText !== undefined &&\n      dom.parentNode &&\n      (!dom._component || componentRoot)\n    ) {\n      /* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n      if (dom.nodeValue != vnode) {\n        dom.nodeValue = vnode\n      }\n    } else {\n      // it wasn't a Text node: replace it with one and recycle the old Element\n      out = document.createTextNode(vnode)\n      if (dom) {\n        if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n        recollectNodeTree(dom, true)\n      }\n    }\n\n    //ie8 error\n    try {\n      out[ATTR_KEY] = true\n    } catch (e) {}\n\n    return out\n  }\n\n  // Tracks entering and exiting SVG namespace when descending through the tree.\n  isSvgMode =\n    vnodeName === 'svg'\n      ? true\n      : vnodeName === 'foreignObject'\n      ? false\n      : isSvgMode\n\n  // If there's no existing element or it's the wrong type, create a new one:\n  vnodeName = String(vnodeName)\n  if (!dom || !isNamedNode(dom, vnodeName)) {\n    out = createNode(vnodeName, isSvgMode)\n\n    if (dom) {\n      // move children into the replacement node\n      while (dom.firstChild) out.appendChild(dom.firstChild)\n\n      // if the previous Element was mounted into the DOM, replace it inline\n      if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n\n      // recycle the old element (skips non-Element node types)\n      recollectNodeTree(dom, true)\n    }\n  }\n\n  let fc = out.firstChild,\n    props = out[ATTR_KEY],\n    vchildren = vnode.children\n\n  if (props == null) {\n    props = out[ATTR_KEY] = {}\n    for (let a = out.attributes, i = a.length; i--; )\n      props[a[i].name] = a[i].value\n  }\n\n  // Optimization: fast-path for elements containing a single TextNode:\n  if (\n    !hydrating &&\n    vchildren &&\n    vchildren.length === 1 &&\n    typeof vchildren[0] === 'string' &&\n    fc != null &&\n    fc.splitText !== undefined &&\n    fc.nextSibling == null\n  ) {\n    if (fc.nodeValue != vchildren[0]) {\n      fc.nodeValue = vchildren[0]\n    }\n  }\n  // otherwise, if there are existing or new children, diff them:\n  else if ((vchildren && vchildren.length) || fc != null) {\n    innerDiffNode(\n      out,\n      vchildren,\n      context,\n      mountAll,\n      hydrating || props.dangerouslySetInnerHTML != null,\n      updateSelf\n    )\n  }\n\n  // Apply attributes/props from VNode to the DOM Element:\n  diffAttributes(out, vnode.attributes, props)\n\n  // restore previous SVG mode: (in case we're exiting an SVG namespace)\n  isSvgMode = prevSvgMode\n\n  return out\n}\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\n *\t@param {Object} context\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\n *\t@param {Boolean} mountAll\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating, updateSelf) {\n  let originalChildren = dom.childNodes,\n    children = [],\n    keyed = {},\n    keyedLen = 0,\n    min = 0,\n    len = originalChildren.length,\n    childrenLen = 0,\n    vlen = vchildren ? vchildren.length : 0,\n    j,\n    c,\n    f,\n    vchild,\n    child\n\n  // Build up a map of keyed children and an Array of unkeyed children:\n  if (len !== 0) {\n    for (let i = 0; i < len; i++) {\n      let child = originalChildren[i],\n        props = child[ATTR_KEY],\n        key =\n          vlen && props\n            ? child._component\n              ? child._component.__key\n              : props.key\n            : null\n      if (key != null) {\n        keyedLen++\n        keyed[key] = child\n      } else if (\n        props ||\n        (child.splitText !== undefined\n          ? isHydrating\n            ? child.nodeValue.trim()\n            : true\n          : isHydrating)\n      ) {\n        children[childrenLen++] = child\n      }\n    }\n  }\n\n  if (vlen !== 0) {\n    for (let i = 0; i < vlen; i++) {\n      vchild = vchildren[i]\n      child = null\n\n      // attempt to find a node based on key matching\n      let key = vchild.key\n      if (key != null) {\n        if (keyedLen && keyed[key] !== undefined) {\n          child = keyed[key]\n          keyed[key] = undefined\n          keyedLen--\n        }\n      }\n      // attempt to pluck a node of the same type from the existing children\n      else if (!child && min < childrenLen) {\n        for (j = min; j < childrenLen; j++) {\n          if (\n            children[j] !== undefined &&\n            isSameNodeType((c = children[j]), vchild, isHydrating)\n          ) {\n            child = c\n            children[j] = undefined\n            if (j === childrenLen - 1) childrenLen--\n            if (j === min) min++\n            break\n          }\n        }\n      }\n\n      // morph the matched/found/created DOM child to match vchild (deep)\n      child = idiff(child, vchild, context, mountAll, null, updateSelf)\n\n      f = originalChildren[i]\n      if (child && child !== dom && child !== f) {\n        if (f == null) {\n          dom.appendChild(child)\n        } else if (child === f.nextSibling) {\n          removeNode(f)\n        } else {\n          dom.insertBefore(child, f)\n        }\n      }\n    }\n  }\n\n  // remove unused keyed children:\n  if (keyedLen) {\n    for (let i in keyed)\n      if (keyed[i] !== undefined) recollectNodeTree(keyed[i], false)\n  }\n\n  // remove orphaned unkeyed children:\n  while (min <= childrenLen) {\n    if ((child = children[childrenLen--]) !== undefined)\n      recollectNodeTree(child, false)\n  }\n}\n\n/** Recursively recycle (or just unmount) a node and its descendants.\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n  let component = node._component\n  if (component) {\n    // if node is owned by a Component, unmount that component (ends up recursing back here)\n    unmountComponent(component)\n  } else {\n    // If the node's VNode had a ref function, invoke it with null here.\n    // (this is part of the React spec, and smart for unsetting references)\n    if (node[ATTR_KEY] != null) applyRef(node[ATTR_KEY].ref, null)\n\n    if (unmountOnly === false || node[ATTR_KEY] == null) {\n      removeNode(node)\n    }\n\n    removeChildren(node)\n  }\n}\n\n/** Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n  node = node.lastChild\n  while (node) {\n    let next = node.previousSibling\n    recollectNodeTree(node, true)\n    node = next\n  }\n}\n\n/** Apply differences in attributes from a VNode to the given DOM Element.\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n  let name\n\n  // remove attributes no longer present on the vnode by setting them to undefined\n  for (name in old) {\n    if (!(attrs && attrs[name] != null) && old[name] != null) {\n      setAccessor(dom, name, old[name], (old[name] = undefined), isSvgMode)\n    }\n  }\n\n  // add new & update changed attributes\n  for (name in attrs) {\n    if (\n      name !== 'children' &&\n      name !== 'innerHTML' &&\n      (!(name in old) ||\n        attrs[name] !==\n          (name === 'value' || name === 'checked' ? dom[name] : old[name]))\n    ) {\n      setAccessor(dom, name, old[name], (old[name] = attrs[name]), isSvgMode)\n    }\n  }\n}\n","import options from './options'\nimport Component from './component'\n\nconst OBJECTTYPE = '[object Object]'\nconst ARRAYTYPE = '[object Array]'\n\nexport function define(name, ctor) {\n  if(ctor.is === 'WeElement'){\n    options.mapping[name] = ctor\n    if (ctor.use) {\n      ctor.updatePath = getPath(ctor.use)\n    }  \n  } else {\n    let depPaths\n    let config = {}\n    const len = arguments.length\n    if(len === 3){\n      if(typeof arguments[1] === 'function'){\n        ctor = arguments[1]\n        config = arguments[2]\n      } else {\n        depPaths = arguments[1]\n        ctor = arguments[2]\n      }\n    } else if(len === 4){\n      depPaths = arguments[1]\n      ctor = arguments[2]\n      config = arguments[3]\n    }\n    if(typeof config === 'string'){\n      config = { css: config }\n\t\t}\n\n    class Comp extends Component {\n      static use = depPaths\n\n      static css = config.css\n\n\t\t\tstatic propTypes = config.propTypes\n\n\t\t\tstatic defaultProps = config.defaultProps\n\n      render() {\n        return ctor.call(this, this)\n      }\n\n      install() {\n        config.install && config.install.apply(this, arguments)\n      }\n\n      installed() {\n        config.installed && config.installed.apply(this, arguments)\n      }\n\n      uninstall() {\n        config.uninstall && config.uninstall.apply(this, arguments)\n      }\n\n      beforeUpdate() {\n        config.beforeUpdate && config.beforeUpdate.apply(this, arguments)\n      }\n\n      updated() {\n        config.updated && config.updated.apply(this, arguments)\n      }\n\n      beforeRender() {\n        config.beforeRender && config.beforeRender.apply(this, arguments)\n      }\n\n      rendered() {\n        config.rendered && config.rendered.apply(this, arguments)\n      }\n\n      receiveProps() {\n\t\t\t\tif(config.receiveProps){\n\t\t\t\t\treturn config.receiveProps.apply(this, arguments)\n\t\t\t\t}\n      }\n\n\t\t}\n\n\t\tif(config.use){\n\t\t\tif(typeof config.use  === 'function'){\n\t\t\t\tComp.prototype.use = function(){\n\t\t\t\t return config.use.apply(this, arguments)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tComp.prototype.use = function(){\n          return config.use\n        }\n\t\t\t}\n    }\n    \n    if(config.useSelf){\n\t\t\tif(typeof config.useSelf  === 'function'){\n\t\t\t\tComp.prototype.useSelf = function(){\n\t\t\t\t return config.useSelf.apply(this, arguments)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tComp.prototype.useSelf = function(){\n          return config.useSelf\n        }\n\t\t\t}\n\t\t}\n\n    if(Comp.use){\n      Comp.updatePath = getPath(Comp.use)\n    }\n\n    options.mapping[name] = Comp\n  }\n}\n\nexport function getPath(obj) {\n  if (Object.prototype.toString.call(obj) === '[object Array]') {\n    const result = {}\n    obj.forEach(item => {\n      if (typeof item === 'string') {\n        result[item] = true\n      } else {\n        const tempPath = item[Object.keys(item)[0]]\n        if (typeof tempPath === 'string') {\n          result[tempPath] = true\n        } else {\n          if(typeof tempPath[0] === 'string'){\n            result[tempPath[0]] = true\n          }else{\n            tempPath[0].forEach(path => result[path] = true)\n          }\n        }\n      }\n    })\n    return result\n  } else {\n    return getUpdatePath(obj)\n  }\n}\n\nexport function getUpdatePath(data) {\n  const result = {}\n  dataToPath(data, result)\n  return result\n}\n\nfunction dataToPath(data, result) {\n  Object.keys(data).forEach(key => {\n    result[key] = true\n    const type = Object.prototype.toString.call(data[key])\n    if (type === OBJECTTYPE) {\n      _objToPath(data[key], key, result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(data[key], key, result)\n    }\n  })\n}\n\nfunction _objToPath(data, path, result) {\n  Object.keys(data).forEach(key => {\n    result[path + '.' + key] = true\n    delete result[path]\n    const type = Object.prototype.toString.call(data[key])\n    if (type === OBJECTTYPE) {\n      _objToPath(data[key], path + '.' + key, result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(data[key], path + '.' + key, result)\n    }\n  })\n}\n\nfunction _arrayToPath(data, path, result) {\n  data.forEach((item, index) => {\n    result[path + '[' + index + ']'] = true\n    delete result[path]\n    const type = Object.prototype.toString.call(item)\n    if (type === OBJECTTYPE) {\n      _objToPath(item, path + '[' + index + ']', result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(item, path + '[' + index + ']', result)\n    }\n  })\n}\n","import Component from '../component'\nimport { getUse } from '../util'\nimport { getPath } from  '../define'\n/** Retains a pool of Components for re-use, keyed on component name.\n *\tNote: since component names are not unique or even necessarily available, these are primarily a form of sharding.\n *\t@private\n */\nconst components = {}\n\n/** Reclaim a component for later re-use by the recycler. */\nexport function collectComponent(component) {\n  let name = component.constructor.name\n  ;(components[name] || (components[name] = [])).push(component)\n}\n\n/** Create a component. Normalizes differences between PFC's and classful Components. */\nexport function createComponent(Ctor, props, context, vnode) {\n  let list = components[Ctor.name],\n    inst\n\n  if (Ctor.prototype && Ctor.prototype.render) {\n    inst = new Ctor(props, context)\n    Component.call(inst, props, context)\n  } else {\n    inst = new Component(props, context)\n    inst.constructor = Ctor\n    inst.render = doRender\n  }\n  vnode && (inst.scopedCssAttr = vnode.css)\n\n  if ( inst.store && inst.store.data) {\n\t\tif(inst.constructor.use){\n\t\t\tinst.using = getUse(inst.store.data, inst.constructor.use)\n\t\t\tinst.store.instances.push(inst)\n\t\t} else if(inst.use){\n\t\t\tconst use = typeof inst.use === 'function' ? inst.use() : inst.use\n\t\t\tinst._updatePath = getPath(use)\n\t\t\tinst.using = getUse(inst.store.data, use)\n\t\t\tinst.store.instances.push(inst)\n    }\n    \n    if(inst.useSelf){\n\t\t\tconst use = typeof inst.useSelf === 'function' ? inst.useSelf() : inst.useSelf\n\t\t\tinst._updateSelfPath = getPath(use)\n\t\t\tinst.usingSelf = getUse(inst.store.data, use)\n\t\t\tinst.store.updateSelfInstances.push(inst)\n    }\n\n\n  }\n\n  if (list) {\n    for (let i = list.length; i--; ) {\n      if (list[i].constructor === Ctor) {\n        inst.nextBase = list[i].nextBase\n        list.splice(i, 1)\n        break\n      }\n    }\n  }\n  return inst\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, context) {\n  return this.constructor(props, context)\n}\n","import {\n  SYNC_RENDER,\n  NO_RENDER,\n  ASYNC_RENDER,\n  ATTR_KEY\n} from '../constants'\nimport options from '../options'\nimport { extend, applyRef } from '../util'\nimport { enqueueRender } from '../render-queue'\nimport { getNodeProps } from './index'\nimport {\n  diff,\n  mounts,\n  diffLevel,\n  flushMounts,\n  recollectNodeTree,\n  removeChildren\n} from './diff'\nimport { createComponent, collectComponent } from './component-recycler'\nimport { removeNode } from '../dom/index'\nimport {\n  addScopedAttrStatic,\n  getCtorName,\n  scopeHost\n} from '../style'\n\n/** Set a component's `props` (generally derived from JSX attributes).\n *\t@param {Object} props\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n *\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n */\nexport function setComponentProps(component, props, opts, context, mountAll) {\n  if (component._disable) return\n  component._disable = true\n\n  if ((component.__ref = props.ref)) delete props.ref\n  if ((component.__key = props.key)) delete props.key\n\n  if (!component.base || mountAll) {\n    if (component.beforeInstall) component.beforeInstall()\n    if (component.install) component.install()\n  }\n\n  if (context && context !== component.context) {\n    if (!component.prevContext) component.prevContext = component.context\n    component.context = context\n  }\n\n  if (!component.prevProps) component.prevProps = component.props\n  component.props = props\n\n  component._disable = false\n\n  if (opts !== NO_RENDER) {\n    if (\n      opts === SYNC_RENDER ||\n      options.syncComponentUpdates !== false ||\n      !component.base\n    ) {\n      renderComponent(component, SYNC_RENDER, mountAll)\n    } else {\n      enqueueRender(component)\n    }\n  }\n\n  applyRef(component.__ref, component)\n}\n\n\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n *\t@param {Component} component\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n *\t@private\n */\nexport function renderComponent(component, opts, mountAll, isChild, updateSelf) {\n  if (component._disable) return\n\n  let props = component.props,\n    context = component.context,\n    previousProps = component.prevProps || props,\n    previousContext = component.prevContext || context,\n    isUpdate = component.base,\n    nextBase = component.nextBase,\n    initialBase = isUpdate || nextBase,\n    initialChildComponent = component._component,\n    skip = false,\n    rendered,\n    inst,\n    cbase\n\n  // if updating\n  if (isUpdate) {\n    component.props = previousProps\n    component.context = previousContext\n    \n    let receiveResult = true\n    if (component.receiveProps) {\n      receiveResult = component.receiveProps(props, previousProps)\n    }\n    if (receiveResult !== false) {\n      skip = false\n      if (component.beforeUpdate) {\n        component.beforeUpdate(props, context)\n      }\n    } else {\n      skip = true\n    }\n    component.props = props\n    component.context = context\n  }\n\n  component.prevProps = component.prevContext = component.nextBase = null\n\n  if (!skip) {\n    component.beforeRender && component.beforeRender()\n    rendered = component.render(props, context)\n\n    //don't rerender\n    if (component.constructor.css || component.css) {\n      addScopedAttrStatic(\n        rendered,\n        '_s' + getCtorName(component.constructor)\n      )\n    }\n\n    scopeHost(rendered, component.scopedCssAttr)\n\n    // context to pass to the child, can be updated via (grand-)parent component\n    if (component.getChildContext) {\n      context = extend(extend({}, context), component.getChildContext())\n    }\n\n    let childComponent = rendered && rendered.nodeName,\n      toUnmount,\n      base,\n      ctor = options.mapping[childComponent]\n\n    if (ctor) {\n      // set up high order component link\n\n      let childProps = getNodeProps(rendered)\n      inst = initialChildComponent\n\n      if (inst && inst.constructor === ctor && childProps.key == inst.__key) {\n        setComponentProps(inst, childProps, SYNC_RENDER, context, false)\n      } else {\n        toUnmount = inst\n\n        component._component = inst = createComponent(ctor, childProps, context)\n        inst.nextBase = inst.nextBase || nextBase\n        inst._parentComponent = component\n        setComponentProps(inst, childProps, NO_RENDER, context, false)\n        renderComponent(inst, SYNC_RENDER, mountAll, true)\n      }\n\n      base = inst.base\n    } else {\n      cbase = initialBase\n\n      // destroy high order component link\n      toUnmount = initialChildComponent\n      if (toUnmount) {\n        cbase = component._component = null\n      }\n\n      if (initialBase || opts === SYNC_RENDER) {\n        if (cbase) cbase._component = null\n        base = diff(\n          cbase,\n          rendered,\n          context,\n          mountAll || !isUpdate,\n          initialBase && initialBase.parentNode,\n          true,\n          updateSelf\n        )\n      }\n    }\n\n    if (initialBase && base !== initialBase && inst !== initialChildComponent) {\n      let baseParent = initialBase.parentNode\n      if (baseParent && base !== baseParent) {\n        baseParent.replaceChild(base, initialBase)\n\n        if (!toUnmount) {\n          initialBase._component = null\n          recollectNodeTree(initialBase, false)\n        }\n      }\n    }\n\n    if (toUnmount) {\n      unmountComponent(toUnmount)\n    }\n\n    component.base = base\n    if (base && !isChild) {\n      let componentRef = component,\n        t = component\n      while ((t = t._parentComponent)) {\n        ;(componentRef = t).base = base\n      }\n      base._component = componentRef\n      base._componentConstructor = componentRef.constructor\n    }\n  }\n\n  if (!isUpdate || mountAll) {\n    mounts.unshift(component)\n  } else if (!skip) {\n    // Ensure that pending componentDidMount() hooks of child components\n    // are called before the componentDidUpdate() hook in the parent.\n    // Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n    // flushMounts();\n\n    if (component.afterUpdate) {\n      //deprecated\n      component.afterUpdate(previousProps, previousContext)\n    }\n    if (component.updated) {\n      component.updated(previousProps, previousContext)\n    }\n    if (options.afterUpdate) options.afterUpdate(component)\n  }\n\n  if (component._renderCallbacks != null) {\n    while (component._renderCallbacks.length)\n      component._renderCallbacks.pop().call(component)\n  }\n\n  if (!diffLevel && !isChild) flushMounts()\n}\n\n/** Apply the Component referenced by a VNode to the DOM.\n *\t@param {Element} dom\tThe DOM node to mutate\n *\t@param {VNode} vnode\tA Component-referencing VNode\n *\t@returns {Element} dom\tThe created/mutated element\n *\t@private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll, updateSelf) {\n  let c = dom && dom._component,\n    originalComponent = c,\n    oldDom = dom,\n    isDirectOwner = c && dom._componentConstructor === vnode.nodeName,\n    isOwner = isDirectOwner,\n    props = getNodeProps(vnode)\n  while (c && !isOwner && (c = c._parentComponent)) {\n    isOwner = c.constructor === vnode.nodeName\n  }\n\n  if (c && isOwner && (!mountAll || c._component)) {\n    if(!updateSelf){\n      setComponentProps(c, props, ASYNC_RENDER, context, mountAll)\n    }\n    dom = c.base\n  } else {\n    if (originalComponent && !isDirectOwner) {\n      unmountComponent(originalComponent)\n      dom = oldDom = null\n    }\n\n    c = createComponent(vnode.nodeName, props, context, vnode)\n    if (dom && !c.nextBase) {\n      c.nextBase = dom\n      // passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n      oldDom = null\n    }\n    setComponentProps(c, props, SYNC_RENDER, context, mountAll)\n    dom = c.base\n\n    if (oldDom && dom !== oldDom) {\n      oldDom._component = null\n      recollectNodeTree(oldDom, false)\n    }\n  }\n\n  return dom\n}\n\n/** Remove a component from the DOM and recycle it.\n *\t@param {Component} component\tThe Component instance to unmount\n *\t@private\n */\nexport function unmountComponent(component) {\n  if (options.beforeUnmount) options.beforeUnmount(component)\n\n  let base = component.base\n\n  component._disable = true\n\n\tif (component.uninstall) component.uninstall()\n\n\tif (component.store && component.store.instances) {\n    let i, len\n\t\tfor (i = 0, len = component.store.instances.length; i < len; i++) {\n\t\t\tif (component.store.instances[i] === component) {\n\t\t\t\tcomponent.store.instances.splice(i, 1)\n\t\t\t\tbreak\n\t\t\t}\n    }\n    \n    for (i = 0, len = component.store.updateSelfInstances.length; i < len; i++) {\n\t\t\tif (component.store.updateSelfInstances[i] === component) {\n\t\t\t\tcomponent.store.updateSelfInstances.splice(i, 1)\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n  component.base = null\n\n  // recursively tear down & recollect high-order component children:\n  let inner = component._component\n  if (inner) {\n    unmountComponent(inner)\n  } else if (base) {\n    if (base[ATTR_KEY] != null) applyRef(base[ATTR_KEY].ref, null)\n\n    component.nextBase = base\n\n    removeNode(base)\n    collectComponent(component)\n\n    removeChildren(base)\n  }\n\n  applyRef(component.__ref, null)\n}\n","/* \n * obaa 2.0.3\n * By dntzhang\n * Github: https://github.com/Tencent/omi/tree/master/packages/obaa\n * MIT Licensed.\n */\n\n \n// $_r_: root\n// $_c_: prop change callback\n// $_p_: path\n\nfunction obaa(target, arr, callback) {\n\n  var eventPropArr = []\n  if (isArray(target)) {\n    if (target.length === 0) {\n      target.$_o_ = {\n        $_r_: target,\n        $_p_: '#'\n      }\n    }\n    mock(target, target)\n  }\n  for (var prop in target) {\n    if (target.hasOwnProperty(prop)) {\n      if (callback) {\n        if (isArray(arr) && isInArray(arr, prop)) {\n          eventPropArr.push(prop)\n          watch(target, prop, null, target)\n        } else if (isString(arr) && prop == arr) {\n          eventPropArr.push(prop)\n          watch(target, prop, null, target)\n        }\n      } else {\n        eventPropArr.push(prop)\n        watch(target, prop, null, target)\n      }\n    }\n  }\n  if (!target.$_c_) {\n    target.$_c_ = []\n  }\n  var propChanged = callback ? callback : arr\n  target.$_c_.push({\n    all: !callback,\n    propChanged: propChanged,\n    eventPropArr: eventPropArr\n  })\n}\n\nvar triggerStr = [\n  'concat',\n  'copyWithin',\n  'fill',\n  'pop',\n  'push',\n  'reverse',\n  'shift',\n  'sort',\n  'splice',\n  'unshift',\n  'size'\n].join(',')\n\nvar methods = [\n  'concat',\n  'copyWithin',\n  'entries',\n  'every',\n  'fill',\n  'filter',\n  'find',\n  'findIndex',\n  'forEach',\n  'includes',\n  'indexOf',\n  'join',\n  'keys',\n  'lastIndexOf',\n  'map',\n  'pop',\n  'push',\n  'reduce',\n  'reduceRight',\n  'reverse',\n  'shift',\n  'slice',\n  'some',\n  'sort',\n  'splice',\n  'toLocaleString',\n  'toString',\n  'unshift',\n  'values',\n  'size'\n]\n\nfunction mock(target, root) {\n  methods.forEach(function (item) {\n    target[item] = function () {\n      var old = Array.prototype.slice.call(this, 0)\n      var result = Array.prototype[item].apply(\n        this,\n        Array.prototype.slice.call(arguments)\n      )\n      if (new RegExp('\\\\b' + item + '\\\\b').test(triggerStr)) {\n        for (var cprop in this) {\n          if (\n            this.hasOwnProperty(cprop) &&\n            !isFunction(this[cprop])\n          ) {\n            watch(this, cprop, this.$_o_.$_p_, root)\n          }\n        }\n        //todo\n        onPropertyChanged(\n          'Array-' + item,\n          this,\n          old,\n          this,\n          this.$_o_.$_p_,\n          root\n        )\n      }\n      return result\n    }\n    target[\n      'pure' + item.substring(0, 1).toUpperCase() + item.substring(1)\n    ] = function () {\n      return Array.prototype[item].apply(\n        this,\n        Array.prototype.slice.call(arguments)\n      )\n    }\n  })\n}\n\nfunction watch(target, prop, path, root) {\n  if (prop === '$_o_') return\n  if (isFunction(target[prop])) return\n  if (!target.$_o_) target.$_o_ = {\n    $_r_: root\n  }\n  if (path !== undefined && path !== null) {\n    target.$_o_.$_p_ = path\n  } else {\n    target.$_o_.$_p_ = '#'\n  }\n\n  var currentValue = (target.$_o_[prop] = target[prop])\n  Object.defineProperty(target, prop, {\n    get: function () {\n      return this.$_o_[prop]\n    },\n    set: function (value) {\n      var old = this.$_o_[prop]\n      this.$_o_[prop] = value\n      onPropertyChanged(\n        prop,\n        value,\n        old,\n        this,\n        target.$_o_.$_p_,\n        root\n      )\n    },\n    configurable: true,\n    enumerable: true\n  })\n  if (typeof currentValue == 'object') {\n    if (isArray(currentValue)) {\n      mock(currentValue, root)\n      if (currentValue.length === 0) {\n        if (!currentValue.$_o_) currentValue.$_o_ = {}\n        if (path !== undefined && path !== null) {\n          currentValue.$_o_.$_p_ = path + '-' + prop\n        } else {\n          currentValue.$_o_.$_p_ = '#' + '-' + prop\n        }\n      }\n    }\n    for (var cprop in currentValue) {\n      if (currentValue.hasOwnProperty(cprop)) {\n        watch(\n          currentValue,\n          cprop,\n          target.$_o_.$_p_ + '-' + prop,\n          root\n        )\n      }\n    }\n  }\n}\n\n\nfunction onPropertyChanged(prop, value, oldValue, target, path, root) {\n  if (value !== oldValue && (!(nan(value) && nan(oldValue))) && root.$_c_) {\n    var rootName = getRootName(prop, path)\n    for (\n      var i = 0, len = root.$_c_.length;\n      i < len;\n      i++\n    ) {\n      var handler = root.$_c_[i]\n      if (\n        handler.all ||\n        isInArray(handler.eventPropArr, rootName) ||\n        rootName.indexOf('Array-') === 0\n      ) {\n        handler.propChanged.call(target, prop, value, oldValue, path)\n      }\n    }\n  }\n\n  if (prop.indexOf('Array-') !== 0 && typeof value === 'object') {\n    watch(target, prop, target.$_o_.$_p_, root)\n  }\n}\n\nfunction isFunction(obj) {\n  return Object.prototype.toString.call(obj) == '[object Function]'\n}\n\n\n\nfunction isArray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nfunction isString(obj) {\n  return typeof obj === 'string'\n}\n\nfunction isInArray(arr, item) {\n  for (var i = arr.length; --i > -1;) {\n    if (item === arr[i]) return true\n  }\n  return false\n}\n\nfunction nan(value) {\n  return typeof value === \"number\" && isNaN(value)\n}\n\nfunction getRootName(prop, path) {\n  if (path === '#') {\n    return prop\n  }\n  return path.split('-')[1]\n}\n\nobaa.add = function (obj, prop) {\n  watch(obj, prop, obj.$_o_.$_p_, obj.$_o_.$_r_)\n}\n\nobaa.set = function (obj, prop, value) {\n  watch(obj, prop, obj.$_o_.$_p_, obj.$_o_.$_r_)\n  obj[prop] = value\n}\n\nArray.prototype.size = function (length) {\n  this.length = length\n}\n\nexport default obaa\n\n","import { diff } from './vdom/diff'\nimport obaa from './obaa'\nimport { getUse } from './util'\n\n/** Render JSX into a `parent` Element.\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n *\t@param {Element} parent\t\tDOM element to render into\n *\t@param {object} [store]\n *\t@public\n */\nexport function render(vnode, parent, store, empty, merge) {\n  parent = typeof parent === 'string' ? document.querySelector(parent) : parent\n  obsStore(store)\n\n  if (empty) {\n    while (parent.firstChild) {\n      parent.removeChild(parent.firstChild)\n    }\n  }\n\n  if (merge) {\n    merge =\n      typeof merge === 'string'\n        ? document.querySelector(merge)\n        : merge\n  }\n\n  return diff(merge, vnode, store, false, parent, false)\n}\n\nfunction obsStore(store){\n  if (store && store.data) {\n    store.instances = []\n    store.updateSelfInstances = []\n    extendStoreUpate(store)\n\n    obaa(store.data, (prop, val, old, path) => {\n\t\t\tconst patchs = {}\n      const key = fixPath(path + '-' + prop)\n      patchs[key] = true\n\t\t\tstore.update(patchs)\n    })\n  }\n}\n\nexport function merge(vnode, merge, store) {\n  obsStore(store)\n\n  merge =\n    typeof merge === 'string'\n      ? document.querySelector(merge)\n      : merge\n\n  return diff(merge, vnode, store)\n}\n\nfunction extendStoreUpate(store) {\n  store.update = function(patch) {\n    const updateAll = matchGlobalData(this.globalData, patch)\n    if (Object.keys(patch).length > 0) {\n      this.instances.forEach(instance => {\n        if (\n          updateAll ||\n          this.updateAll ||\n          (instance.constructor.updatePath &&\n\t\t\t\t\t\tneedUpdate(patch, instance.constructor.updatePath)) ||\n\t\t\t\t\t\t(instance._updatePath &&\n\t\t\t\t\t\t\tneedUpdate(patch, instance._updatePath))\n        ) {\n\t\t\t\t\t//update this.use\n\t\t\t\t\tif(instance.constructor.use){\n\t\t\t\t\t\tinstance.using = getUse(store.data, instance.constructor.use)\n\t\t\t\t\t} else if(instance.use){\n\t\t\t\t\t\tinstance.using = getUse(store.data, typeof instance.use === 'function' ? instance.use() : instance.use)\n\t\t\t\t\t}\n\n          instance.update()\n        }\n      })\n\n      this.updateSelfInstances.forEach(instance => {\n        if (instance._updateSelfPath && needUpdate(patch, instance._updateSelfPath)) {\n          instance.usingSelf = getUse(store.data, typeof instance.useSelf === 'function' ? instance.useSelf() : instance.useSelf)\n          instance.updateSelf()\n        }\n      })\n      \n      this.onChange && this.onChange(patch)\n    }\n  }\n}\n\nexport function matchGlobalData(globalData, diffResult) {\n  if (!globalData) return false\n  for (let keyA in diffResult) {\n    if (globalData.indexOf(keyA) > -1) {\n      return true\n    }\n    for (let i = 0, len = globalData.length; i < len; i++) {\n      if (includePath(keyA, globalData[i])) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nexport function needUpdate(diffResult, updatePath) {\n  for (let keyA in diffResult) {\n    if (updatePath[keyA]) {\n      return true\n    }\n    for (let keyB in updatePath) {\n      if (includePath(keyA, keyB)) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nfunction includePath(pathA, pathB) {\n  if (pathA.indexOf(pathB) === 0) {\n    const next = pathA.substr(pathB.length, 1)\n    if (next === '[' || next === '.') {\n      return true\n    }\n  }\n  return false\n}\n\nexport function fixPath(path) {\n  let mpPath = ''\n  const arr = path.replace('#-', '').split('-')\n  arr.forEach((item, index) => {\n    if (index) {\n      if (isNaN(Number(item))) {\n        mpPath += '.' + item\n      } else {\n        mpPath += '[' + item + ']'\n      }\n    } else {\n      mpPath += item\n    }\n  })\n  return mpPath\n}\n\nfunction getArrayPatch(path, store) {\n  const arr = path.replace('/', '').split('/')\n  let current = store.data[arr[0]]\n  for (let i = 1, len = arr.length; i < len - 1; i++) {\n    current = current[arr[i]]\n  }\n  return { k: fixArrPath(path), v: current }\n}\n\nfunction fixArrPath(path) {\n  let mpPath = ''\n  const arr = path.replace('/', '').split('/')\n  const len = arr.length\n  arr.forEach((item, index) => {\n    if (index < len - 1) {\n      if (index) {\n        if (isNaN(Number(item))) {\n          mpPath += '.' + item\n        } else {\n          mpPath += '[' + item + ']'\n        }\n      } else {\n        mpPath += item\n      }\n    }\n  })\n  return mpPath\n}\n","import { define } from './define'\n\nexport function tag(name) {\n  return function(target) {\n    define(name, target)\n  }\n}\n","/**\n * classNames based on https://github.com/JedWatson/classnames\n * by Jed Watson\n * Licensed under the MIT License\n * https://github.com/JedWatson/classnames/blob/master/LICENSE\n * modified by dntzhang\n */\n\nvar hasOwn = {}.hasOwnProperty\n\nexport function classNames() {\n  var classes = []\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    if (!arg) continue\n\n    var argType = typeof arg\n\n    if (argType === 'string' || argType === 'number') {\n      classes.push(arg)\n    } else if (Array.isArray(arg) && arg.length) {\n      var inner = classNames.apply(null, arg)\n      if (inner) {\n        classes.push(inner)\n      }\n    } else if (argType === 'object') {\n      for (var key in arg) {\n        if (hasOwn.call(arg, key) && arg[key]) {\n          classes.push(key)\n        }\n      }\n    }\n  }\n\n  return classes.join(' ')\n}\n\nexport function extractClass() {\n  const [props, ...args] = Array.prototype.slice.call(arguments, 0)\n  if (props) {\n    if (props['class']) {\n      args.unshift(props['class'])\n      delete props['class']\n    } else if (props.className) {\n      args.unshift(props.className)\n      delete props.className\n    }\n  }\n  if (args.length > 0) {\n    return { 'class': classNames.apply(null, args) }\n  }\n}\n","/**\n * preact-render-to-string based on preact-render-to-string\n * by Jason Miller\n * Licensed under the MIT License\n * https://github.com/developit/preact-render-to-string\n *\n * modified by dntzhang\n */\n\nimport options from './options'\n\nimport {\n  addScopedAttrStatic,\n  getCtorName,\n  scopeHost,\n  scoper\n} from './style'\n\n\nconst encodeEntities = s => String(s)\n  .replace(/&/g, '&amp;')\n  .replace(/</g, '&lt;')\n  .replace(/>/g, '&gt;')\n  .replace(/\"/g, '&quot;');\n\nconst indent = (s, char) => String(s).replace(/(\\n+)/g, '$1' + (char || '\\t'));\n\nconst mapping = options.mapping\n\nconst VOID_ELEMENTS = /^(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/;\n\nconst isLargeString = (s, length, ignoreLines) => (String(s).length > (length || 40) || (!ignoreLines && String(s).indexOf('\\n') !== -1) || String(s).indexOf('<') !== -1);\n\nconst JS_TO_CSS = {};\n\n// Convert an Object style to a CSSText string\nfunction styleObjToCss(s) {\n  let str = '';\n  for (let prop in s) {\n    let val = s[prop];\n    if (val != null) {\n      if (str) str += ' ';\n      // str += jsToCss(prop);\n      str += JS_TO_CSS[prop] || (JS_TO_CSS[prop] = prop.replace(/([A-Z])/g, '-$1').toLowerCase());\n      str += ': ';\n      str += val;\n      if (typeof val === 'number' && IS_NON_DIMENSIONAL.test(prop) === false) {\n        str += 'px';\n      }\n      str += ';';\n    }\n  }\n  return str || undefined;\n}\n\nexport function renderToString(vnode, opts, store, isSvgMode){\n  store = store || {};\n  opts = Object.assign({\n    scopedCSS: true\n  },opts)\n  const css = {}\n  const html = _renderToString(vnode, opts, store, isSvgMode, css)\n  return {\n    css: Object.values(css),\n    html: html\n  }\n}\n\n/** The default export is an alias of `render()`. */\nfunction _renderToString(vnode, opts, store, isSvgMode, css) {\n  if (vnode == null || typeof vnode === 'boolean') {\n    return '';\n  }\n\n  let nodeName = vnode.nodeName,\n    attributes = vnode.attributes,\n    isComponent = false;\n  \n\n  let pretty = true && opts.pretty,\n    indentChar = pretty && typeof pretty === 'string' ? pretty : '\\t';\n\n  // #text nodes\n  if (typeof vnode !== 'object' && !nodeName) {\n    return encodeEntities(vnode);\n  }\n\n  // components\n  const ctor = mapping[nodeName]\n  if (ctor) {\n    isComponent = true;\n\n    let props = getNodeProps(vnode),\n      rendered;\n    // class-based components\n    let c = new ctor(props, store);\n    // turn off stateful re-rendering:\n    c._disable = c.__x = true;\n    c.props = props;\n    c.store = store;\n    if (c.install) c.install();\n    if (c.beforeRender) c.beforeRender();\n    rendered = c.render(c.props, c.store);\n\n    if(opts.scopedCSS){\n\n      if (c.constructor.css || c.css) {\n\n        const cssStr = c.constructor.css ? c.constructor.css : (typeof c.css === 'function' ? c.css() : c.css)\n        const cssAttr = '_s' + getCtorName(c.constructor)\n        css[cssAttr] = {\n          id: cssAttr,\n          css: scoper(cssStr, cssAttr)\n        }\n        addScopedAttrStatic(\n          rendered,\n          cssAttr\n        )\n      }\n    \n      c.scopedCSSAttr = vnode.css\n      scopeHost(rendered, c.scopedCSSAttr)\n    }\n\n    return _renderToString(rendered, opts, store, false, css);\n  }\n\n\n  // render JSX to HTML\n  let s = '', html;\n\n  if (attributes) {\n    let attrs = Object.keys(attributes);\n\n    // allow sorting lexicographically for more determinism (useful for tests, such as via preact-jsx-chai)\n    if (opts && opts.sortAttributes === true) attrs.sort();\n\n    for (let i = 0; i < attrs.length; i++) {\n      let name = attrs[i],\n        v = attributes[name];\n      if (name === 'children') continue;\n\n      if (name.match(/[\\s\\n\\\\/='\"\\0<>]/)) continue;\n\n      if (!(opts && opts.allAttributes) && (name === 'key' || name === 'ref')) continue;\n\n      if (name === 'className') {\n        if (attributes['class']) continue;\n        name = 'class';\n      }\n      else if (isSvgMode && name.match(/^xlink:?./)) {\n        name = name.toLowerCase().replace(/^xlink:?/, 'xlink:');\n      }\n\n      if (name === 'style' && v && typeof v === 'object') {\n        v = styleObjToCss(v);\n      }\n\n      let hooked = opts.attributeHook && opts.attributeHook(name, v, store, opts, isComponent);\n      if (hooked || hooked === '') {\n        s += hooked;\n        continue;\n      }\n\n      if (name === 'dangerouslySetInnerHTML') {\n        html = v && v.__html;\n      }\n      else if ((v || v === 0 || v === '') && typeof v !== 'function') {\n        if (v === true || v === '') {\n          v = name;\n          // in non-xml mode, allow boolean attributes\n          if (!opts || !opts.xml) {\n            s += ' ' + name;\n            continue;\n          }\n        }\n        s += ` ${name}=\"${encodeEntities(v)}\"`;\n      }\n    }\n  }\n\n  // account for >1 multiline attribute\n  if (pretty) {\n    let sub = s.replace(/^\\n\\s*/, ' ');\n    if (sub !== s && !~sub.indexOf('\\n')) s = sub;\n    else if (pretty && ~s.indexOf('\\n')) s += '\\n';\n  }\n\n  s = `<${nodeName}${s}>`;\n  if (String(nodeName).match(/[\\s\\n\\\\/='\"\\0<>]/)) throw s;\n\n  let isVoid = String(nodeName).match(VOID_ELEMENTS);\n  if (isVoid) s = s.replace(/>$/, ' />');\n\n  let pieces = [];\n  if (html) {\n    // if multiline, indent.\n    if (pretty && isLargeString(html)) {\n      html = '\\n' + indentChar + indent(html, indentChar);\n    }\n    s += html;\n  }\n  else if (vnode.children) {\n    let hasLarge = pretty && ~s.indexOf('\\n');\n    for (let i = 0; i < vnode.children.length; i++) {\n      let child = vnode.children[i];\n      if (child != null && child !== false) {\n        let childSvgMode = nodeName === 'svg' ? true : nodeName === 'foreignObject' ? false : isSvgMode,\n          ret = _renderToString(child, opts, store, childSvgMode, css);\n        if (pretty && !hasLarge && isLargeString(ret)) hasLarge = true;\n        if (ret) pieces.push(ret);\n      }\n    }\n    if (pretty && hasLarge) {\n      for (let i = pieces.length; i--;) {\n        pieces[i] = '\\n' + indentChar + indent(pieces[i], indentChar);\n      }\n    }\n  }\n\n  if (pieces.length) {\n    s += pieces.join('');\n  }\n  else if (opts && opts.xml) {\n    return s.substring(0, s.length - 1) + ' />';\n  }\n\n  if (!isVoid) {\n    if (pretty && ~s.indexOf('\\n')) s += '\\n';\n    s += `</${nodeName}>`;\n  }\n\n  return s\n}\n\nfunction assign(obj, props) {\n  for (let i in props) obj[i] = props[i];\n  return obj;\n}\n\nfunction getNodeProps(vnode) {\n  let props = assign({}, vnode.attributes);\n  props.children = vnode.children;\n\n  let defaultProps = vnode.nodeName.defaultProps;\n  if (defaultProps !== undefined) {\n    for (let i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i];\n      }\n    }\n  }\n\n  return props;\n}","function getGlobal() {\n  if (\n    typeof global !== 'object' ||\n    !global ||\n    global.Math !== Math ||\n    global.Array !== Array\n  ) {\n    if (typeof self !== 'undefined') {\n      return self\n    } else if (typeof window !== 'undefined') {\n      return window\n    } else if (typeof global !== 'undefined') {\n      return global\n    }\n    return (function() {\n      return this\n    })()\n  }\n  return global\n}\n\n/** Global options\n *\t@public\n *\t@namespace options {Object}\n */\nexport default {\n  scopedStyle: true,\n  mapping: {},\n  isWeb: true,\n  staticStyleMapping: {},\n  doc: typeof document === 'object' ? document : null,\n  root: getGlobal(),\n  //styleCache :[{ctor:ctor,ctorName:ctorName,style:style}]\n  styleCache: []\n  //componentChange(component, element) { },\n  /** If `true`, `prop` changes trigger synchronous component updates.\n   *\t@name syncComponentUpdates\n   *\t@type Boolean\n   *\t@default true\n   */\n  //syncComponentUpdates: true,\n\n  /** Processes all created VNodes.\n   *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n   */\n  //vnode(vnode) { }\n\n  /** Hook invoked after a component is mounted. */\n  //afterMount(component) { },\n\n  /** Hook invoked after the DOM is updated with a component's latest render. */\n  //afterUpdate(component) { }\n\n  /** Hook invoked immediately before a component is unmounted. */\n  // beforeUnmount(component) { }\n}\n","import { FORCE_RENDER } from './constants'\nimport { renderComponent } from './vdom/component'\nimport options from './options'\nimport { nProps, assign } from './util'\n\nlet id = 0\n\nexport default class Component {\n  static is = 'WeElement'\n\n  constructor(props, store) {\n    this.props = assign({ },\n      this.constructor.defaultProps,\n      props\n    )\n    this.elementId = id++\n\n    this._preCss = null\n\n    this.store = store\n  }\n\n  update(callback) {\n    if(this._willUpdate) return\n    this._willUpdate = true\n    if (callback)\n      (this._renderCallbacks = this._renderCallbacks || []).push(callback)\n    renderComponent(this, FORCE_RENDER)\n    if (options.componentChange) options.componentChange(this, this.base)\n    this._willUpdate = false\n  }\n\n  updateSelf() {\n    if(this._willUpdateSelf) return\n    this._willUpdateSelf = true\n    renderComponent(this, FORCE_RENDER, null, null, true)\n    this._willUpdateSelf = false\n  }\n\n\n  fire(type, data) {\n    Object.keys(this.props).every(key => {\n      if ('on' + type.toLowerCase() === key.toLowerCase()) {\n        this.props[key]({ detail: data })\n        return false\n      }\n      return true\n    })\n  }\n\n  render() {}\n}\n","export function getHost(component) {\n  let base = component.base\n  if (base) {\n    while (base.parentNode) {\n      if (base.parentNode._component) {\n        return base.parentNode._component\n      } else {\n        base = base.parentNode\n      }\n    }\n  }\n}","var n=function(t,r,u,e){for(var p=1;p<r.length;p++){var s=r[p++],a=\"number\"==typeof s?u[s]:s;1===r[p]?e[0]=a:2===r[p]?(e[1]=e[1]||{})[r[++p]]=a:3===r[p]?e[1]=Object.assign(e[1]||{},a):e.push(r[p]?t.apply(null,n(t,a,u,[\"\",null])):a)}return e},t=function(n){for(var t,r,u=1,e=\"\",p=\"\",s=[0],a=function(n){1===u&&(n||(e=e.replace(/^\\s*\\n\\s*|\\s*\\n\\s*$/g,\"\")))?s.push(n||e,0):3===u&&(n||e)?(s.push(n||e,1),u=2):2===u&&\"...\"===e&&n?s.push(n,3):2===u&&e&&!n?s.push(!0,2,e):4===u&&r&&(s.push(n||e,2,r),r=\"\"),e=\"\"},f=0;f<n.length;f++){f&&(1===u&&a(),a(f));for(var h=0;h<n[f].length;h++)t=n[f][h],1===u?\"<\"===t?(a(),s=[s],u=3):e+=t:p?t===p?p=\"\":e+=t:'\"'===t||\"'\"===t?p=t:\">\"===t?(a(),u=1):u&&(\"=\"===t?(u=4,r=e,e=\"\"):\"/\"===t?(a(),3===u&&(s=s[0]),u=s,(s=s[0]).push(u,4),u=0):\" \"===t||\"\\t\"===t||\"\\n\"===t||\"\\r\"===t?(a(),u=2):e+=t)}return a(),s},r=\"function\"==typeof Map,u=r?new Map:{},e=r?function(n){var r=u.get(n);return r||u.set(n,r=t(n)),r}:function(n){for(var r=\"\",e=0;e<n.length;e++)r+=n[e].length+\"-\"+n[e];return u[r]||(u[r]=t(n))};export default function(t){var r=n(this,e(t),arguments,[]);return r.length>1?r:r[0]}\n","import { h, h as createElement } from './h'\nimport { cloneElement } from './clone-element'\nimport Component from './component'\nimport { render, merge } from './render'\nimport { rerender } from './render-queue'\nimport options from './options'\nimport { define } from './define'\nimport { rpx } from './rpx'\nimport { tag } from './tag'\nimport { classNames, extractClass } from './class'\nimport { getHost } from './get-host'\nimport { renderToString } from './render-to-string'\nimport htm from 'htm'\nimport obaa from './obaa'\n\nconst html = htm.bind(h)\n\nconst WeElement = Component\nconst defineElement = define\nfunction createRef() {\n  return {}\n}\n\noptions.root.Omi = {\n  h,\n  createElement,\n  cloneElement,\n  createRef,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n  defineElement,\n  classNames,\n  extractClass,\n  getHost,\n  renderToString,\n  tag,\n  merge,\n  html,\n  htm,\n  obaa\n}\noptions.root.omi = options.root.Omi\noptions.root.Omi.version = 'omio-2.5.1'\n\nexport default {\n  h,\n  createElement,\n  cloneElement,\n  createRef,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n  defineElement,\n  classNames,\n  extractClass,\n  getHost,\n  renderToString,\n  tag,\n  merge,\n  html,\n  htm,\n  obaa\n}\n\nexport {\n  h,\n  createElement,\n  cloneElement,\n  createRef,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n  defineElement,\n  classNames,\n  extractClass,\n  getHost,\n  renderToString,\n  tag,\n  merge,\n  html,\n  htm,\n  obaa\n}\n"]}