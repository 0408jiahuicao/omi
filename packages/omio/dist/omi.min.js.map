{"version":3,"sources":["../src/vnode.js","../src/h.js","../src/util.js","../src/clone-element.js","../src/constants.js","../src/render-queue.js","../src/vdom/index.js","../src/dom/index.js","../src/vdom/diff.js","../src/vdom/component-recycler.js","../src/style.js","../src/obaa.js","../src/tick.js","../src/observe.js","../src/vdom/component.js","../src/render.js","../src/define.js","../src/options.js","../src/component.js","../src/rpx.js","../src/model-view.js","../src/omi.js"],"names":["VNode","h","nodeName","attributes","lastSimple","child","simple","i","children","EMPTY_CHILDREN","arguments","length","stack","push","pop","String","p","options","isWeb","map","value","key","vnode","extend","obj","props","isArray","Object","prototype","toString","call","nProps","result","keys","forEach","cloneElement","slice","ATTR_KEY","component","debounceRendering","defer","rerender","items","element","base","renderComponent","list","componentChange","isNamedNode","_componentConstructor","node","normalizedNodeName","toLowerCase","defaultProps","doc","createElementNS","createElement","_ref","createNode","a","b","cssTxt","isSvg","rule","split","o","x","trim","s","replace","Array","Symbol","iterator","_ref3","properties","next","done","_ref2","property","style","parseCSSText","match","cssText","parentNode","removeChild","setAccessor","name","old","IS_NON_DIMENSIONAL","test","oldJson","currentJson","changed","ckey","setStyles","substring","eventProxy","useCapture","removeEventListener","_listeners","innerHTML","setProperty","removeAttribute","ns","addEventListener","setAttributeNS","setAttribute","e","this","type","event","diffLevel","c","mounts","isSvgMode","afterMount","installed","diff","dom","context","mountAll","parent","componentRoot","ret","idiff","ownerSVGElement","undefined","hydrating","out","prevSvgMode","vnodeName","mapping","_component","buildComponentFromVNode","document","createTextNode","replaceChild","recollectNodeTree","t","appendChild","vchildren","innerDiffNode","fc","nodeValue","isHydrating","j","originalChildren","keyed","keyedLen","childrenLen","vlen","_child","f","__key","vchild","splitText","len","min","nextSibling","removeNode","insertBefore","unmountOnly","removeChildren","previousSibling","attrs","collectComponent","inst","components","Ctor","render","constructor","Component","createComponent","Omi","doRender","nextBase","store","splice","window","data","getCtorName","ctor","item","styleCache","attrName","styleId","prefix","css","g0","g1","g2","g3","addStyle","id","ele","appendClass","head","getElementsByTagName","someThingStyles","getElementById","textContent","ActiveXObject","styleSheet","addStyleWithoutId","attr","scopeVdom","_preCss","scopedStyle","vdom","staticStyleMapping","addScopedAttrStatic","scoper","fireTick","size","scope","callbacks","nextItem","fn","timeout","nextTickCallback","clearTimeout","proxyUpdate","update","setComponentProps","opts","_disable","beforeInstall","install","observe","receiveProps","componentWillReceiveProps","prevContext","enqueueRender","prevProps","__ref","isChild","previousProps","previousState","isUpdate","initialBase","initialChildComponent","previousContext","rendered","shouldComponentUpdate","cbase","componentWillUpdate","beforeUpdate","FORCE_RENDER","staticCss","addScopedAttr","elementId","childComponent","childProps","getNodeProps","toUnmount","baseParent","SYNC_RENDER","componentRef","unshift","_parentComponent","componentDidUpdate","afterUpdate","updated","_renderCallbacks","flushMounts","oldDom","originalComponent","isDirectOwner","unmountComponent","isOwner","beforeUnmount","ref","instance","Constructor","TypeError","merge","getUpdatePath","OBJECTTYPE","ARRAYTYPE","define","updatePath","dataToPath","_objToPath","_arrayToPath","path","index","_classCallCheck$1","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","root","global","Math","br","hr","h1","h2","h3","h4","h5","h6","abbr","address","bdi","bdo","blockquote","cite","code","del","ins","dfn","em","strong","samp","kbd","var","mark","pre","q","ruby","rp","rt","small","sub","sup","time","u","wbr","form","input","textarea","button","select","option","optgroup","label","fieldset","datalist","legend","output","iframe","img","canvas","figure","figcaption","audio","source","video","track","nav","link","ul","ol","li","dl","dt","dd","menu","command","table","caption","th","td","tr","thead","tbody","tfoot","col","colgroup","div","main","span","header","footer","section","article","aside","details","dialog","summary","progress","meter","meta","area","script","noscript","embed","object","param","view","scroll-view","swiper","icon","text","checkbox","radio","picker","picker-view","slider","switch","navigator","image","contact-button","block","usePromise","Promise","__config__","platform","systemVersion","resolve","then","bind","setTimeout","ASYNC_RENDER","obaa","target","arr","callback","_observe","$observer","eventPropArr","prop","isInArray","$observeProps","$observerPath","isString","watch","propertyChangedHandler","onPropertyChanged","propChanged","all","handler","oldValue","rootName","_getRootName","mock","methods","apply","RegExp","cprop","hasOwnProperty","isFunction","toUpperCase","get","currentValue","triggerStr","add","set","exec","_classCallCheck","_willUpdate","_Component","ModelView","str","mergeUpdate","WeElement","instances","rpx","module","exports"],"mappings":"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","file":"omi.min.js","sourcesContent":["/** Virtual DOM Node */\nexport function VNode() {}\n","import { VNode } from './vnode'\nimport options from './options'\n\nconst stack = []\n\nconst EMPTY_CHILDREN = []\n\nconst map = {\n  br: 'view',\n  hr: 'view',\n\n  p: 'view',\n  h1: 'view',\n  h2: 'view',\n  h3: 'view',\n  h4: 'view',\n  h5: 'view',\n  h6: 'view',\n  abbr: 'view',\n  address: 'view',\n  b: 'view',\n  bdi: 'view',\n  bdo: 'view',\n  blockquote: 'view',\n  cite: 'view',\n  code: 'view',\n  del: 'view',\n  ins: 'view',\n  dfn: 'view',\n  em: 'view',\n  strong: 'view',\n  samp: 'view',\n  kbd: 'view',\n  var: 'view',\n  i: 'view',\n  mark: 'view',\n  pre: 'view',\n  q: 'view',\n  ruby: 'view',\n  rp: 'view',\n  rt: 'view',\n  s: 'view',\n  small: 'view',\n  sub: 'view',\n  sup: 'view',\n  time: 'view',\n  u: 'view',\n  wbr: 'view',\n\n  form: 'form',\n  input: 'input',\n  textarea: 'textarea',\n  button: 'button',\n  select: 'picker',\n  option: 'view',\n  optgroup: 'view',\n  label: 'label',\n  fieldset: 'view',\n  datalist: 'picker',\n  legend: 'view',\n  output: 'view',\n\n  iframe: 'view',\n\n  img: 'image',\n  canvas: 'canvas',\n  figure: 'view',\n  figcaption: 'view',\n\n  audio: 'audio',\n  source: 'audio',\n  video: 'video',\n  track: 'video',\n\n  a: 'navigator',\n  nav: 'view',\n  link: 'navigator',\n\n  ul: 'view',\n  ol: 'view',\n  li: 'view',\n  dl: 'view',\n  dt: 'view',\n  dd: 'view',\n  menu: 'view',\n  command: 'view',\n\n  table: 'view',\n  caption: 'view',\n  th: 'view',\n  td: 'view',\n  tr: 'view',\n  thead: 'view',\n  tbody: 'view',\n  tfoot: 'view',\n  col: 'view',\n  colgroup: 'view',\n\n  div: 'view',\n  main: 'view',\n  //'span': 'label',\n  span: 'text',\n  header: 'view',\n  footer: 'view',\n  section: 'view',\n  article: 'view',\n  aside: 'view',\n  details: 'view',\n  dialog: 'view',\n  summary: 'view',\n\n  progress: 'progress',\n  meter: 'progress',\n  head: 'view',\n  meta: 'view',\n  base: 'text',\n  map: 'map',\n  area: 'navigator',\n\n  script: 'view',\n  noscript: 'view',\n  embed: 'view',\n  object: 'view',\n  param: 'view',\n\n  view: 'view',\n  'scroll-view': 'scroll-view',\n  swiper: 'swiper',\n  icon: 'icon',\n  text: 'text',\n\n  checkbox: 'checkbox',\n  radio: 'radio',\n  picker: 'picker',\n  'picker-view': 'picker-view',\n  slider: 'slider',\n  switch: 'switch',\n  navigator: 'navigator',\n\n  image: 'image',\n  'contact-button': 'contact-button',\n  block: 'block'\n}\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a lightweight representation\n * of the structure of a DOM tree. This structure can be realized by recursively comparing it against\n * the current _actual_ DOM structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string} nodeName\tAn element name. Ex: `div`, `a`, `span`, etc.\n * @param {Object} attributes\tAny attributes/props to set on the created element.\n * @param rest\t\t\tAdditional arguments are taken to be children to append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n  let children = EMPTY_CHILDREN,\n    lastSimple,\n    child,\n    simple,\n    i\n  for (i = arguments.length; i-- > 2; ) {\n    stack.push(arguments[i])\n  }\n  if (attributes && attributes.children != null) {\n    if (!stack.length) stack.push(attributes.children)\n    delete attributes.children\n  }\n  while (stack.length) {\n    if ((child = stack.pop()) && child.pop !== undefined) {\n      for (i = child.length; i--; ) stack.push(child[i])\n    } else {\n      if (typeof child === 'boolean') child = null\n\n      if ((simple = typeof nodeName !== 'function')) {\n        if (child == null) child = ''\n        else if (typeof child === 'number') child = String(child)\n        else if (typeof child !== 'string') simple = false\n      }\n\n      if (simple && lastSimple) {\n        children[children.length - 1] += child\n      } else if (children === EMPTY_CHILDREN) {\n        children = [child]\n      } else {\n        children.push(child)\n      }\n\n      lastSimple = simple\n    }\n  }\n\n  let p = new VNode()\n  p.nodeName = options.isWeb ? nodeName : map[nodeName]\n  p.attributes = attributes == null ? undefined : attributes\n  if (children && typeof children[0] === 'string' && !options.isWeb) {\n    if (p.attributes) {\n      p.attributes.value = children[0]\n    } else {\n      p.attributes = { value: children[0] }\n    }\n  } else {\n    p.children = children\n  }\n  p.key = attributes == null ? undefined : attributes.key\n\n  // if a \"vnode hook\" is defined, pass every created VNode to it\n  if (options.vnode !== undefined) options.vnode(p)\n\n  return p\n}\n","/**\n *  Copy all properties from `props` onto `obj`.\n *  @param {Object} obj\t\tObject onto which properties should be copied.\n *  @param {Object} props\tObject from which to copy properties.\n *  @returns obj\n *  @private\n */\nexport function extend(obj, props) {\n  for (let i in props) obj[i] = props[i]\n  return obj\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n *\n * @param {Function} callback\n */\n\nlet usePromise = typeof Promise == 'function'\n\n// for native\nif (\n  typeof document !== 'object' &&\n  typeof global !== 'undefined' &&\n  global.__config__\n) {\n  if (global.__config__.platform === 'android') {\n    usePromise = true\n  } else {\n    let systemVersion =\n      (global.__config__.systemVersion &&\n        global.__config__.systemVersion.split('.')[0]) ||\n      0\n    if (systemVersion > 8) {\n      usePromise = true\n    }\n  }\n}\n\nexport const defer = usePromise\n  ? Promise.resolve().then.bind(Promise.resolve())\n  : setTimeout\n\n  export function isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]'\n  }\n  \n  export function nProps(props) {\n    if (!props || isArray(props)) return {}\n    const result = {}\n    Object.keys(props).forEach(key => {\n      result[key] = props[key].value\n    })\n    return result\n  }","import { extend } from './util'\nimport { h } from './h'\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {VNode} vnode\t\tThe virtual DOM element to clone\n * @param {Object} props\tAttributes/props to add when cloning\n * @param {VNode} rest\t\tAny additional arguments will be used as replacement children.\n */\nexport function cloneElement(vnode, props) {\n  return h(\n    vnode.nodeName,\n    extend(extend({}, vnode.attributes), props),\n    arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children\n  )\n}\n","// render modes\n\nexport const NO_RENDER = 0\nexport const SYNC_RENDER = 1\nexport const FORCE_RENDER = 2\nexport const ASYNC_RENDER = 3\n\nexport const ATTR_KEY = '__preactattr_'\n\n// DOM properties that should NOT have \"px\" added when numeric\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i\n","import options from './options'\nimport { defer } from './util'\nimport { renderComponent } from './vdom/component'\n\n/** Managed queue of dirty components to be re-rendered */\n\nlet items = []\n\nexport function enqueueRender(component) {\n  if (items.push(component) == 1) {\n    ;(options.debounceRendering || defer)(rerender)\n  }\n}\n\nexport function rerender() {\n  let p,\n    list = items\n  items = []\n  let element\n  while ((p = list.pop())) {\n    element = p.base\n    renderComponent(p)\n  }\n  if (!list.length) {\n    if (options.componentChange) options.componentChange(p, element)\n  }\n}\n","import { extend } from '../util'\nimport options from '../options'\n/**\n * Check if two nodes are equivalent.\n *\n * @param {Node} node\t\t\tDOM Node to compare\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\n * @param {boolean} [hydrating=false]\tIf true, ignores component constructors when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    return node.splitText !== undefined\n  }\n  const ctor = options.mapping[vnode.nodeName]\n  if (ctor) {\n    return hydrating || node._componentConstructor === ctor\n  }\n  return !node._componentConstructor && isNamedNode(node, vnode.nodeName)\n}\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n *\n * @param {Element} node\tA DOM Element to inspect the name of.\n * @param {String} nodeName\tUnnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n  return (\n    node.normalizedNodeName === nodeName ||\n    node.nodeName.toLowerCase() === nodeName.toLowerCase()\n  )\n}\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n *\n * @param {VNode} vnode\n * @returns {Object} props\n */\nexport function getNodeProps(vnode) {\n  let props = extend({}, vnode.attributes)\n  props.children = vnode.children\n\n  let defaultProps = vnode.nodeName.defaultProps\n  if (defaultProps !== undefined) {\n    for (let i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i]\n      }\n    }\n  }\n\n  return props\n}\n","import { IS_NON_DIMENSIONAL } from '../constants'\nimport options from '../options'\n\n/** Create an element with the given nodeName.\n *\t@param {String} nodeName\n *\t@param {Boolean} [isSvg=false]\tIf `true`, creates an element within the SVG namespace.\n *\t@returns {Element} node\n */\nexport function createNode(nodeName, isSvg) {\n  let node = isSvg\n    ? options.doc.createElementNS('http://www.w3.org/2000/svg', nodeName)\n    : options.doc.createElement(nodeName)\n  node.normalizedNodeName = nodeName\n  return node\n}\n\nfunction parseCSSText(cssText) {\n  let cssTxt = cssText.replace(/\\/\\*(.|\\s)*?\\*\\//g, ' ').replace(/\\s+/g, ' ')\n  let style = {},\n    [a, b, rule] = cssTxt.match(/ ?(.*?) ?{([^}]*)}/) || [a, b, cssTxt]\n  let cssToJs = s => s.replace(/\\W+\\w/g, match => match.slice(-1).toUpperCase())\n  let properties = rule\n    .split(';')\n    .map(o => o.split(':').map(x => x && x.trim()))\n  for (let [property, value] of properties) style[cssToJs(property)] = value\n  return style\n}\n\n/** Remove a child node from its parent if attached.\n *\t@param {Element} node\t\tThe node to remove\n */\nexport function removeNode(node) {\n  let parentNode = node.parentNode\n  if (parentNode) parentNode.removeChild(node)\n}\n\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n *\tIf `value` is `null`, the attribute/handler will be removed.\n *\t@param {Element} node\tAn element to mutate\n *\t@param {string} name\tThe name/key to set, such as an event or attribute name\n *\t@param {any} old\tThe last value that was set for this name/node pair\n *\t@param {any} value\tAn attribute value, such as a function to be used as an event handler\n *\t@param {Boolean} isSvg\tAre we currently diffing inside an svg?\n *\t@private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n  if (name === 'className') name = 'class'\n\n  if (name === 'key') {\n    // ignore\n  } else if (name === 'ref') {\n    if (old) old(null)\n    if (value) value(node)\n  } else if (name === 'class' && !isSvg) {\n    node.className = value || ''\n  } else if (name === 'style') {\n    if (options.isWeb) {\n      if (!value || typeof value === 'string' || typeof old === 'string') {\n        node.style.cssText = value || ''\n      }\n      if (value && typeof value === 'object') {\n        if (typeof old !== 'string') {\n          for (let i in old) if (!(i in value)) node.style[i] = ''\n        }\n        for (let i in value) {\n          node.style[i] =\n            typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false\n              ? value[i] + 'px'\n              : value[i]\n        }\n      }\n    } else {\n      let oldJson = old,\n        currentJson = value\n      if (typeof old === 'string') {\n        oldJson = parseCSSText(old)\n      }\n      if (typeof value == 'string') {\n        currentJson = parseCSSText(value)\n      }\n\n      let result = {},\n        changed = false\n\n      if (oldJson) {\n        for (let key in oldJson) {\n          if (typeof currentJson == 'object' && !(key in currentJson)) {\n            result[key] = ''\n            changed = true\n          }\n        }\n\n        for (let ckey in currentJson) {\n          if (currentJson[ckey] !== oldJson[ckey]) {\n            result[ckey] = currentJson[ckey]\n            changed = true\n          }\n        }\n\n        if (changed) {\n          node.setStyles(result)\n        }\n      } else {\n        node.setStyles(currentJson)\n      }\n    }\n  } else if (name === 'dangerouslySetInnerHTML') {\n    if (value) node.innerHTML = value.__html || ''\n  } else if (name[0] == 'o' && name[1] == 'n') {\n    let useCapture = name !== (name = name.replace(/Capture$/, ''))\n    name = name.toLowerCase().substring(2)\n    if (value) {\n      if (!old) node.addEventListener(name, eventProxy, useCapture)\n    } else {\n      node.removeEventListener(name, eventProxy, useCapture)\n    }\n    ;(node._listeners || (node._listeners = {}))[name] = value\n  } else if (name !== 'list' && name !== 'type' && !isSvg && name in node) {\n    setProperty(node, name, value == null ? '' : value)\n    if (value == null || value === false) node.removeAttribute(name)\n  } else {\n    let ns = isSvg && name !== (name = name.replace(/^xlink:?/, ''))\n    if (value == null || value === false) {\n      if (ns)\n        node.removeAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          name.toLowerCase()\n        )\n      else node.removeAttribute(name)\n    } else if (typeof value !== 'function') {\n      if (ns)\n        node.setAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          name.toLowerCase(),\n          value\n        )\n      else node.setAttribute(name, value)\n    }\n  }\n}\n\n/** Attempt to set a DOM property to the given value.\n *\tIE & FF throw for certain property-value combinations.\n */\nfunction setProperty(node, name, value) {\n  try {\n    node[name] = value\n  } catch (e) {}\n}\n\n/** Proxy an event to hooked event handlers\n *\t@private\n */\nfunction eventProxy(e) {\n  return this._listeners[e.type]((options.event && options.event(e)) || e)\n}\n","import { ATTR_KEY } from '../constants'\nimport { isSameNodeType, isNamedNode } from './index'\nimport { buildComponentFromVNode } from './component'\nimport { createNode, setAccessor } from '../dom/index'\nimport { unmountComponent } from './component'\nimport options from '../options'\nimport { removeNode } from '../dom/index'\n\n/** Queue of components that have been mounted and are awaiting componentDidMount */\nexport const mounts = []\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n  let c\n  while ((c = mounts.pop())) {\n    if (options.afterMount) options.afterMount(c)\n    if (c.componentDidMount) c.componentDidMount()\n    if (c.installed) c.installed()\n  }\n}\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n  // diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n  if (!diffLevel++) {\n    // when first starting the diff, check if we're diffing an SVG or within an SVG\n    isSvgMode = parent != null && parent.ownerSVGElement !== undefined\n\n    // hydration is indicated by the existing element to be diffed not having a prop cache\n    hydrating = dom != null && !(ATTR_KEY in dom)\n  }\n\n  let ret = idiff(dom, vnode, context, mountAll, componentRoot)\n\n  // append the element if its a new parent\n  if (parent && ret.parentNode !== parent) parent.appendChild(ret)\n\n  // diffLevel being reduced to 0 means we're exiting the diff\n  if (!--diffLevel) {\n    hydrating = false\n    // invoke queued componentDidMount lifecycle methods\n    if (!componentRoot) flushMounts()\n  }\n\n  return ret\n}\n\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n  let out = dom,\n    prevSvgMode = isSvgMode\n\n  // empty values (null, undefined, booleans) render as empty Text nodes\n  if (vnode == null || typeof vnode === 'boolean') vnode = ''\n\n  // If the VNode represents a Component, perform a component diff:\n  let vnodeName = vnode.nodeName\n  if (options.mapping[vnodeName]) {\n    vnode.nodeName = options.mapping[vnodeName]\n    return buildComponentFromVNode(dom, vnode, context, mountAll)\n  }\n\n  // Fast case: Strings & Numbers create/update Text nodes.\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    // update if it's already a Text node:\n    if (\n      dom &&\n      dom.splitText !== undefined &&\n      dom.parentNode &&\n      (!dom._component || componentRoot)\n    ) {\n      /* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n      if (dom.nodeValue != vnode) {\n        dom.nodeValue = vnode\n      }\n    } else {\n      // it wasn't a Text node: replace it with one and recycle the old Element\n      out = document.createTextNode(vnode)\n      if (dom) {\n        if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n        recollectNodeTree(dom, true)\n      }\n    }\n\n    out[ATTR_KEY] = true\n\n    return out\n  }\n\n  // Tracks entering and exiting SVG namespace when descending through the tree.\n  isSvgMode =\n    vnodeName === 'svg'\n      ? true\n      : vnodeName === 'foreignObject'\n      ? false\n      : isSvgMode\n\n  // If there's no existing element or it's the wrong type, create a new one:\n  vnodeName = String(vnodeName)\n  if (!dom || !isNamedNode(dom, vnodeName)) {\n    out = createNode(vnodeName, isSvgMode)\n\n    if (dom) {\n      // move children into the replacement node\n      while (dom.firstChild) out.appendChild(dom.firstChild)\n\n      // if the previous Element was mounted into the DOM, replace it inline\n      if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n\n      // recycle the old element (skips non-Element node types)\n      recollectNodeTree(dom, true)\n    }\n  }\n\n  let fc = out.firstChild,\n    props = out[ATTR_KEY],\n    vchildren = vnode.children\n\n  if (props == null) {\n    props = out[ATTR_KEY] = {}\n    for (let a = out.attributes, i = a.length; i--; )\n      props[a[i].name] = a[i].value\n  }\n\n  // Optimization: fast-path for elements containing a single TextNode:\n  if (\n    !hydrating &&\n    vchildren &&\n    vchildren.length === 1 &&\n    typeof vchildren[0] === 'string' &&\n    fc != null &&\n    fc.splitText !== undefined &&\n    fc.nextSibling == null\n  ) {\n    if (fc.nodeValue != vchildren[0]) {\n      fc.nodeValue = vchildren[0]\n    }\n  }\n  // otherwise, if there are existing or new children, diff them:\n  else if ((vchildren && vchildren.length) || fc != null) {\n    innerDiffNode(\n      out,\n      vchildren,\n      context,\n      mountAll,\n      hydrating || props.dangerouslySetInnerHTML != null\n    )\n  }\n\n  // Apply attributes/props from VNode to the DOM Element:\n  diffAttributes(out, vnode.attributes, props)\n\n  // restore previous SVG mode: (in case we're exiting an SVG namespace)\n  isSvgMode = prevSvgMode\n\n  return out\n}\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\n *\t@param {Object} context\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\n *\t@param {Boolean} mountAll\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n  let originalChildren = dom.childNodes,\n    children = [],\n    keyed = {},\n    keyedLen = 0,\n    min = 0,\n    len = originalChildren.length,\n    childrenLen = 0,\n    vlen = vchildren ? vchildren.length : 0,\n    j,\n    c,\n    f,\n    vchild,\n    child\n\n  // Build up a map of keyed children and an Array of unkeyed children:\n  if (len !== 0) {\n    for (let i = 0; i < len; i++) {\n      let child = originalChildren[i],\n        props = child[ATTR_KEY],\n        key =\n          vlen && props\n            ? child._component\n              ? child._component.__key\n              : props.key\n            : null\n      if (key != null) {\n        keyedLen++\n        keyed[key] = child\n      } else if (\n        props ||\n        (child.splitText !== undefined\n          ? isHydrating\n            ? child.nodeValue.trim()\n            : true\n          : isHydrating)\n      ) {\n        children[childrenLen++] = child\n      }\n    }\n  }\n\n  if (vlen !== 0) {\n    for (let i = 0; i < vlen; i++) {\n      vchild = vchildren[i]\n      child = null\n\n      // attempt to find a node based on key matching\n      let key = vchild.key\n      if (key != null) {\n        if (keyedLen && keyed[key] !== undefined) {\n          child = keyed[key]\n          keyed[key] = undefined\n          keyedLen--\n        }\n      }\n      // attempt to pluck a node of the same type from the existing children\n      else if (!child && min < childrenLen) {\n        for (j = min; j < childrenLen; j++) {\n          if (\n            children[j] !== undefined &&\n            isSameNodeType((c = children[j]), vchild, isHydrating)\n          ) {\n            child = c\n            children[j] = undefined\n            if (j === childrenLen - 1) childrenLen--\n            if (j === min) min++\n            break\n          }\n        }\n      }\n\n      // morph the matched/found/created DOM child to match vchild (deep)\n      child = idiff(child, vchild, context, mountAll)\n\n      f = originalChildren[i]\n      if (child && child !== dom && child !== f) {\n        if (f == null) {\n          dom.appendChild(child)\n        } else if (child === f.nextSibling) {\n          removeNode(f)\n        } else {\n          dom.insertBefore(child, f)\n        }\n      }\n    }\n  }\n\n  // remove unused keyed children:\n  if (keyedLen) {\n    for (let i in keyed)\n      if (keyed[i] !== undefined) recollectNodeTree(keyed[i], false)\n  }\n\n  // remove orphaned unkeyed children:\n  while (min <= childrenLen) {\n    if ((child = children[childrenLen--]) !== undefined)\n      recollectNodeTree(child, false)\n  }\n}\n\n/** Recursively recycle (or just unmount) a node and its descendants.\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n  let component = node._component\n  if (component) {\n    // if node is owned by a Component, unmount that component (ends up recursing back here)\n    unmountComponent(component)\n  } else {\n    // If the node's VNode had a ref function, invoke it with null here.\n    // (this is part of the React spec, and smart for unsetting references)\n    if (node[ATTR_KEY] != null && node[ATTR_KEY].ref) node[ATTR_KEY].ref(null)\n\n    if (unmountOnly === false || node[ATTR_KEY] == null) {\n      removeNode(node)\n    }\n\n    removeChildren(node)\n  }\n}\n\n/** Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n  node = node.lastChild\n  while (node) {\n    let next = node.previousSibling\n    recollectNodeTree(node, true)\n    node = next\n  }\n}\n\n/** Apply differences in attributes from a VNode to the given DOM Element.\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n  let name\n\n  // remove attributes no longer present on the vnode by setting them to undefined\n  for (name in old) {\n    if (!(attrs && attrs[name] != null) && old[name] != null) {\n      setAccessor(dom, name, old[name], (old[name] = undefined), isSvgMode)\n    }\n  }\n\n  // add new & update changed attributes\n  for (name in attrs) {\n    if (\n      name !== 'children' &&\n      name !== 'innerHTML' &&\n      (!(name in old) ||\n        attrs[name] !==\n          (name === 'value' || name === 'checked' ? dom[name] : old[name]))\n    ) {\n      setAccessor(dom, name, old[name], (old[name] = attrs[name]), isSvgMode)\n    }\n  }\n}\n","import Component from '../component'\nimport options from '../options'\n/** Retains a pool of Components for re-use, keyed on component name.\n *\tNote: since component names are not unique or even necessarily available, these are primarily a form of sharding.\n *\t@private\n */\nconst components = {}\n\n/** Reclaim a component for later re-use by the recycler. */\nexport function collectComponent(component) {\n  let name = component.constructor.name\n  ;(components[name] || (components[name] = [])).push(component)\n}\n\n/** Create a component. Normalizes differences between PFC's and classful Components. */\nexport function createComponent(Ctor, props, context) {\n  let list = components[Ctor.name],\n    inst\n\n  if (Ctor.prototype && Ctor.prototype.render) {\n    inst = new Ctor(props, context)\n    Component.call(inst, props, context)\n  } else {\n    inst = new Component(props, context)\n    inst.constructor = Ctor\n    inst.render = doRender\n  }\n  inst.store = options.store\n  if (window && window.Omi) {\n    window.Omi.instances.push(inst)\n  }\n\n  if (list) {\n    for (let i = list.length; i--; ) {\n      if (list[i].constructor === Ctor) {\n        inst.nextBase = list[i].nextBase\n        list.splice(i, 1)\n        break\n      }\n    }\n  }\n  return inst\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, data, context) {\n  return this.constructor(props, context)\n}\n","import options from './options'\n\nlet styleId = 0\n\nexport function getCtorName(ctor) {\n  for (let i = 0, len = options.styleCache.length; i < len; i++) {\n    let item = options.styleCache[i]\n\n    if (item.ctor === ctor) {\n      return item.attrName\n    }\n  }\n\n  let attrName = 'static_' + styleId\n  options.styleCache.push({ ctor, attrName })\n  styleId++\n\n  return attrName\n}\n\n// many thanks to https://github.com/thomaspark/scoper/\nexport function scoper(css, prefix) {\n  prefix = '[' + prefix.toLowerCase() + ']'\n  // https://www.w3.org/TR/css-syntax-3/#lexical\n  css = css.replace(/\\/\\*[^*]*\\*+([^/][^*]*\\*+)*\\//g, '')\n  // eslint-disable-next-line\n    let re = new RegExp('([^\\r\\n,{}:]+)(:[^\\r\\n,{}]+)?(,(?=[^{}]*{)|\\s*{)', 'g')\n  /**\n   * Example:\n   *\n   * .classname::pesudo { color:red }\n   *\n   * g1 is normal selector `.classname`\n   * g2 is pesudo class or pesudo element\n   * g3 is the suffix\n   */\n  css = css.replace(re, (g0, g1, g2, g3) => {\n    if (typeof g2 === 'undefined') {\n      g2 = ''\n    }\n\n    /* eslint-ignore-next-line */\n    if (\n      g1.match(\n        /^\\s*(@media|\\d+%?|@-webkit-keyframes|@keyframes|to|from|@font-face)/\n      )\n    ) {\n      return g1 + g2 + g3\n    }\n\n    let appendClass = g1.replace(/(\\s*)$/, '') + prefix + g2\n    //let prependClass = prefix + ' ' + g1.trim() + g2;\n\n    return appendClass + g3\n    //return appendClass + ',' + prependClass + g3;\n  })\n\n  return css\n}\n\nexport function addStyle(cssText, id) {\n  id = id.toLowerCase()\n  let ele = document.getElementById(id)\n  let head = document.getElementsByTagName('head')[0]\n  if (ele && ele.parentNode === head) {\n    head.removeChild(ele)\n  }\n\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n  someThingStyles.setAttribute('id', id)\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addStyleWithoutId(cssText) {\n  let head = document.getElementsByTagName('head')[0]\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addScopedAttr(vdom, style, attr, component) {\n  if (options.scopedStyle) {\n    scopeVdom(attr, vdom)\n    style = scoper(style, attr)\n    if (style !== component._preCss) {\n      addStyle(style, attr)\n    }\n  } else if (style !== component._preCss) {\n    addStyleWithoutId(style)\n  }\n  component._preCss = style\n}\n\nexport function addScopedAttrStatic(vdom, style, attr) {\n  if (options.scopedStyle) {\n    scopeVdom(attr, vdom)\n    if (!options.staticStyleMapping[attr]) {\n      addStyle(scoper(style, attr), attr)\n      options.staticStyleMapping[attr] = true\n    }\n  } else if (!options.staticStyleMapping[attr]) {\n    addStyleWithoutId(style)\n    options.staticStyleMapping[attr] = true\n  }\n}\n\nexport function scopeVdom(attr, vdom) {\n  if (typeof vdom !== 'string') {\n    vdom.attributes = vdom.attributes || {}\n    vdom.attributes[attr] = ''\n    vdom.children.forEach(child => scopeVdom(attr, child))\n  }\n}\n","/* obaa 1.0.0\n * By dntzhang\n * Github: https://github.com/Tencent/omi\n * MIT Licensed.\n */\n\nvar obaa = function(target, arr, callback) {\n  var _observe = function(target, arr, callback) {\n    if (!target.$observer) target.$observer = this\n    var $observer = target.$observer\n    var eventPropArr = []\n    if (obaa.isArray(target)) {\n      if (target.length === 0) {\n        target.$observeProps = {}\n        target.$observeProps.$observerPath = '#'\n      }\n      $observer.mock(target)\n    }\n    for (var prop in target) {\n      if (target.hasOwnProperty(prop)) {\n        if (callback) {\n          if (obaa.isArray(arr) && obaa.isInArray(arr, prop)) {\n            eventPropArr.push(prop)\n            $observer.watch(target, prop)\n          } else if (obaa.isString(arr) && prop == arr) {\n            eventPropArr.push(prop)\n            $observer.watch(target, prop)\n          }\n        } else {\n          eventPropArr.push(prop)\n          $observer.watch(target, prop)\n        }\n      }\n    }\n    $observer.target = target\n    if (!$observer.propertyChangedHandler) $observer.propertyChangedHandler = []\n    var propChanged = callback ? callback : arr\n    $observer.propertyChangedHandler.push({\n      all: !callback,\n      propChanged: propChanged,\n      eventPropArr: eventPropArr\n    })\n  }\n  _observe.prototype = {\n    onPropertyChanged: function(prop, value, oldValue, target, path) {\n      if (value !== oldValue && this.propertyChangedHandler) {\n        var rootName = obaa._getRootName(prop, path)\n        for (\n          var i = 0, len = this.propertyChangedHandler.length;\n          i < len;\n          i++\n        ) {\n          var handler = this.propertyChangedHandler[i]\n          if (\n            handler.all ||\n            obaa.isInArray(handler.eventPropArr, rootName) ||\n            rootName.indexOf('Array-') === 0\n          ) {\n            handler.propChanged.call(this.target, prop, value, oldValue, path)\n          }\n        }\n      }\n      if (prop.indexOf('Array-') !== 0 && typeof value === 'object') {\n        this.watch(target, prop, target.$observeProps.$observerPath)\n      }\n    },\n    mock: function(target) {\n      var self = this\n      obaa.methods.forEach(function(item) {\n        target[item] = function() {\n          var old = Array.prototype.slice.call(this, 0)\n          var result = Array.prototype[item].apply(\n            this,\n            Array.prototype.slice.call(arguments)\n          )\n          if (new RegExp('\\\\b' + item + '\\\\b').test(obaa.triggerStr)) {\n            for (var cprop in this) {\n              if (this.hasOwnProperty(cprop) && !obaa.isFunction(this[cprop])) {\n                self.watch(this, cprop, this.$observeProps.$observerPath)\n              }\n            }\n            //todo\n            self.onPropertyChanged(\n              'Array-' + item,\n              this,\n              old,\n              this,\n              this.$observeProps.$observerPath\n            )\n          }\n          return result\n        }\n        target[\n          'pure' + item.substring(0, 1).toUpperCase() + item.substring(1)\n        ] = function() {\n          return Array.prototype[item].apply(\n            this,\n            Array.prototype.slice.call(arguments)\n          )\n        }\n      })\n    },\n    watch: function(target, prop, path) {\n      if (prop === '$observeProps' || prop === '$observer') return\n      if (obaa.isFunction(target[prop])) return\n      if (!target.$observeProps) target.$observeProps = {}\n      if (path !== undefined) {\n        target.$observeProps.$observerPath = path\n      } else {\n        target.$observeProps.$observerPath = '#'\n      }\n      var self = this\n      var currentValue = (target.$observeProps[prop] = target[prop])\n      Object.defineProperty(target, prop, {\n        get: function() {\n          return this.$observeProps[prop]\n        },\n        set: function(value) {\n          var old = this.$observeProps[prop]\n          this.$observeProps[prop] = value\n          self.onPropertyChanged(\n            prop,\n            value,\n            old,\n            this,\n            target.$observeProps.$observerPath\n          )\n        }\n      })\n      if (typeof currentValue == 'object') {\n        if (obaa.isArray(currentValue)) {\n          this.mock(currentValue)\n          if (currentValue.length === 0) {\n            if (!currentValue.$observeProps) currentValue.$observeProps = {}\n            if (path !== undefined) {\n              currentValue.$observeProps.$observerPath = path\n            } else {\n              currentValue.$observeProps.$observerPath = '#'\n            }\n          }\n        }\n        for (var cprop in currentValue) {\n          if (currentValue.hasOwnProperty(cprop)) {\n            this.watch(\n              currentValue,\n              cprop,\n              target.$observeProps.$observerPath + '-' + prop\n            )\n          }\n        }\n      }\n    }\n  }\n  return new _observe(target, arr, callback)\n}\n\nobaa.methods = [\n  'concat',\n  'copyWithin',\n  'entries',\n  'every',\n  'fill',\n  'filter',\n  'find',\n  'findIndex',\n  'forEach',\n  'includes',\n  'indexOf',\n  'join',\n  'keys',\n  'lastIndexOf',\n  'map',\n  'pop',\n  'push',\n  'reduce',\n  'reduceRight',\n  'reverse',\n  'shift',\n  'slice',\n  'some',\n  'sort',\n  'splice',\n  'toLocaleString',\n  'toString',\n  'unshift',\n  'values',\n  'size'\n]\nobaa.triggerStr = [\n  'concat',\n  'copyWithin',\n  'fill',\n  'pop',\n  'push',\n  'reverse',\n  'shift',\n  'sort',\n  'splice',\n  'unshift',\n  'size'\n].join(',')\n\nobaa.isArray = function(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nobaa.isString = function(obj) {\n  return typeof obj === 'string'\n}\n\nobaa.isInArray = function(arr, item) {\n  for (var i = arr.length; --i > -1; ) {\n    if (item === arr[i]) return true\n  }\n  return false\n}\n\nobaa.isFunction = function(obj) {\n  return Object.prototype.toString.call(obj) == '[object Function]'\n}\n\nobaa._getRootName = function(prop, path) {\n  if (path === '#') {\n    return prop\n  }\n  return path.split('-')[1]\n}\n\nobaa.add = function(obj, prop) {\n  var $observer = obj.$observer\n  $observer.watch(obj, prop)\n}\n\nobaa.set = function(obj, prop, value, exec) {\n  if (!exec) {\n    obj[prop] = value\n  }\n  var $observer = obj.$observer\n  $observer.watch(obj, prop)\n  if (exec) {\n    obj[prop] = value\n  }\n}\n\nArray.prototype.size = function(length) {\n  this.length = length\n}\n\nexport default obaa\n","const callbacks = []\nconst nextTickCallback = []\n\nexport function tick(fn, scope) {\n  callbacks.push({ fn, scope })\n}\n\nexport function fireTick() {\n  callbacks.forEach(item => {\n    item.fn.call(item.scope)\n  })\n\n  nextTickCallback.forEach(nextItem => {\n    nextItem.fn.call(nextItem.scope)\n  })\n  nextTickCallback.length = 0\n}\n\nexport function nextTick(fn, scope) {\n  nextTickCallback.push({ fn, scope })\n}\n","import obaa from './obaa'\nimport { fireTick } from './tick'\n\nexport function proxyUpdate(ele) {\n  let timeout = null\n  obaa(ele.data, () => {\n    if (ele._willUpdate) {\n      return\n    }\n    if (ele.constructor.mergeUpdate) {\n      clearTimeout(timeout)\n\n      timeout = setTimeout(() => {\n        ele.update()\n        fireTick()\n      }, 0)\n    } else {\n      ele.update()\n      fireTick()\n    }\n  })\n}\n","import {\n  SYNC_RENDER,\n  NO_RENDER,\n  FORCE_RENDER,\n  ASYNC_RENDER,\n  ATTR_KEY\n} from '../constants'\nimport options from '../options'\nimport { extend } from '../util'\nimport { enqueueRender } from '../render-queue'\nimport { getNodeProps } from './index'\nimport {\n  diff,\n  mounts,\n  diffLevel,\n  flushMounts,\n  recollectNodeTree,\n  removeChildren\n} from './diff'\nimport { createComponent, collectComponent } from './component-recycler'\nimport { removeNode } from '../dom/index'\nimport { addScopedAttr, addScopedAttrStatic, getCtorName } from '../style'\nimport { proxyUpdate } from '../observe'\n\n/** Set a component's `props` (generally derived from JSX attributes).\n *\t@param {Object} props\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n *\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n */\nexport function setComponentProps(component, props, opts, context, mountAll) {\n  if (component._disable) return\n  component._disable = true\n\n  if ((component.__ref = props.ref)) delete props.ref\n  if ((component.__key = props.key)) delete props.key\n\n  if (!component.base || mountAll) {\n    if (component.componentWillMount) component.componentWillMount()\n    if (component.beforeInstall) component.beforeInstall()\n    if (component.install) component.install()\n    if (component.constructor.observe) {\n      proxyUpdate(component)\n    }\n  } else if (component.receiveProps) {\n    component.receiveProps(props, component.data, component.props)\n  } else if (component.componentWillReceiveProps) {\n    component.componentWillReceiveProps(props, context)\n  }\n\n  if (context && context !== component.context) {\n    if (!component.prevContext) component.prevContext = component.context\n    component.context = context\n  }\n\n  if (!component.prevProps) component.prevProps = component.props\n  component.props = props\n\n  component._disable = false\n\n  if (opts !== NO_RENDER) {\n    if (\n      opts === SYNC_RENDER ||\n      options.syncComponentUpdates !== false ||\n      !component.base\n    ) {\n      renderComponent(component, SYNC_RENDER, mountAll)\n    } else {\n      enqueueRender(component)\n    }\n  }\n\n  if (component.__ref) component.__ref(component)\n}\n\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n *\t@param {Component} component\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n *\t@private\n */\nexport function renderComponent(component, opts, mountAll, isChild) {\n  if (component._disable) return\n\n  let props = component.props,\n    data = component.data,\n    context = component.context,\n    previousProps = component.prevProps || props,\n    previousState = component.prevState || data,\n    previousContext = component.prevContext || context,\n    isUpdate = component.base,\n    nextBase = component.nextBase,\n    initialBase = isUpdate || nextBase,\n    initialChildComponent = component._component,\n    skip = false,\n    rendered,\n    inst,\n    cbase\n\n  // if updating\n  if (isUpdate) {\n    component.props = previousProps\n    component.data = previousState\n    component.context = previousContext\n    if (\n      opts !== FORCE_RENDER &&\n      component.shouldComponentUpdate &&\n      component.shouldComponentUpdate(props, data, context) === false\n    ) {\n      skip = true\n    } else if (component.componentWillUpdate) {\n      component.componentWillUpdate(props, data, context)\n    } else if (component.beforeUpdate) {\n      component.beforeUpdate(props, data, context)\n    }\n    component.props = props\n    component.data = data\n    component.context = context\n  }\n\n  component.prevProps = component.prevState = component.prevContext = component.nextBase = null\n\n  if (!skip) {\n    rendered = component.render(props, data, context)\n\n    //don't rerender\n    if (component.staticCss) {\n      addScopedAttrStatic(\n        rendered,\n        component.staticCss(),\n        '_style_' + getCtorName(component.constructor)\n      )\n    }\n\n    if (component.css) {\n      addScopedAttr(\n        rendered,\n        component.css(),\n        '_style_' + component.elementId,\n        component\n      )\n    }\n\n    // context to pass to the child, can be updated via (grand-)parent component\n    if (component.getChildContext) {\n      context = extend(extend({}, context), component.getChildContext())\n    }\n\n    let childComponent = rendered && rendered.nodeName,\n      toUnmount,\n      base,\n      ctor = options.mapping[childComponent]\n\n    if (ctor) {\n      // set up high order component link\n\n      let childProps = getNodeProps(rendered)\n      inst = initialChildComponent\n\n      if (inst && inst.constructor === ctor && childProps.key == inst.__key) {\n        setComponentProps(inst, childProps, SYNC_RENDER, context, false)\n      } else {\n        toUnmount = inst\n\n        component._component = inst = createComponent(ctor, childProps, context)\n        inst.nextBase = inst.nextBase || nextBase\n        inst._parentComponent = component\n        setComponentProps(inst, childProps, NO_RENDER, context, false)\n        renderComponent(inst, SYNC_RENDER, mountAll, true)\n      }\n\n      base = inst.base\n    } else {\n      cbase = initialBase\n\n      // destroy high order component link\n      toUnmount = initialChildComponent\n      if (toUnmount) {\n        cbase = component._component = null\n      }\n\n      if (initialBase || opts === SYNC_RENDER) {\n        if (cbase) cbase._component = null\n        base = diff(\n          cbase,\n          rendered,\n          context,\n          mountAll || !isUpdate,\n          initialBase && initialBase.parentNode,\n          true\n        )\n      }\n    }\n\n    if (initialBase && base !== initialBase && inst !== initialChildComponent) {\n      let baseParent = initialBase.parentNode\n      if (baseParent && base !== baseParent) {\n        baseParent.replaceChild(base, initialBase)\n\n        if (!toUnmount) {\n          initialBase._component = null\n          recollectNodeTree(initialBase, false)\n        }\n      }\n    }\n\n    if (toUnmount) {\n      unmountComponent(toUnmount)\n    }\n\n    component.base = base\n    if (base && !isChild) {\n      let componentRef = component,\n        t = component\n      while ((t = t._parentComponent)) {\n        ;(componentRef = t).base = base\n      }\n      base._component = componentRef\n      base._componentConstructor = componentRef.constructor\n    }\n  }\n\n  if (!isUpdate || mountAll) {\n    mounts.unshift(component)\n  } else if (!skip) {\n    // Ensure that pending componentDidMount() hooks of child components\n    // are called before the componentDidUpdate() hook in the parent.\n    // Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n    // flushMounts();\n\n    if (component.componentDidUpdate) {\n      component.componentDidUpdate(\n        previousProps,\n        previousState,\n        previousContext\n      )\n    }\n    if (component.afterUpdate) {\n      //deprecated\n      component.afterUpdate(previousProps, previousState, previousContext)\n    }\n    if (component.updated) {\n      component.updated(previousProps, previousState, previousContext)\n    }\n    if (options.afterUpdate) options.afterUpdate(component)\n  }\n\n  if (component._renderCallbacks != null) {\n    while (component._renderCallbacks.length)\n      component._renderCallbacks.pop().call(component)\n  }\n\n  if (!diffLevel && !isChild) flushMounts()\n}\n\n/** Apply the Component referenced by a VNode to the DOM.\n *\t@param {Element} dom\tThe DOM node to mutate\n *\t@param {VNode} vnode\tA Component-referencing VNode\n *\t@returns {Element} dom\tThe created/mutated element\n *\t@private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n  let c = dom && dom._component,\n    originalComponent = c,\n    oldDom = dom,\n    isDirectOwner = c && dom._componentConstructor === vnode.nodeName,\n    isOwner = isDirectOwner,\n    props = getNodeProps(vnode)\n  while (c && !isOwner && (c = c._parentComponent)) {\n    isOwner = c.constructor === vnode.nodeName\n  }\n\n  if (c && isOwner && (!mountAll || c._component)) {\n    setComponentProps(c, props, ASYNC_RENDER, context, mountAll)\n    dom = c.base\n  } else {\n    if (originalComponent && !isDirectOwner) {\n      unmountComponent(originalComponent)\n      dom = oldDom = null\n    }\n\n    c = createComponent(vnode.nodeName, props, context)\n    if (dom && !c.nextBase) {\n      c.nextBase = dom\n      // passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n      oldDom = null\n    }\n    setComponentProps(c, props, SYNC_RENDER, context, mountAll)\n    dom = c.base\n\n    if (oldDom && dom !== oldDom) {\n      oldDom._component = null\n      recollectNodeTree(oldDom, false)\n    }\n  }\n\n  return dom\n}\n\n/** Remove a component from the DOM and recycle it.\n *\t@param {Component} component\tThe Component instance to unmount\n *\t@private\n */\nexport function unmountComponent(component) {\n  if (options.beforeUnmount) options.beforeUnmount(component)\n\n  let base = component.base\n\n  component._disable = true\n\n  if (component.componentWillUnmount) component.componentWillUnmount()\n  if (component.uninstall) component.uninstall()\n\n  component.base = null\n\n  // recursively tear down & recollect high-order component children:\n  let inner = component._component\n  if (inner) {\n    unmountComponent(inner)\n  } else if (base) {\n    if (base[ATTR_KEY] && base[ATTR_KEY].ref) base[ATTR_KEY].ref(null)\n\n    component.nextBase = base\n\n    removeNode(base)\n    collectComponent(component)\n\n    removeChildren(base)\n  }\n\n  if (component.__ref) component.__ref(null)\n}\n","import { diff } from './vdom/diff'\nimport options from './options'\n\n/** Render JSX into a `parent` Element.\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n *\t@param {Element} parent\t\tDOM element to render into\n *\t@param {Element} [merge]\tAttempt to re-use an existing DOM tree rooted at `merge`\n *\t@public\n *\n *\t@example\n *\t// render a div into <body>:\n *\trender(<div id=\"hello\">hello!</div>, document.body);\n *\n *\t@example\n *\t// render a \"Thing\" component into #foo:\n *\tconst Thing = ({ name }) => <span>{ name }</span>;\n *\trender(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nexport function render(vnode, parent, store) {\n  parent = typeof parent === 'string' ? document.querySelector(parent) : parent\n\n  if (store && store.merge) {\n    store.merge =\n      typeof store.merge === 'string'\n        ? document.querySelector(store.merge)\n        : store.merge\n  }\n\n  options.store = store\n\n  return diff(store && store.merge, vnode, {}, false, parent, false)\n}\n","import options from './options'\n\nconst OBJECTTYPE = '[object Object]'\nconst ARRAYTYPE = '[object Array]'\n\nexport function define(name, ctor) {\n  if (ctor.is === 'WeElement') {\n    options.mapping[name] = ctor\n    if (ctor.data && !ctor.pure) {\n      ctor.updatePath = getUpdatePath(ctor.data)\n    }\n  }\n}\n\nexport function getUpdatePath(data) {\n  const result = {}\n  dataToPath(data, result)\n  return result\n}\n\nfunction dataToPath(data, result) {\n  Object.keys(data).forEach(key => {\n    result[key] = true\n    const type = Object.prototype.toString.call(data[key])\n    if (type === OBJECTTYPE) {\n      _objToPath(data[key], key, result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(data[key], key, result)\n    }\n  })\n}\n\nfunction _objToPath(data, path, result) {\n  Object.keys(data).forEach(key => {\n    result[path + '.' + key] = true\n    delete result[path]\n    const type = Object.prototype.toString.call(data[key])\n    if (type === OBJECTTYPE) {\n      _objToPath(data[key], path + '.' + key, result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(data[key], path + '.' + key, result)\n    }\n  })\n}\n\nfunction _arrayToPath(data, path, result) {\n  data.forEach((item, index) => {\n    result[path + '[' + index + ']'] = true\n    delete result[path]\n    const type = Object.prototype.toString.call(item)\n    if (type === OBJECTTYPE) {\n      _objToPath(item, path + '[' + index + ']', result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(item, path + '[' + index + ']', result)\n    }\n  })\n}\n","function getGlobal() {\n  if (\n    typeof global !== 'object' ||\n    !global ||\n    global.Math !== Math ||\n    global.Array !== Array\n  ) {\n    if (typeof self !== 'undefined') {\n      return self\n    } else if (typeof window !== 'undefined') {\n      return window\n    } else if (typeof global !== 'undefined') {\n      return global\n    }\n    return (function() {\n      return this\n    })()\n  }\n  return global\n}\n\n/** Global options\n *\t@public\n *\t@namespace options {Object}\n */\nexport default {\n  scopedStyle: true,\n  store: null,\n  mapping: {},\n  isWeb: true,\n  staticStyleMapping: {},\n  doc: typeof document === 'object' ? document : null,\n  root: getGlobal(),\n  //styleCache :[{ctor:ctor,ctorName:ctorName,style:style}]\n  styleCache: []\n  //componentChange(component, element) { },\n  /** If `true`, `prop` changes trigger synchronous component updates.\n   *\t@name syncComponentUpdates\n   *\t@type Boolean\n   *\t@default true\n   */\n  //syncComponentUpdates: true,\n\n  /** Processes all created VNodes.\n   *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n   */\n  //vnode(vnode) { }\n\n  /** Hook invoked after a component is mounted. */\n  //afterMount(component) { },\n\n  /** Hook invoked after the DOM is updated with a component's latest render. */\n  //afterUpdate(component) { }\n\n  /** Hook invoked immediately before a component is unmounted. */\n  // beforeUnmount(component) { }\n}\n","import { FORCE_RENDER } from './constants'\nimport { renderComponent } from './vdom/component'\nimport options from './options'\nimport { nProps } from './util'\n\nlet id = 0\n\nexport default class Component {\n  static is = 'WeElement'\n\n  constructor(props) {\n    this.props = Object.assign(\n      nProps(this.constructor.props),\n      this.constructor.defaultProps,\n      props\n    )\n    this.elementId = id++\n    this.data = this.constructor.data || this.data || {}\n\n    this._preCss = null\n\n    this.store = null\n  }\n\n  update(callback) {\n    this._willUpdate = true\n    if (callback)\n      (this._renderCallbacks = this._renderCallbacks || []).push(callback)\n    renderComponent(this, FORCE_RENDER)\n    if (options.componentChange) options.componentChange(this, this.base)\n    this._willUpdate = false\n  }\n\n  render() { }\n}\n\n","export function rpx(str) {\n  return str.replace(/([1-9]\\d*|0)(\\.\\d*)*rpx/g, (a, b) => {\n    return (window.innerWidth * Number(b)) / 750 + 'px'\n  })\n}\n","import Component from './component'\n\nexport default class ModelView extends Component {\n  static observe = true\n\n  static mergeUpdate = true\n  \n  beforeInstall() {\n    this.data = this.vm.data\n  }\n}\n","import { h, h as createElement } from './h'\nimport { cloneElement } from './clone-element'\nimport Component from './component'\nimport { render } from './render'\nimport { rerender } from './render-queue'\nimport options from './options'\nimport { define } from './define'\nimport { rpx } from './rpx'\nimport ModelView from './model-view'\n\nconst instances = []\nconst WeElement = Component\n\noptions.root.Omi = {\n  h,\n  createElement,\n  cloneElement,\n  Component,\n  render,\n  rerender,\n  options,\n  instances,\n  WeElement,\n  define,\n  rpx,\n  ModelView\n}\n\noptions.root.Omi.version = 'omio-0.1.0'\n\nexport default {\n  h,\n  createElement,\n  cloneElement,\n  Component,\n  render,\n  rerender,\n  options,\n  instances,\n  WeElement,\n  define,\n  rpx,\n  ModelView\n}\n\nexport {\n  h,\n  createElement,\n  cloneElement,\n  Component,\n  render,\n  rerender,\n  options,\n  instances,\n  WeElement,\n  define,\n  rpx,\n  ModelView\n}\n"]}