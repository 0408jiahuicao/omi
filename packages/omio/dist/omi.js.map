{"version":3,"sources":["../src/vnode.js","../src/h.js","../src/util.js","../src/clone-element.js","../src/constants.js","../src/render-queue.js","../src/vdom/index.js","../src/dom/index.js","../src/vdom/diff.js","../src/vdom/component-recycler.js","../src/style.js","../src/obaa.js","../src/tick.js","../src/observe.js","../src/vdom/component.js","../src/component.js","../src/render.js","../src/define.js","../src/options.js","../src/rpx.js","../src/model-view.js","../src/omi.js"],"names":["VNode","h","nodeName","attributes","lastSimple","child","simple","i","children","EMPTY_CHILDREN","arguments","length","stack","push","pop","undefined","String","p","options","isWeb","value","key","vnode","toObject","val","TypeError","Object","assign","target","source","from","to","symbols","s","hasOwnProperty","call","getOwnPropertySymbols","propIsEnumerable","extend","obj","props","isArray","prototype","toString","nProps","result","keys","forEach","cloneElement","slice","ATTR_KEY","component","debounceRendering","defer","rerender","items","element","base","renderComponent","list","componentChange","isNamedNode","_componentConstructor","node","normalizedNodeName","toLowerCase","defaultProps","doc","createElementNS","createElement","_ref","createNode","a","b","cssTxt","isSvg","rule","split","map","o","x","trim","replace","Array","Symbol","iterator","_ref3","properties","next","done","_ref2","property","style","parseCSSText","match","cssText","parentNode","removeChild","setAccessor","name","old","className","IS_NON_DIMENSIONAL","test","oldJson","currentJson","changed","ckey","setStyles","substring","eventProxy","useCapture","removeEventListener","_listeners","innerHTML","setProperty","removeAttribute","ns","addEventListener","setAttributeNS","setAttribute","e","this","type","event","diffLevel","c","mounts","isSvgMode","afterMount","installed","diff","dom","context","mountAll","parent","componentRoot","ret","appendChild","hydrating","out","prevSvgMode","vnodeName","mapping","_component","buildComponentFromVNode","document","createTextNode","replaceChild","recollectNodeTree","vchildren","fc","nodeValue","innerDiffNode","isHydrating","j","originalChildren","keyed","keyedLen","childrenLen","vlen","_child","f","__key","vchild","splitText","len","min","nextSibling","idiff","removeNode","insertBefore","unmountOnly","removeChildren","previousSibling","attrs","collectComponent","components","Ctor","render","inst","constructor","Component","createComponent","nextBase","splice","data","getCtorName","ctor","item","styleCache","attrName","styleId","prefix","re","css","g0","g1","g2","g3","appendClass","addStyle","id","ele","head","getElementsByTagName","someThingStyles","getElementById","textContent","window","ActiveXObject","styleSheet","addStyleWithoutId","attr","scopeVdom","_preCss","scopedStyle","vdom","staticStyleMapping","addScopedAttrStatic","scoper","fireTick","size","scope","callbacks","nextItem","fn","timeout","nextTickCallback","clearTimeout","proxyUpdate","update","setComponentProps","opts","_disable","beforeInstall","install","observe","receiveProps","componentWillReceiveProps","prevContext","enqueueRender","prevProps","__ref","isChild","previousProps","previousState","isUpdate","initialBase","initialChildComponent","previousContext","rendered","shouldComponentUpdate","cbase","componentWillUpdate","beforeUpdate","FORCE_RENDER","beforeRender","skip","dynamicCss","elementId","scopeHost","___scopedCssAttr","getChildContext","childComponent","childProps","getNodeProps","toUnmount","baseParent","SYNC_RENDER","componentRef","t","unshift","_parentComponent","componentDidUpdate","afterUpdate","updated","_renderCallbacks","flushMounts","oldDom","originalComponent","isDirectOwner","isOwner","unmountComponent","beforeUnmount","componentWillUnmount","ref","instance","Constructor","querySelector","store","merge","getUpdatePath","OBJECTTYPE","ARRAYTYPE","pure","updatePath","dataToPath","_objToPath","_arrayToPath","path","index","Number","_classCallCheck$1","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","root","global","Math","propertyIsEnumerable","Element","runListeners","oEvent","iLstId","iElId","oEvtListeners","oListeners","aEls","aEvts","sEventType","fListener","nElIdx","aElListeners","proto","propertiesObject","F","Error","usePromise","Promise","__config__","platform","systemVersion","resolve","then","bind","setTimeout","ASYNC_RENDER","obaa","arr","callback","_observe","$observer","eventPropArr","prop","isInArray","$observeProps","$observerPath","isString","watch","propertyChangedHandler","propChanged","onPropertyChanged","all","handler","oldValue","rootName","_getRootName","mock","methods","apply","RegExp","cprop","isFunction","toUpperCase","get","currentValue","set","triggerStr","join","add","exec","_classCallCheck","_willUpdate","every","is","_Component","ModelView","str","Omi","mergeUpdate","define","WeElement","rpx","defineElement","module","exports","Omi$1"],"mappings":"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","file":"omi.js","sourcesContent":["/** Virtual DOM Node */\r\nexport function VNode() {}\r\n","import { VNode } from './vnode'\r\nimport options from './options'\r\n\r\nconst stack = []\r\n\r\nconst EMPTY_CHILDREN = []\r\n\r\n/**\r\n * JSX/hyperscript reviver.\r\n * @see http://jasonformat.com/wtf-is-jsx\r\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\r\n *\r\n * Note: this is exported as both `h()` and `createElement()` for compatibility reasons.\r\n *\r\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a lightweight representation\r\n * of the structure of a DOM tree. This structure can be realized by recursively comparing it against\r\n * the current _actual_ DOM structure, and applying only the differences.\r\n *\r\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\r\n * and optionally children to append to the element.\r\n *\r\n * @example The following DOM tree\r\n *\r\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\r\n *\r\n * can be constructed using this function as:\r\n *\r\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\r\n *\r\n * @param {string} nodeName\tAn element name. Ex: `div`, `a`, `span`, etc.\r\n * @param {Object} attributes\tAny attributes/props to set on the created element.\r\n * @param rest\t\t\tAdditional arguments are taken to be children to append. Can be infinitely nested Arrays.\r\n *\r\n * @public\r\n */\r\nexport function h(nodeName, attributes) {\r\n  let children = EMPTY_CHILDREN,\r\n    lastSimple,\r\n    child,\r\n    simple,\r\n    i\r\n  for (i = arguments.length; i-- > 2; ) {\r\n    stack.push(arguments[i])\r\n  }\r\n  if (attributes && attributes.children != null) {\r\n    if (!stack.length) stack.push(attributes.children)\r\n    delete attributes.children\r\n  }\r\n  while (stack.length) {\r\n    if ((child = stack.pop()) && child.pop !== undefined) {\r\n      for (i = child.length; i--; ) stack.push(child[i])\r\n    } else {\r\n      if (typeof child === 'boolean') child = null\r\n\r\n      if ((simple = typeof nodeName !== 'function')) {\r\n        if (child == null) child = ''\r\n        else if (typeof child === 'number') child = String(child)\r\n        else if (typeof child !== 'string') simple = false\r\n      }\r\n\r\n      if (simple && lastSimple) {\r\n        children[children.length - 1] += child\r\n      } else if (children === EMPTY_CHILDREN) {\r\n        children = [child]\r\n      } else {\r\n        children.push(child)\r\n      }\r\n\r\n      lastSimple = simple\r\n    }\r\n  }\r\n\r\n  let p = new VNode()\r\n  p.nodeName = nodeName\r\n  p.attributes = attributes == null ? undefined : attributes\r\n  if (children && typeof children[0] === 'string' && !options.isWeb) {\r\n    if (p.attributes) {\r\n      p.attributes.value = children[0]\r\n    } else {\r\n      p.attributes = { value: children[0] }\r\n    }\r\n  } else {\r\n    p.children = children\r\n  }\r\n  p.key = attributes == null ? undefined : attributes.key\r\n\r\n  // if a \"vnode hook\" is defined, pass every created VNode to it\r\n  if (options.vnode !== undefined) options.vnode(p)\r\n\r\n  return p\r\n}\r\n","'use strict'\r\n/* eslint-disable no-unused-vars */\r\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty\r\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable\r\n\r\nfunction toObject(val) {\r\n  if (val === null || val === undefined) {\r\n    throw new TypeError('Object.assign cannot be called with null or undefined')\r\n  }\r\n\r\n  return Object(val)\r\n}\r\n\r\nexport function assign(target, source) {\r\n  var from\r\n  var to = toObject(target)\r\n  var symbols\r\n\r\n  for (var s = 1; s < arguments.length; s++) {\r\n    from = Object(arguments[s])\r\n\r\n    for (var key in from) {\r\n      if (hasOwnProperty.call(from, key)) {\r\n        to[key] = from[key]\r\n      }\r\n    }\r\n\r\n    if (getOwnPropertySymbols) {\r\n      symbols = getOwnPropertySymbols(from)\r\n      for (var i = 0; i < symbols.length; i++) {\r\n        if (propIsEnumerable.call(from, symbols[i])) {\r\n          to[symbols[i]] = from[symbols[i]]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return to\r\n}\r\n\r\nif (!Element.prototype.addEventListener) {\r\n  var oListeners = {};\r\n  function runListeners(oEvent) {\r\n    if (!oEvent) { oEvent = window.event; }\r\n    for (var iLstId = 0, iElId = 0, oEvtListeners = oListeners[oEvent.type]; iElId < oEvtListeners.aEls.length; iElId++) {\r\n      if (oEvtListeners.aEls[iElId] === this) {\r\n        for (iLstId; iLstId < oEvtListeners.aEvts[iElId].length; iLstId++) { oEvtListeners.aEvts[iElId][iLstId].call(this, oEvent); }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  Element.prototype.addEventListener = function (sEventType, fListener /*, useCapture (will be ignored!) */) {\r\n    if (oListeners.hasOwnProperty(sEventType)) {\r\n      var oEvtListeners = oListeners[sEventType];\r\n      for (var nElIdx = -1, iElId = 0; iElId < oEvtListeners.aEls.length; iElId++) {\r\n        if (oEvtListeners.aEls[iElId] === this) { nElIdx = iElId; break; }\r\n      }\r\n      if (nElIdx === -1) {\r\n        oEvtListeners.aEls.push(this);\r\n        oEvtListeners.aEvts.push([fListener]);\r\n        this[\"on\" + sEventType] = runListeners;\r\n      } else {\r\n        var aElListeners = oEvtListeners.aEvts[nElIdx];\r\n        if (this[\"on\" + sEventType] !== runListeners) {\r\n          aElListeners.splice(0);\r\n          this[\"on\" + sEventType] = runListeners;\r\n        }\r\n        for (var iLstId = 0; iLstId < aElListeners.length; iLstId++) {\r\n          if (aElListeners[iLstId] === fListener) { return; }\r\n        }\r\n        aElListeners.push(fListener);\r\n      }\r\n    } else {\r\n      oListeners[sEventType] = { aEls: [this], aEvts: [[fListener]] };\r\n      this[\"on\" + sEventType] = runListeners;\r\n    }\r\n  };\r\n  Element.prototype.removeEventListener = function (sEventType, fListener /*, useCapture (will be ignored!) */) {\r\n    if (!oListeners.hasOwnProperty(sEventType)) { return; }\r\n    var oEvtListeners = oListeners[sEventType];\r\n    for (var nElIdx = -1, iElId = 0; iElId < oEvtListeners.aEls.length; iElId++) {\r\n      if (oEvtListeners.aEls[iElId] === this) { nElIdx = iElId; break; }\r\n    }\r\n    if (nElIdx === -1) { return; }\r\n    for (var iLstId = 0, aElListeners = oEvtListeners.aEvts[nElIdx]; iLstId < aElListeners.length; iLstId++) {\r\n      if (aElListeners[iLstId] === fListener) { aElListeners.splice(iLstId, 1); }\r\n    }\r\n  };\r\n}\r\n\r\n\r\nif (typeof Object.create !== 'function') {\r\n  Object.create = function(proto, propertiesObject) {\r\n    if (typeof proto !== 'object' && typeof proto !== 'function') {\r\n      throw new TypeError('Object prototype may only be an Object: ' + proto)\r\n    } else if (proto === null) {\r\n      throw new Error(\r\n        \"This browser's implementation of Object.create is a shim and doesn't support 'null' as the first argument.\"\r\n      )\r\n    }\r\n\r\n    // if (typeof propertiesObject != 'undefined') {\r\n    //     throw new Error(\"This browser's implementation of Object.create is a shim and doesn't support a second argument.\");\r\n    // }\r\n\r\n    function F() {}\r\n    F.prototype = proto\r\n\r\n    return new F()\r\n  }\r\n}\r\n\r\nif (!String.prototype.trim) {\r\n  String.prototype.trim = function () {\r\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '')\r\n  }\r\n}\r\n\r\n/**\r\n *  Copy all properties from `props` onto `obj`.\r\n *  @param {Object} obj\t\tObject onto which properties should be copied.\r\n *  @param {Object} props\tObject from which to copy properties.\r\n *  @returns obj\r\n *  @private\r\n */\r\nexport function extend(obj, props) {\r\n  for (let i in props) obj[i] = props[i]\r\n  return obj\r\n}\r\n\r\n/**\r\n * Call a function asynchronously, as soon as possible. Makes\r\n * use of HTML Promise to schedule the callback if available,\r\n * otherwise falling back to `setTimeout` (mainly for IE<11).\r\n *\r\n * @param {Function} callback\r\n */\r\n\r\nlet usePromise = typeof Promise == 'function'\r\n\r\n// for native\r\nif (\r\n  typeof document !== 'object' &&\r\n  typeof global !== 'undefined' &&\r\n  global.__config__\r\n) {\r\n  if (global.__config__.platform === 'android') {\r\n    usePromise = true\r\n  } else {\r\n    let systemVersion =\r\n      (global.__config__.systemVersion &&\r\n        global.__config__.systemVersion.split('.')[0]) ||\r\n      0\r\n    if (systemVersion > 8) {\r\n      usePromise = true\r\n    }\r\n  }\r\n}\r\n\r\nexport const defer = usePromise\r\n  ? Promise.resolve().then.bind(Promise.resolve())\r\n  : setTimeout\r\n\r\nexport function isArray(obj) {\r\n  return Object.prototype.toString.call(obj) === '[object Array]'\r\n}\r\n\r\nexport function nProps(props) {\r\n  if (!props || isArray(props)) return {}\r\n  const result = {}\r\n  Object.keys(props).forEach(key => {\r\n    result[key] = props[key].value\r\n  })\r\n  return result\r\n}","import { extend } from './util'\r\nimport { h } from './h'\r\n\r\n/**\r\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\r\n * @param {VNode} vnode\t\tThe virtual DOM element to clone\r\n * @param {Object} props\tAttributes/props to add when cloning\r\n * @param {VNode} rest\t\tAny additional arguments will be used as replacement children.\r\n */\r\nexport function cloneElement(vnode, props) {\r\n  return h(\r\n    vnode.nodeName,\r\n    extend(extend({}, vnode.attributes), props),\r\n    arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children\r\n  )\r\n}\r\n","// render modes\r\n\r\nexport const NO_RENDER = 0\r\nexport const SYNC_RENDER = 1\r\nexport const FORCE_RENDER = 2\r\nexport const ASYNC_RENDER = 3\r\n\r\nexport const ATTR_KEY = '__omiattr_'\r\n\r\n// DOM properties that should NOT have \"px\" added when numeric\r\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i\r\n","import options from './options'\r\nimport { defer } from './util'\r\nimport { renderComponent } from './vdom/component'\r\n\r\n/** Managed queue of dirty components to be re-rendered */\r\n\r\nlet items = []\r\n\r\nexport function enqueueRender(component) {\r\n  if (items.push(component) == 1) {\r\n    ;(options.debounceRendering || defer)(rerender)\r\n  }\r\n}\r\n\r\nexport function rerender() {\r\n  let p,\r\n    list = items\r\n  items = []\r\n  let element\r\n  while ((p = list.pop())) {\r\n    element = p.base\r\n    renderComponent(p)\r\n  }\r\n  if (!list.length) {\r\n    if (options.componentChange) options.componentChange(p, element)\r\n  }\r\n}\r\n","import { extend } from '../util'\r\nimport options from '../options'\r\n/**\r\n * Check if two nodes are equivalent.\r\n *\r\n * @param {Node} node\t\t\tDOM Node to compare\r\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\r\n * @param {boolean} [hydrating=false]\tIf true, ignores component constructors when comparing.\r\n * @private\r\n */\r\nexport function isSameNodeType(node, vnode, hydrating) {\r\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\r\n    return node.splitText !== undefined\r\n  }\r\n  const ctor = options.mapping[vnode.nodeName]\r\n  if (ctor) {\r\n    return hydrating || node._componentConstructor === ctor\r\n  }\r\n  return !node._componentConstructor && isNamedNode(node, vnode.nodeName)\r\n}\r\n\r\n/**\r\n * Check if an Element has a given nodeName, case-insensitively.\r\n *\r\n * @param {Element} node\tA DOM Element to inspect the name of.\r\n * @param {String} nodeName\tUnnormalized name to compare against.\r\n */\r\nexport function isNamedNode(node, nodeName) {\r\n  return (\r\n    node.normalizedNodeName === nodeName ||\r\n    node.nodeName.toLowerCase() === nodeName.toLowerCase()\r\n  )\r\n}\r\n\r\n/**\r\n * Reconstruct Component-style `props` from a VNode.\r\n * Ensures default/fallback values from `defaultProps`:\r\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\r\n *\r\n * @param {VNode} vnode\r\n * @returns {Object} props\r\n */\r\nexport function getNodeProps(vnode) {\r\n  let props = extend({}, vnode.attributes)\r\n  props.children = vnode.children\r\n\r\n  let defaultProps = vnode.nodeName.defaultProps\r\n  if (defaultProps !== undefined) {\r\n    for (let i in defaultProps) {\r\n      if (props[i] === undefined) {\r\n        props[i] = defaultProps[i]\r\n      }\r\n    }\r\n  }\r\n\r\n  return props\r\n}\r\n","import { IS_NON_DIMENSIONAL } from '../constants'\r\nimport options from '../options'\r\n\r\n/** Create an element with the given nodeName.\r\n *\t@param {String} nodeName\r\n *\t@param {Boolean} [isSvg=false]\tIf `true`, creates an element within the SVG namespace.\r\n *\t@returns {Element} node\r\n */\r\nexport function createNode(nodeName, isSvg) {\r\n  let node = isSvg\r\n    ? options.doc.createElementNS('http://www.w3.org/2000/svg', nodeName)\r\n    : options.doc.createElement(nodeName)\r\n  node.normalizedNodeName = nodeName\r\n  return node\r\n}\r\n\r\nfunction parseCSSText(cssText) {\r\n  let cssTxt = cssText.replace(/\\/\\*(.|\\s)*?\\*\\//g, ' ').replace(/\\s+/g, ' ')\r\n  let style = {},\r\n    [a, b, rule] = cssTxt.match(/ ?(.*?) ?{([^}]*)}/) || [a, b, cssTxt]\r\n  let cssToJs = s => s.replace(/\\W+\\w/g, match => match.slice(-1).toUpperCase())\r\n  let properties = rule\r\n    .split(';')\r\n    .map(o => o.split(':').map(x => x && x.trim()))\r\n  for (let [property, value] of properties) style[cssToJs(property)] = value\r\n  return style\r\n}\r\n\r\n/** Remove a child node from its parent if attached.\r\n *\t@param {Element} node\t\tThe node to remove\r\n */\r\nexport function removeNode(node) {\r\n  let parentNode = node.parentNode\r\n  if (parentNode) parentNode.removeChild(node)\r\n}\r\n\r\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\r\n *\tIf `value` is `null`, the attribute/handler will be removed.\r\n *\t@param {Element} node\tAn element to mutate\r\n *\t@param {string} name\tThe name/key to set, such as an event or attribute name\r\n *\t@param {any} old\tThe last value that was set for this name/node pair\r\n *\t@param {any} value\tAn attribute value, such as a function to be used as an event handler\r\n *\t@param {Boolean} isSvg\tAre we currently diffing inside an svg?\r\n *\t@private\r\n */\r\nexport function setAccessor(node, name, old, value, isSvg) {\r\n  if (name === 'className') name = 'class'\r\n\r\n  if (name === 'key') {\r\n    // ignore\r\n  } else if (name === 'ref') {\r\n    if (old) old(null)\r\n    if (value) value(node)\r\n  } else if (name === 'class' && !isSvg) {\r\n    node.className = value || ''\r\n  } else if (name === 'style') {\r\n    if (options.isWeb) {\r\n      if (!value || typeof value === 'string' || typeof old === 'string') {\r\n        node.style.cssText = value || ''\r\n      }\r\n      if (value && typeof value === 'object') {\r\n        if (typeof old !== 'string') {\r\n          for (let i in old) if (!(i in value)) node.style[i] = ''\r\n        }\r\n        for (let i in value) {\r\n          node.style[i] =\r\n            typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false\r\n              ? value[i] + 'px'\r\n              : value[i]\r\n        }\r\n      }\r\n    } else {\r\n      let oldJson = old,\r\n        currentJson = value\r\n      if (typeof old === 'string') {\r\n        oldJson = parseCSSText(old)\r\n      }\r\n      if (typeof value == 'string') {\r\n        currentJson = parseCSSText(value)\r\n      }\r\n\r\n      let result = {},\r\n        changed = false\r\n\r\n      if (oldJson) {\r\n        for (let key in oldJson) {\r\n          if (typeof currentJson == 'object' && !(key in currentJson)) {\r\n            result[key] = ''\r\n            changed = true\r\n          }\r\n        }\r\n\r\n        for (let ckey in currentJson) {\r\n          if (currentJson[ckey] !== oldJson[ckey]) {\r\n            result[ckey] = currentJson[ckey]\r\n            changed = true\r\n          }\r\n        }\r\n\r\n        if (changed) {\r\n          node.setStyles(result)\r\n        }\r\n      } else {\r\n        node.setStyles(currentJson)\r\n      }\r\n    }\r\n  } else if (name === 'dangerouslySetInnerHTML') {\r\n    if (value) node.innerHTML = value.__html || ''\r\n  } else if (name[0] == 'o' && name[1] == 'n') {\r\n    let useCapture = name !== (name = name.replace(/Capture$/, ''))\r\n    name = name.toLowerCase().substring(2)\r\n    if (value) {\r\n      if (!old) node.addEventListener(name, eventProxy, useCapture)\r\n    } else {\r\n      node.removeEventListener(name, eventProxy, useCapture)\r\n    }\r\n    ;(node._listeners || (node._listeners = {}))[name] = value\r\n  } else if (name !== 'list' && name !== 'type' && !isSvg && name in node) {\r\n    setProperty(node, name, value == null ? '' : value)\r\n    if (value == null || value === false) node.removeAttribute(name)\r\n  } else {\r\n    let ns = isSvg && name !== (name = name.replace(/^xlink:?/, ''))\r\n    if (value == null || value === false) {\r\n      if (ns)\r\n        node.removeAttributeNS(\r\n          'http://www.w3.org/1999/xlink',\r\n          name.toLowerCase()\r\n        )\r\n      else node.removeAttribute(name)\r\n    } else if (typeof value !== 'function') {\r\n      if (ns)\r\n        node.setAttributeNS(\r\n          'http://www.w3.org/1999/xlink',\r\n          name.toLowerCase(),\r\n          value\r\n        )\r\n      else node.setAttribute(name, value)\r\n    }\r\n  }\r\n}\r\n\r\n/** Attempt to set a DOM property to the given value.\r\n *\tIE & FF throw for certain property-value combinations.\r\n */\r\nfunction setProperty(node, name, value) {\r\n  try {\r\n    node[name] = value\r\n  } catch (e) {}\r\n}\r\n\r\n/** Proxy an event to hooked event handlers\r\n *\t@private\r\n */\r\nfunction eventProxy(e) {\r\n  return this._listeners[e.type]((options.event && options.event(e)) || e)\r\n}\r\n","import { ATTR_KEY } from '../constants'\r\nimport { isSameNodeType, isNamedNode } from './index'\r\nimport { buildComponentFromVNode } from './component'\r\nimport { createNode, setAccessor } from '../dom/index'\r\nimport { unmountComponent } from './component'\r\nimport options from '../options'\r\nimport { removeNode } from '../dom/index'\r\nimport { isArray } from '../util'\r\n\r\n/** Queue of components that have been mounted and are awaiting componentDidMount */\r\nexport const mounts = []\r\n\r\n/** Diff recursion count, used to track the end of the diff cycle. */\r\nexport let diffLevel = 0\r\n\r\n/** Global flag indicating if the diff is currently within an SVG */\r\nlet isSvgMode = false\r\n\r\n/** Global flag indicating if the diff is performing hydration */\r\nlet hydrating = false\r\n\r\n/** Invoke queued componentDidMount lifecycle methods */\r\nexport function flushMounts() {\r\n  let c\r\n  while ((c = mounts.pop())) {\r\n    if (options.afterMount) options.afterMount(c)\r\n    if (c.componentDidMount) c.componentDidMount()\r\n    if (c.installed) c.installed()\r\n  }\r\n}\r\n\r\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\r\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\r\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\r\n *\t@returns {Element} dom\t\t\tThe created/mutated element\r\n *\t@private\r\n */\r\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\r\n  // diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\r\n  if (!diffLevel++) {\r\n    // when first starting the diff, check if we're diffing an SVG or within an SVG\r\n    isSvgMode = parent != null && parent.ownerSVGElement !== undefined\r\n\r\n    // hydration is indicated by the existing element to be diffed not having a prop cache\r\n    hydrating = dom != null && !(ATTR_KEY in dom)\r\n  }\r\n  let ret\r\n\r\n  if(isArray(vnode)){\r\n    vnode = {\r\n      nodeName: 'span',\r\n      children: vnode\r\n    }\r\n  } \r\n  \r\n  ret = idiff(dom, vnode, context, mountAll, componentRoot)\r\n  // append the element if its a new parent\r\n  if (parent && ret.parentNode !== parent) parent.appendChild(ret)\r\n\r\n  // diffLevel being reduced to 0 means we're exiting the diff\r\n  if (!--diffLevel) {\r\n    hydrating = false\r\n    // invoke queued componentDidMount lifecycle methods\r\n    if (!componentRoot) flushMounts()\r\n  }\r\n\r\n  return ret\r\n}\r\n\r\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\r\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\r\n  let out = dom,\r\n    prevSvgMode = isSvgMode\r\n\r\n  // empty values (null, undefined, booleans) render as empty Text nodes\r\n  if (vnode == null || typeof vnode === 'boolean') vnode = ''\r\n\r\n  // If the VNode represents a Component, perform a component diff:\r\n  let vnodeName = vnode.nodeName\r\n  if (options.mapping[vnodeName]) {\r\n    vnode.nodeName = options.mapping[vnodeName]\r\n    return buildComponentFromVNode(dom, vnode, context, mountAll)\r\n  }\r\n\r\n  // Fast case: Strings & Numbers create/update Text nodes.\r\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\r\n    // update if it's already a Text node:\r\n    if (\r\n      dom &&\r\n      dom.splitText !== undefined &&\r\n      dom.parentNode &&\r\n      (!dom._component || componentRoot)\r\n    ) {\r\n      /* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\r\n      if (dom.nodeValue != vnode) {\r\n        dom.nodeValue = vnode\r\n      }\r\n    } else {\r\n      // it wasn't a Text node: replace it with one and recycle the old Element\r\n      out = document.createTextNode(vnode)\r\n      if (dom) {\r\n        if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\r\n        recollectNodeTree(dom, true)\r\n      }\r\n    }\r\n\r\n    //ie8 error\r\n    try {\r\n      out[ATTR_KEY] = true\r\n    } catch (e) {}\r\n\r\n    return out\r\n  }\r\n\r\n  // Tracks entering and exiting SVG namespace when descending through the tree.\r\n  isSvgMode =\r\n    vnodeName === 'svg'\r\n      ? true\r\n      : vnodeName === 'foreignObject'\r\n      ? false\r\n      : isSvgMode\r\n\r\n  // If there's no existing element or it's the wrong type, create a new one:\r\n  vnodeName = String(vnodeName)\r\n  if (!dom || !isNamedNode(dom, vnodeName)) {\r\n    out = createNode(vnodeName, isSvgMode)\r\n\r\n    if (dom) {\r\n      // move children into the replacement node\r\n      while (dom.firstChild) out.appendChild(dom.firstChild)\r\n\r\n      // if the previous Element was mounted into the DOM, replace it inline\r\n      if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\r\n\r\n      // recycle the old element (skips non-Element node types)\r\n      recollectNodeTree(dom, true)\r\n    }\r\n  }\r\n\r\n  let fc = out.firstChild,\r\n    props = out[ATTR_KEY],\r\n    vchildren = vnode.children\r\n\r\n  if (props == null) {\r\n    props = out[ATTR_KEY] = {}\r\n    for (let a = out.attributes, i = a.length; i--; )\r\n      props[a[i].name] = a[i].value\r\n  }\r\n\r\n  // Optimization: fast-path for elements containing a single TextNode:\r\n  if (\r\n    !hydrating &&\r\n    vchildren &&\r\n    vchildren.length === 1 &&\r\n    typeof vchildren[0] === 'string' &&\r\n    fc != null &&\r\n    fc.splitText !== undefined &&\r\n    fc.nextSibling == null\r\n  ) {\r\n    if (fc.nodeValue != vchildren[0]) {\r\n      fc.nodeValue = vchildren[0]\r\n    }\r\n  }\r\n  // otherwise, if there are existing or new children, diff them:\r\n  else if ((vchildren && vchildren.length) || fc != null) {\r\n    innerDiffNode(\r\n      out,\r\n      vchildren,\r\n      context,\r\n      mountAll,\r\n      hydrating || props.dangerouslySetInnerHTML != null\r\n    )\r\n  }\r\n\r\n  // Apply attributes/props from VNode to the DOM Element:\r\n  diffAttributes(out, vnode.attributes, props)\r\n\r\n  // restore previous SVG mode: (in case we're exiting an SVG namespace)\r\n  isSvgMode = prevSvgMode\r\n\r\n  return out\r\n}\r\n\r\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\r\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\r\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\r\n *\t@param {Object} context\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\r\n *\t@param {Boolean} mountAll\r\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\r\n */\r\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\r\n  let originalChildren = dom.childNodes,\r\n    children = [],\r\n    keyed = {},\r\n    keyedLen = 0,\r\n    min = 0,\r\n    len = originalChildren.length,\r\n    childrenLen = 0,\r\n    vlen = vchildren ? vchildren.length : 0,\r\n    j,\r\n    c,\r\n    f,\r\n    vchild,\r\n    child\r\n\r\n  // Build up a map of keyed children and an Array of unkeyed children:\r\n  if (len !== 0) {\r\n    for (let i = 0; i < len; i++) {\r\n      let child = originalChildren[i],\r\n        props = child[ATTR_KEY],\r\n        key =\r\n          vlen && props\r\n            ? child._component\r\n              ? child._component.__key\r\n              : props.key\r\n            : null\r\n      if (key != null) {\r\n        keyedLen++\r\n        keyed[key] = child\r\n      } else if (\r\n        props ||\r\n        (child.splitText !== undefined\r\n          ? isHydrating\r\n            ? child.nodeValue.trim()\r\n            : true\r\n          : isHydrating)\r\n      ) {\r\n        children[childrenLen++] = child\r\n      }\r\n    }\r\n  }\r\n\r\n  if (vlen !== 0) {\r\n    for (let i = 0; i < vlen; i++) {\r\n      vchild = vchildren[i]\r\n      child = null\r\n\r\n      // attempt to find a node based on key matching\r\n      let key = vchild.key\r\n      if (key != null) {\r\n        if (keyedLen && keyed[key] !== undefined) {\r\n          child = keyed[key]\r\n          keyed[key] = undefined\r\n          keyedLen--\r\n        }\r\n      }\r\n      // attempt to pluck a node of the same type from the existing children\r\n      else if (!child && min < childrenLen) {\r\n        for (j = min; j < childrenLen; j++) {\r\n          if (\r\n            children[j] !== undefined &&\r\n            isSameNodeType((c = children[j]), vchild, isHydrating)\r\n          ) {\r\n            child = c\r\n            children[j] = undefined\r\n            if (j === childrenLen - 1) childrenLen--\r\n            if (j === min) min++\r\n            break\r\n          }\r\n        }\r\n      }\r\n\r\n      // morph the matched/found/created DOM child to match vchild (deep)\r\n      child = idiff(child, vchild, context, mountAll)\r\n\r\n      f = originalChildren[i]\r\n      if (child && child !== dom && child !== f) {\r\n        if (f == null) {\r\n          dom.appendChild(child)\r\n        } else if (child === f.nextSibling) {\r\n          removeNode(f)\r\n        } else {\r\n          dom.insertBefore(child, f)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // remove unused keyed children:\r\n  if (keyedLen) {\r\n    for (let i in keyed)\r\n      if (keyed[i] !== undefined) recollectNodeTree(keyed[i], false)\r\n  }\r\n\r\n  // remove orphaned unkeyed children:\r\n  while (min <= childrenLen) {\r\n    if ((child = children[childrenLen--]) !== undefined)\r\n      recollectNodeTree(child, false)\r\n  }\r\n}\r\n\r\n/** Recursively recycle (or just unmount) a node and its descendants.\r\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\r\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\r\n */\r\nexport function recollectNodeTree(node, unmountOnly) {\r\n  let component = node._component\r\n  if (component) {\r\n    // if node is owned by a Component, unmount that component (ends up recursing back here)\r\n    unmountComponent(component)\r\n  } else {\r\n    // If the node's VNode had a ref function, invoke it with null here.\r\n    // (this is part of the React spec, and smart for unsetting references)\r\n    if (node[ATTR_KEY] != null && node[ATTR_KEY].ref) node[ATTR_KEY].ref(null)\r\n\r\n    if (unmountOnly === false || node[ATTR_KEY] == null) {\r\n      removeNode(node)\r\n    }\r\n\r\n    removeChildren(node)\r\n  }\r\n}\r\n\r\n/** Recollect/unmount all children.\r\n *\t- we use .lastChild here because it causes less reflow than .firstChild\r\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\r\n */\r\nexport function removeChildren(node) {\r\n  node = node.lastChild\r\n  while (node) {\r\n    let next = node.previousSibling\r\n    recollectNodeTree(node, true)\r\n    node = next\r\n  }\r\n}\r\n\r\n/** Apply differences in attributes from a VNode to the given DOM Element.\r\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\r\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\r\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\r\n */\r\nfunction diffAttributes(dom, attrs, old) {\r\n  let name\r\n\r\n  // remove attributes no longer present on the vnode by setting them to undefined\r\n  for (name in old) {\r\n    if (!(attrs && attrs[name] != null) && old[name] != null) {\r\n      setAccessor(dom, name, old[name], (old[name] = undefined), isSvgMode)\r\n    }\r\n  }\r\n\r\n  // add new & update changed attributes\r\n  for (name in attrs) {\r\n    if (\r\n      name !== 'children' &&\r\n      name !== 'innerHTML' &&\r\n      (!(name in old) ||\r\n        attrs[name] !==\r\n          (name === 'value' || name === 'checked' ? dom[name] : old[name]))\r\n    ) {\r\n      setAccessor(dom, name, old[name], (old[name] = attrs[name]), isSvgMode)\r\n    }\r\n  }\r\n}\r\n","import Component from '../component'\r\nimport options from '../options'\r\n/** Retains a pool of Components for re-use, keyed on component name.\r\n *\tNote: since component names are not unique or even necessarily available, these are primarily a form of sharding.\r\n *\t@private\r\n */\r\nconst components = {}\r\n\r\n/** Reclaim a component for later re-use by the recycler. */\r\nexport function collectComponent(component) {\r\n  let name = component.constructor.name\r\n  ;(components[name] || (components[name] = [])).push(component)\r\n}\r\n\r\n/** Create a component. Normalizes differences between PFC's and classful Components. */\r\nexport function createComponent(Ctor, props, context, vnode) {\r\n  let list = components[Ctor.name],\r\n    inst\r\n\r\n  if (Ctor.prototype && Ctor.prototype.render) {\r\n    inst = new Ctor(props, context)\r\n    Component.call(inst, props, context)\r\n  } else {\r\n    inst = new Component(props, context)\r\n    inst.constructor = Ctor\r\n    inst.render = doRender\r\n  }\r\n  vnode && (inst.___scopedCssAttr = vnode.css)\r\n\r\n  if (list) {\r\n    for (let i = list.length; i--; ) {\r\n      if (list[i].constructor === Ctor) {\r\n        inst.nextBase = list[i].nextBase\r\n        list.splice(i, 1)\r\n        break\r\n      }\r\n    }\r\n  }\r\n  return inst\r\n}\r\n\r\n/** The `.render()` method for a PFC backing instance. */\r\nfunction doRender(props, data, context) {\r\n  return this.constructor(props, context)\r\n}\r\n","import options from './options'\r\n\r\nlet styleId = 0\r\n\r\nexport function getCtorName(ctor) {\r\n  for (let i = 0, len = options.styleCache.length; i < len; i++) {\r\n    let item = options.styleCache[i]\r\n\r\n    if (item.ctor === ctor) {\r\n      return item.attrName\r\n    }\r\n  }\r\n\r\n  let attrName = 's' + styleId\r\n  options.styleCache.push({ ctor, attrName })\r\n  styleId++\r\n\r\n  return attrName\r\n}\r\n\r\n// many thanks to https://github.com/thomaspark/scoper/\r\nexport function scoper(css, prefix) {\r\n  prefix = '[' + prefix.toLowerCase() + ']'\r\n  // https://www.w3.org/TR/css-syntax-3/#lexical\r\n  css = css.replace(/\\/\\*[^*]*\\*+([^/][^*]*\\*+)*\\//g, '')\r\n  // eslint-disable-next-line\r\n    let re = new RegExp('([^\\r\\n,{}:]+)(:[^\\r\\n,{}]+)?(,(?=[^{}]*{)|\\s*{)', 'g')\r\n  /**\r\n   * Example:\r\n   *\r\n   * .classname::pesudo { color:red }\r\n   *\r\n   * g1 is normal selector `.classname`\r\n   * g2 is pesudo class or pesudo element\r\n   * g3 is the suffix\r\n   */\r\n  css = css.replace(re, (g0, g1, g2, g3) => {\r\n    if (typeof g2 === 'undefined') {\r\n      g2 = ''\r\n    }\r\n\r\n    /* eslint-ignore-next-line */\r\n    if (\r\n      g1.match(\r\n        /^\\s*(@media|\\d+%?|@-webkit-keyframes|@keyframes|to|from|@font-face)/\r\n      )\r\n    ) {\r\n      return g1 + g2 + g3\r\n    }\r\n\r\n    let appendClass = g1.replace(/(\\s*)$/, '') + prefix + g2\r\n    //let prependClass = prefix + ' ' + g1.trim() + g2;\r\n\r\n    return appendClass + g3\r\n    //return appendClass + ',' + prependClass + g3;\r\n  })\r\n\r\n  return css\r\n}\r\n\r\nexport function addStyle(cssText, id) {\r\n  id = id.toLowerCase()\r\n  let ele = document.getElementById(id)\r\n  let head = document.getElementsByTagName('head')[0]\r\n  if (ele && ele.parentNode === head) {\r\n    head.removeChild(ele)\r\n  }\r\n\r\n  let someThingStyles = document.createElement('style')\r\n  head.appendChild(someThingStyles)\r\n  someThingStyles.setAttribute('type', 'text/css')\r\n  someThingStyles.setAttribute('id', id)\r\n  if (window.ActiveXObject) {\r\n    someThingStyles.styleSheet.cssText = cssText\r\n  } else {\r\n    someThingStyles.textContent = cssText\r\n  }\r\n}\r\n\r\nexport function addStyleWithoutId(cssText) {\r\n  let head = document.getElementsByTagName('head')[0]\r\n  let someThingStyles = document.createElement('style')\r\n  head.appendChild(someThingStyles)\r\n  someThingStyles.setAttribute('type', 'text/css')\r\n\r\n  if (window.ActiveXObject) {\r\n    someThingStyles.styleSheet.cssText = cssText\r\n  } else {\r\n    someThingStyles.textContent = cssText\r\n  }\r\n}\r\n\r\nexport function addScopedAttr(vdom, style, attr, component) {\r\n  if (options.scopedStyle) {\r\n    scopeVdom(attr, vdom)\r\n    style = scoper(style, attr)\r\n    if (style !== component._preCss) {\r\n      addStyle(style, attr)\r\n    }\r\n  } else if (style !== component._preCss) {\r\n    addStyleWithoutId(style)\r\n  }\r\n  component._preCss = style\r\n}\r\n\r\nexport function addScopedAttrStatic(vdom, style, attr) {\r\n  if (options.scopedStyle) {\r\n    scopeVdom(attr, vdom)\r\n    if (!options.staticStyleMapping[attr]) {\r\n      addStyle(scoper(style, attr), attr)\r\n      options.staticStyleMapping[attr] = true\r\n    }\r\n  } else if (!options.staticStyleMapping[attr]) {\r\n    addStyleWithoutId(style)\r\n    options.staticStyleMapping[attr] = true\r\n  }\r\n}\r\n\r\nexport function scopeVdom(attr, vdom) {\r\n  if (typeof vdom === 'object') {\r\n    vdom.attributes = vdom.attributes || {}\r\n    vdom.attributes[attr] = ''\r\n    vdom.css = vdom.css || {}\r\n    vdom.css[attr] = ''\r\n    vdom.children.forEach(child => scopeVdom(attr, child))\r\n  }\r\n}\r\n\r\nexport function scopeHost(vdom, css) {\r\n  if (typeof vdom === 'object' && css) {\r\n    vdom.attributes = vdom.attributes || {}\r\n    for(let key in css){\r\n      vdom.attributes[key] = ''\r\n    }\r\n  }\r\n}","/* obaa 1.0.0\r\n * By dntzhang\r\n * Github: https://github.com/Tencent/omi\r\n * MIT Licensed.\r\n */\r\n\r\nvar obaa = function(target, arr, callback) {\r\n  var _observe = function(target, arr, callback) {\r\n    if (!target.$observer) target.$observer = this\r\n    var $observer = target.$observer\r\n    var eventPropArr = []\r\n    if (obaa.isArray(target)) {\r\n      if (target.length === 0) {\r\n        target.$observeProps = {}\r\n        target.$observeProps.$observerPath = '#'\r\n      }\r\n      $observer.mock(target)\r\n    }\r\n    for (var prop in target) {\r\n      if (target.hasOwnProperty(prop)) {\r\n        if (callback) {\r\n          if (obaa.isArray(arr) && obaa.isInArray(arr, prop)) {\r\n            eventPropArr.push(prop)\r\n            $observer.watch(target, prop)\r\n          } else if (obaa.isString(arr) && prop == arr) {\r\n            eventPropArr.push(prop)\r\n            $observer.watch(target, prop)\r\n          }\r\n        } else {\r\n          eventPropArr.push(prop)\r\n          $observer.watch(target, prop)\r\n        }\r\n      }\r\n    }\r\n    $observer.target = target\r\n    if (!$observer.propertyChangedHandler) $observer.propertyChangedHandler = []\r\n    var propChanged = callback ? callback : arr\r\n    $observer.propertyChangedHandler.push({\r\n      all: !callback,\r\n      propChanged: propChanged,\r\n      eventPropArr: eventPropArr\r\n    })\r\n  }\r\n  _observe.prototype = {\r\n    onPropertyChanged: function(prop, value, oldValue, target, path) {\r\n      if (value !== oldValue && this.propertyChangedHandler) {\r\n        var rootName = obaa._getRootName(prop, path)\r\n        for (\r\n          var i = 0, len = this.propertyChangedHandler.length;\r\n          i < len;\r\n          i++\r\n        ) {\r\n          var handler = this.propertyChangedHandler[i]\r\n          if (\r\n            handler.all ||\r\n            obaa.isInArray(handler.eventPropArr, rootName) ||\r\n            rootName.indexOf('Array-') === 0\r\n          ) {\r\n            handler.propChanged.call(this.target, prop, value, oldValue, path)\r\n          }\r\n        }\r\n      }\r\n      if (prop.indexOf('Array-') !== 0 && typeof value === 'object') {\r\n        this.watch(target, prop, target.$observeProps.$observerPath)\r\n      }\r\n    },\r\n    mock: function(target) {\r\n      var self = this\r\n      obaa.methods.forEach(function(item) {\r\n        target[item] = function() {\r\n          var old = Array.prototype.slice.call(this, 0)\r\n          var result = Array.prototype[item].apply(\r\n            this,\r\n            Array.prototype.slice.call(arguments)\r\n          )\r\n          if (new RegExp('\\\\b' + item + '\\\\b').test(obaa.triggerStr)) {\r\n            for (var cprop in this) {\r\n              if (this.hasOwnProperty(cprop) && !obaa.isFunction(this[cprop])) {\r\n                self.watch(this, cprop, this.$observeProps.$observerPath)\r\n              }\r\n            }\r\n            //todo\r\n            self.onPropertyChanged(\r\n              'Array-' + item,\r\n              this,\r\n              old,\r\n              this,\r\n              this.$observeProps.$observerPath\r\n            )\r\n          }\r\n          return result\r\n        }\r\n        target[\r\n          'pure' + item.substring(0, 1).toUpperCase() + item.substring(1)\r\n        ] = function() {\r\n          return Array.prototype[item].apply(\r\n            this,\r\n            Array.prototype.slice.call(arguments)\r\n          )\r\n        }\r\n      })\r\n    },\r\n    watch: function(target, prop, path) {\r\n      if (prop === '$observeProps' || prop === '$observer') return\r\n      if (obaa.isFunction(target[prop])) return\r\n      if (!target.$observeProps) target.$observeProps = {}\r\n      if (path !== undefined) {\r\n        target.$observeProps.$observerPath = path\r\n      } else {\r\n        target.$observeProps.$observerPath = '#'\r\n      }\r\n      var self = this\r\n      var currentValue = (target.$observeProps[prop] = target[prop])\r\n      Object.defineProperty(target, prop, {\r\n        get: function() {\r\n          return this.$observeProps[prop]\r\n        },\r\n        set: function(value) {\r\n          var old = this.$observeProps[prop]\r\n          this.$observeProps[prop] = value\r\n          self.onPropertyChanged(\r\n            prop,\r\n            value,\r\n            old,\r\n            this,\r\n            target.$observeProps.$observerPath\r\n          )\r\n        }\r\n      })\r\n      if (typeof currentValue == 'object') {\r\n        if (obaa.isArray(currentValue)) {\r\n          this.mock(currentValue)\r\n          if (currentValue.length === 0) {\r\n            if (!currentValue.$observeProps) currentValue.$observeProps = {}\r\n            if (path !== undefined) {\r\n              currentValue.$observeProps.$observerPath = path\r\n            } else {\r\n              currentValue.$observeProps.$observerPath = '#'\r\n            }\r\n          }\r\n        }\r\n        for (var cprop in currentValue) {\r\n          if (currentValue.hasOwnProperty(cprop)) {\r\n            this.watch(\r\n              currentValue,\r\n              cprop,\r\n              target.$observeProps.$observerPath + '-' + prop\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return new _observe(target, arr, callback)\r\n}\r\n\r\nobaa.methods = [\r\n  'concat',\r\n  'copyWithin',\r\n  'entries',\r\n  'every',\r\n  'fill',\r\n  'filter',\r\n  'find',\r\n  'findIndex',\r\n  'forEach',\r\n  'includes',\r\n  'indexOf',\r\n  'join',\r\n  'keys',\r\n  'lastIndexOf',\r\n  'map',\r\n  'pop',\r\n  'push',\r\n  'reduce',\r\n  'reduceRight',\r\n  'reverse',\r\n  'shift',\r\n  'slice',\r\n  'some',\r\n  'sort',\r\n  'splice',\r\n  'toLocaleString',\r\n  'toString',\r\n  'unshift',\r\n  'values',\r\n  'size'\r\n]\r\nobaa.triggerStr = [\r\n  'concat',\r\n  'copyWithin',\r\n  'fill',\r\n  'pop',\r\n  'push',\r\n  'reverse',\r\n  'shift',\r\n  'sort',\r\n  'splice',\r\n  'unshift',\r\n  'size'\r\n].join(',')\r\n\r\nobaa.isArray = function(obj) {\r\n  return Object.prototype.toString.call(obj) === '[object Array]'\r\n}\r\n\r\nobaa.isString = function(obj) {\r\n  return typeof obj === 'string'\r\n}\r\n\r\nobaa.isInArray = function(arr, item) {\r\n  for (var i = arr.length; --i > -1; ) {\r\n    if (item === arr[i]) return true\r\n  }\r\n  return false\r\n}\r\n\r\nobaa.isFunction = function(obj) {\r\n  return Object.prototype.toString.call(obj) == '[object Function]'\r\n}\r\n\r\nobaa._getRootName = function(prop, path) {\r\n  if (path === '#') {\r\n    return prop\r\n  }\r\n  return path.split('-')[1]\r\n}\r\n\r\nobaa.add = function(obj, prop) {\r\n  var $observer = obj.$observer\r\n  $observer.watch(obj, prop)\r\n}\r\n\r\nobaa.set = function(obj, prop, value, exec) {\r\n  if (!exec) {\r\n    obj[prop] = value\r\n  }\r\n  var $observer = obj.$observer\r\n  $observer.watch(obj, prop)\r\n  if (exec) {\r\n    obj[prop] = value\r\n  }\r\n}\r\n\r\nArray.prototype.size = function(length) {\r\n  this.length = length\r\n}\r\n\r\nexport default obaa\r\n","const callbacks = []\r\nconst nextTickCallback = []\r\n\r\nexport function tick(fn, scope) {\r\n  callbacks.push({ fn, scope })\r\n}\r\n\r\nexport function fireTick() {\r\n  callbacks.forEach(item => {\r\n    item.fn.call(item.scope)\r\n  })\r\n\r\n  nextTickCallback.forEach(nextItem => {\r\n    nextItem.fn.call(nextItem.scope)\r\n  })\r\n  nextTickCallback.length = 0\r\n}\r\n\r\nexport function nextTick(fn, scope) {\r\n  nextTickCallback.push({ fn, scope })\r\n}\r\n","import obaa from './obaa'\r\nimport { fireTick } from './tick'\r\n\r\nexport function proxyUpdate(ele) {\r\n  let timeout = null\r\n  obaa(ele.data, () => {\r\n    if (ele._willUpdate) {\r\n      return\r\n    }\r\n    if (ele.constructor.mergeUpdate) {\r\n      clearTimeout(timeout)\r\n\r\n      timeout = setTimeout(() => {\r\n        ele.update()\r\n        fireTick()\r\n      }, 0)\r\n    } else {\r\n      ele.update()\r\n      fireTick()\r\n    }\r\n  })\r\n}\r\n","import {\r\n  SYNC_RENDER,\r\n  NO_RENDER,\r\n  FORCE_RENDER,\r\n  ASYNC_RENDER,\r\n  ATTR_KEY\r\n} from '../constants'\r\nimport options from '../options'\r\nimport { extend } from '../util'\r\nimport { enqueueRender } from '../render-queue'\r\nimport { getNodeProps } from './index'\r\nimport {\r\n  diff,\r\n  mounts,\r\n  diffLevel,\r\n  flushMounts,\r\n  recollectNodeTree,\r\n  removeChildren\r\n} from './diff'\r\nimport { createComponent, collectComponent } from './component-recycler'\r\nimport { removeNode } from '../dom/index'\r\nimport { addScopedAttr, addScopedAttrStatic, getCtorName, scopeVdom, scopeHost } from '../style'\r\nimport { proxyUpdate } from '../observe'\r\n\r\n/** Set a component's `props` (generally derived from JSX attributes).\r\n *\t@param {Object} props\r\n *\t@param {Object} [opts]\r\n *\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\r\n *\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\r\n */\r\nexport function setComponentProps(component, props, opts, context, mountAll) {\r\n  if (component._disable) return\r\n  component._disable = true\r\n\r\n  if ((component.__ref = props.ref)) delete props.ref\r\n  if ((component.__key = props.key)) delete props.key\r\n\r\n  if (!component.base || mountAll) {\r\n    if (component.componentWillMount) component.componentWillMount()\r\n    if (component.beforeInstall) component.beforeInstall()\r\n    if (component.install) component.install()\r\n    if (component.constructor.observe) {\r\n      proxyUpdate(component)\r\n    }\r\n  } else if (component.receiveProps) {\r\n    component.receiveProps(props, component.data, component.props)\r\n  } else if (component.componentWillReceiveProps) {\r\n    component.componentWillReceiveProps(props, context)\r\n  }\r\n\r\n  if (context && context !== component.context) {\r\n    if (!component.prevContext) component.prevContext = component.context\r\n    component.context = context\r\n  }\r\n\r\n  if (!component.prevProps) component.prevProps = component.props\r\n  component.props = props\r\n\r\n  component._disable = false\r\n\r\n  if (opts !== NO_RENDER) {\r\n    if (\r\n      opts === SYNC_RENDER ||\r\n      options.syncComponentUpdates !== false ||\r\n      !component.base\r\n    ) {\r\n      renderComponent(component, SYNC_RENDER, mountAll)\r\n    } else {\r\n      enqueueRender(component)\r\n    }\r\n  }\r\n\r\n  if (component.__ref) component.__ref(component)\r\n}\r\n\r\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\r\n *\t@param {Component} component\r\n *\t@param {Object} [opts]\r\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\r\n *\t@private\r\n */\r\nexport function renderComponent(component, opts, mountAll, isChild) {\r\n  if (component._disable) return\r\n\r\n  let props = component.props,\r\n    data = component.data,\r\n    context = component.context,\r\n    previousProps = component.prevProps || props,\r\n    previousState = component.prevState || data,\r\n    previousContext = component.prevContext || context,\r\n    isUpdate = component.base,\r\n    nextBase = component.nextBase,\r\n    initialBase = isUpdate || nextBase,\r\n    initialChildComponent = component._component,\r\n    skip = false,\r\n    rendered,\r\n    inst,\r\n    cbase\r\n\r\n  // if updating\r\n  if (isUpdate) {\r\n    component.props = previousProps\r\n    component.data = previousState\r\n    component.context = previousContext\r\n    if (\r\n      opts !== FORCE_RENDER &&\r\n      component.shouldComponentUpdate &&\r\n      component.shouldComponentUpdate(props, data, context) === false\r\n    ) {\r\n      skip = true\r\n    } else if (component.componentWillUpdate) {\r\n      component.componentWillUpdate(props, data, context)\r\n    } else if (component.beforeUpdate) {\r\n      component.beforeUpdate(props, data, context)\r\n    }\r\n    component.props = props\r\n    component.data = data\r\n    component.context = context\r\n  }\r\n\r\n  component.prevProps = component.prevState = component.prevContext = component.nextBase = null\r\n\r\n  if (!skip) {\r\n    component.beforeRender && component.beforeRender()\r\n    rendered = component.render(props, data, context)\r\n\r\n    //don't rerender\r\n    if (component.css) {\r\n      addScopedAttrStatic(\r\n        rendered,\r\n        component.css(),\r\n        '_s' + getCtorName(component.constructor)\r\n      )\r\n    }\r\n    \r\n    if (component.dynamicCss) {\r\n      addScopedAttr(\r\n        rendered,\r\n        component.dynamicCss(),\r\n        '_s' + component.elementId,\r\n        component\r\n      )\r\n    }\r\n\r\n    scopeHost(rendered, component.___scopedCssAttr)\r\n\r\n    // context to pass to the child, can be updated via (grand-)parent component\r\n    if (component.getChildContext) {\r\n      context = extend(extend({}, context), component.getChildContext())\r\n    }\r\n\r\n    let childComponent = rendered && rendered.nodeName,\r\n      toUnmount,\r\n      base,\r\n      ctor = options.mapping[childComponent]\r\n\r\n    if (ctor) {\r\n      // set up high order component link\r\n\r\n      let childProps = getNodeProps(rendered)\r\n      inst = initialChildComponent\r\n\r\n      if (inst && inst.constructor === ctor && childProps.key == inst.__key) {\r\n        setComponentProps(inst, childProps, SYNC_RENDER, context, false)\r\n      } else {\r\n        toUnmount = inst\r\n\r\n        component._component = inst = createComponent(ctor, childProps, context)\r\n        inst.nextBase = inst.nextBase || nextBase\r\n        inst._parentComponent = component\r\n        setComponentProps(inst, childProps, NO_RENDER, context, false)\r\n        renderComponent(inst, SYNC_RENDER, mountAll, true)\r\n      }\r\n\r\n      base = inst.base\r\n    } else {\r\n      cbase = initialBase\r\n\r\n      // destroy high order component link\r\n      toUnmount = initialChildComponent\r\n      if (toUnmount) {\r\n        cbase = component._component = null\r\n      }\r\n\r\n      if (initialBase || opts === SYNC_RENDER) {\r\n        if (cbase) cbase._component = null\r\n        base = diff(\r\n          cbase,\r\n          rendered,\r\n          context,\r\n          mountAll || !isUpdate,\r\n          initialBase && initialBase.parentNode,\r\n          true\r\n        )\r\n      }\r\n    }\r\n\r\n    if (initialBase && base !== initialBase && inst !== initialChildComponent) {\r\n      let baseParent = initialBase.parentNode\r\n      if (baseParent && base !== baseParent) {\r\n        baseParent.replaceChild(base, initialBase)\r\n\r\n        if (!toUnmount) {\r\n          initialBase._component = null\r\n          recollectNodeTree(initialBase, false)\r\n        }\r\n      }\r\n    }\r\n\r\n    if (toUnmount) {\r\n      unmountComponent(toUnmount)\r\n    }\r\n\r\n    component.base = base\r\n    if (base && !isChild) {\r\n      let componentRef = component,\r\n        t = component\r\n      while ((t = t._parentComponent)) {\r\n        ;(componentRef = t).base = base\r\n      }\r\n      base._component = componentRef\r\n      base._componentConstructor = componentRef.constructor\r\n    }\r\n  }\r\n\r\n  if (!isUpdate || mountAll) {\r\n    mounts.unshift(component)\r\n  } else if (!skip) {\r\n    // Ensure that pending componentDidMount() hooks of child components\r\n    // are called before the componentDidUpdate() hook in the parent.\r\n    // Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\r\n    // flushMounts();\r\n\r\n    if (component.componentDidUpdate) {\r\n      component.componentDidUpdate(\r\n        previousProps,\r\n        previousState,\r\n        previousContext\r\n      )\r\n    }\r\n    if (component.afterUpdate) {\r\n      //deprecated\r\n      component.afterUpdate(previousProps, previousState, previousContext)\r\n    }\r\n    if (component.updated) {\r\n      component.updated(previousProps, previousState, previousContext)\r\n    }\r\n    if (options.afterUpdate) options.afterUpdate(component)\r\n  }\r\n\r\n  if (component._renderCallbacks != null) {\r\n    while (component._renderCallbacks.length)\r\n      component._renderCallbacks.pop().call(component)\r\n  }\r\n\r\n  if (!diffLevel && !isChild) flushMounts()\r\n}\r\n\r\n/** Apply the Component referenced by a VNode to the DOM.\r\n *\t@param {Element} dom\tThe DOM node to mutate\r\n *\t@param {VNode} vnode\tA Component-referencing VNode\r\n *\t@returns {Element} dom\tThe created/mutated element\r\n *\t@private\r\n */\r\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\r\n  let c = dom && dom._component,\r\n    originalComponent = c,\r\n    oldDom = dom,\r\n    isDirectOwner = c && dom._componentConstructor === vnode.nodeName,\r\n    isOwner = isDirectOwner,\r\n    props = getNodeProps(vnode)\r\n  while (c && !isOwner && (c = c._parentComponent)) {\r\n    isOwner = c.constructor === vnode.nodeName\r\n  }\r\n\r\n  if (c && isOwner && (!mountAll || c._component)) {\r\n    setComponentProps(c, props, ASYNC_RENDER, context, mountAll)\r\n    dom = c.base\r\n  } else {\r\n    if (originalComponent && !isDirectOwner) {\r\n      unmountComponent(originalComponent)\r\n      dom = oldDom = null\r\n    }\r\n\r\n    c = createComponent(vnode.nodeName, props, context, vnode)\r\n    if (dom && !c.nextBase) {\r\n      c.nextBase = dom\r\n      // passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\r\n      oldDom = null\r\n    }\r\n    setComponentProps(c, props, SYNC_RENDER, context, mountAll)\r\n    dom = c.base\r\n\r\n    if (oldDom && dom !== oldDom) {\r\n      oldDom._component = null\r\n      recollectNodeTree(oldDom, false)\r\n    }\r\n  }\r\n\r\n  return dom\r\n}\r\n\r\n/** Remove a component from the DOM and recycle it.\r\n *\t@param {Component} component\tThe Component instance to unmount\r\n *\t@private\r\n */\r\nexport function unmountComponent(component) {\r\n  if (options.beforeUnmount) options.beforeUnmount(component)\r\n\r\n  let base = component.base\r\n\r\n  component._disable = true\r\n\r\n  if (component.componentWillUnmount) component.componentWillUnmount()\r\n  if (component.uninstall) component.uninstall()\r\n\r\n  component.base = null\r\n\r\n  // recursively tear down & recollect high-order component children:\r\n  let inner = component._component\r\n  if (inner) {\r\n    unmountComponent(inner)\r\n  } else if (base) {\r\n    if (base[ATTR_KEY] && base[ATTR_KEY].ref) base[ATTR_KEY].ref(null)\r\n\r\n    component.nextBase = base\r\n\r\n    removeNode(base)\r\n    collectComponent(component)\r\n\r\n    removeChildren(base)\r\n  }\r\n\r\n  if (component.__ref) component.__ref(null)\r\n}\r\n","import { FORCE_RENDER } from './constants'\r\nimport { renderComponent } from './vdom/component'\r\nimport options from './options'\r\nimport { nProps, assign } from './util'\r\n\r\nlet id = 0\r\n\r\nexport default class Component {\r\n  static is = 'WeElement'\r\n\r\n  constructor(props, store) {\r\n    this.props = assign(\r\n      nProps(this.constructor.props),\r\n      this.constructor.defaultProps,\r\n      props\r\n    )\r\n    this.elementId = id++\r\n    this.data = this.constructor.data || this.data || {}\r\n\r\n    this._preCss = null\r\n\r\n    this.store = store\r\n  }\r\n\r\n  update(callback) {\r\n    this._willUpdate = true\r\n    if (callback)\r\n      (this._renderCallbacks = this._renderCallbacks || []).push(callback)\r\n    renderComponent(this, FORCE_RENDER)\r\n    if (options.componentChange) options.componentChange(this, this.base)\r\n    this._willUpdate = false\r\n  }\r\n\r\n  fire(type, data) {\r\n    Object.keys(this.props).every(key => {\r\n      if ('on' + type.toLowerCase() === key.toLowerCase()) {\r\n        this.props[key]({ detail: data })\r\n        return false\r\n      }\r\n      return true\r\n    })\r\n  }\r\n\r\n  render() {}\r\n}\r\n","import { diff } from './vdom/diff'\r\nimport options from './options'\r\n\r\n/** Render JSX into a `parent` Element.\r\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\r\n *\t@param {Element} parent\t\tDOM element to render into\r\n *\t@param {object} [store]\r\n *\t@public\r\n */\r\nexport function render(vnode, parent, store) {\r\n  parent = typeof parent === 'string' ? document.querySelector(parent) : parent\r\n\r\n  if (store && store.merge) {\r\n    store.merge =\r\n      typeof store.merge === 'string'\r\n        ? document.querySelector(store.merge)\r\n        : store.merge\r\n  }\r\n\r\n  return diff(store && store.merge, vnode, store, false, parent, false)\r\n}\r\n","import options from './options'\r\n\r\nconst OBJECTTYPE = '[object Object]'\r\nconst ARRAYTYPE = '[object Array]'\r\n\r\nexport function define(name, ctor) {\r\n  options.mapping[name] = ctor\r\n  if (ctor.data && !ctor.pure) {\r\n    ctor.updatePath = getUpdatePath(ctor.data)\r\n  }\r\n}\r\n\r\nexport function getUpdatePath(data) {\r\n  const result = {}\r\n  dataToPath(data, result)\r\n  return result\r\n}\r\n\r\nfunction dataToPath(data, result) {\r\n  Object.keys(data).forEach(key => {\r\n    result[key] = true\r\n    const type = Object.prototype.toString.call(data[key])\r\n    if (type === OBJECTTYPE) {\r\n      _objToPath(data[key], key, result)\r\n    } else if (type === ARRAYTYPE) {\r\n      _arrayToPath(data[key], key, result)\r\n    }\r\n  })\r\n}\r\n\r\nfunction _objToPath(data, path, result) {\r\n  Object.keys(data).forEach(key => {\r\n    result[path + '.' + key] = true\r\n    delete result[path]\r\n    const type = Object.prototype.toString.call(data[key])\r\n    if (type === OBJECTTYPE) {\r\n      _objToPath(data[key], path + '.' + key, result)\r\n    } else if (type === ARRAYTYPE) {\r\n      _arrayToPath(data[key], path + '.' + key, result)\r\n    }\r\n  })\r\n}\r\n\r\nfunction _arrayToPath(data, path, result) {\r\n  data.forEach((item, index) => {\r\n    result[path + '[' + index + ']'] = true\r\n    delete result[path]\r\n    const type = Object.prototype.toString.call(item)\r\n    if (type === OBJECTTYPE) {\r\n      _objToPath(item, path + '[' + index + ']', result)\r\n    } else if (type === ARRAYTYPE) {\r\n      _arrayToPath(item, path + '[' + index + ']', result)\r\n    }\r\n  })\r\n}\r\n","function getGlobal() {\r\n  if (\r\n    typeof global !== 'object' ||\r\n    !global ||\r\n    global.Math !== Math ||\r\n    global.Array !== Array\r\n  ) {\r\n    if (typeof self !== 'undefined') {\r\n      return self\r\n    } else if (typeof window !== 'undefined') {\r\n      return window\r\n    } else if (typeof global !== 'undefined') {\r\n      return global\r\n    }\r\n    return (function() {\r\n      return this\r\n    })()\r\n  }\r\n  return global\r\n}\r\n\r\n/** Global options\r\n *\t@public\r\n *\t@namespace options {Object}\r\n */\r\nexport default {\r\n  scopedStyle: true,\r\n  mapping: {},\r\n  isWeb: true,\r\n  staticStyleMapping: {},\r\n  doc: typeof document === 'object' ? document : null,\r\n  root: getGlobal(),\r\n  //styleCache :[{ctor:ctor,ctorName:ctorName,style:style}]\r\n  styleCache: []\r\n  //componentChange(component, element) { },\r\n  /** If `true`, `prop` changes trigger synchronous component updates.\r\n   *\t@name syncComponentUpdates\r\n   *\t@type Boolean\r\n   *\t@default true\r\n   */\r\n  //syncComponentUpdates: true,\r\n\r\n  /** Processes all created VNodes.\r\n   *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\r\n   */\r\n  //vnode(vnode) { }\r\n\r\n  /** Hook invoked after a component is mounted. */\r\n  //afterMount(component) { },\r\n\r\n  /** Hook invoked after the DOM is updated with a component's latest render. */\r\n  //afterUpdate(component) { }\r\n\r\n  /** Hook invoked immediately before a component is unmounted. */\r\n  // beforeUnmount(component) { }\r\n}\r\n","export function rpx(str) {\r\n  return str.replace(/([1-9]\\d*|0)(\\.\\d*)*rpx/g, (a, b) => {\r\n    return (window.innerWidth * Number(b)) / 750 + 'px'\r\n  })\r\n}\r\n","import Component from './component'\r\n\r\nexport default class ModelView extends Component {\r\n  static observe = true\r\n\r\n  static mergeUpdate = true\r\n\r\n  beforeInstall() {\r\n    this.data = this.vm.data\r\n  }\r\n}\r\n","import { h, h as createElement } from './h'\r\nimport { cloneElement } from './clone-element'\r\nimport Component from './component'\r\nimport { render } from './render'\r\nimport { rerender } from './render-queue'\r\nimport options from './options'\r\nimport { define } from './define'\r\nimport { rpx } from './rpx'\r\nimport ModelView from './model-view'\r\n\r\nconst WeElement = Component\r\nconst defineElement = define\r\n\r\noptions.root.Omi = {\r\n  h,\r\n  createElement,\r\n  cloneElement,\r\n  Component,\r\n  render,\r\n  rerender,\r\n  options,\r\n  WeElement,\r\n  define,\r\n  rpx,\r\n  ModelView,\r\n  defineElement\r\n}\r\noptions.root.omi = Omi\r\noptions.root.Omi.version = 'omio-1.2.2'\r\n\r\nexport default {\r\n  h,\r\n  createElement,\r\n  cloneElement,\r\n  Component,\r\n  render,\r\n  rerender,\r\n  options,\r\n  WeElement,\r\n  define,\r\n  rpx,\r\n  ModelView,\r\n  defineElement\r\n}\r\n\r\nexport {\r\n  h,\r\n  createElement,\r\n  cloneElement,\r\n  Component,\r\n  render,\r\n  rerender,\r\n  options,\r\n  WeElement,\r\n  define,\r\n  rpx,\r\n  ModelView,\r\n  defineElement\r\n}\r\n"]}