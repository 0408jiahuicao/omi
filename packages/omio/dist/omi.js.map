{"version":3,"sources":["../src/vnode.js","../src/h.js","../src/util.js","../src/clone-element.js","../src/constants.js","../src/render-queue.js","../src/vdom/index.js","../src/dom/index.js","../src/vdom/diff.js","../src/vdom/component-recycler.js","../src/style.js","../src/obaa.js","../src/tick.js","../src/observe.js","../src/vdom/component.js","../src/component.js","../src/render.js","../src/define.js","../src/options.js","../src/rpx.js","../src/model-view.js","../src/omi.js"],"names":["VNode","h","nodeName","attributes","lastSimple","child","simple","i","children","EMPTY_CHILDREN","arguments","length","stack","push","pop","undefined","String","p","options","isWeb","map","value","key","vnode","extend","obj","props","isArray","Object","prototype","toString","call","nProps","result","keys","forEach","cloneElement","slice","ATTR_KEY","component","debounceRendering","defer","rerender","items","element","base","renderComponent","list","componentChange","isNamedNode","_componentConstructor","node","normalizedNodeName","toLowerCase","defaultProps","doc","createElementNS","createElement","_ref","createNode","a","b","cssTxt","isSvg","rule","split","o","x","trim","s","replace","Array","Symbol","iterator","_ref3","properties","next","done","_ref2","property","style","parseCSSText","match","cssText","parentNode","removeChild","setAccessor","name","old","className","IS_NON_DIMENSIONAL","test","oldJson","currentJson","changed","ckey","setStyles","substring","eventProxy","useCapture","removeEventListener","_listeners","innerHTML","setProperty","removeAttribute","ns","addEventListener","setAttributeNS","setAttribute","e","this","type","event","diffLevel","c","mounts","isSvgMode","afterMount","installed","diff","dom","context","mountAll","parent","componentRoot","ret","idiff","ownerSVGElement","hydrating","out","prevSvgMode","vnodeName","mapping","_component","buildComponentFromVNode","document","createTextNode","replaceChild","recollectNodeTree","appendChild","vchildren","fc","nodeValue","innerDiffNode","isHydrating","j","originalChildren","keyed","keyedLen","childrenLen","vlen","_child","f","__key","vchild","splitText","len","min","nextSibling","removeNode","insertBefore","unmountOnly","removeChildren","previousSibling","attrs","collectComponent","components","Ctor","render","inst","constructor","Component","createComponent","nextBase","splice","data","getCtorName","ctor","item","styleCache","attrName","styleId","prefix","re","css","g0","g1","g2","g3","appendClass","addStyle","id","ele","head","getElementsByTagName","someThingStyles","getElementById","textContent","window","ActiveXObject","styleSheet","addStyleWithoutId","attr","scopeVdom","_preCss","scopedStyle","vdom","staticStyleMapping","addScopedAttrStatic","scoper","fireTick","size","scope","callbacks","nextItem","fn","timeout","nextTickCallback","clearTimeout","proxyUpdate","update","setComponentProps","opts","_disable","beforeInstall","install","observe","receiveProps","componentWillReceiveProps","prevContext","enqueueRender","prevProps","__ref","isChild","previousProps","previousState","isUpdate","initialBase","initialChildComponent","previousContext","rendered","shouldComponentUpdate","cbase","componentWillUpdate","beforeUpdate","FORCE_RENDER","staticCss","addScopedAttr","elementId","childComponent","childProps","getNodeProps","toUnmount","baseParent","SYNC_RENDER","componentRef","t","unshift","_parentComponent","componentDidUpdate","afterUpdate","updated","_renderCallbacks","flushMounts","oldDom","originalComponent","isDirectOwner","isOwner","unmountComponent","beforeUnmount","componentWillUnmount","ref","instance","Constructor","TypeError","querySelector","store","merge","updatePath","getUpdatePath","OBJECTTYPE","ARRAYTYPE","define","dataToPath","_objToPath","_arrayToPath","path","index","Number","_classCallCheck$1","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","root","global","Math","br","hr","h1","h2","h3","h4","h5","h6","abbr","address","bdi","bdo","blockquote","cite","code","del","ins","dfn","em","strong","samp","kbd","var","mark","pre","q","ruby","rp","rt","small","sub","sup","time","u","wbr","form","input","textarea","button","select","option","optgroup","label","fieldset","datalist","legend","output","iframe","img","canvas","figure","figcaption","audio","source","video","track","nav","link","ul","ol","li","dl","dt","dd","menu","command","table","caption","th","td","tr","thead","tbody","tfoot","col","colgroup","div","main","span","header","footer","section","article","aside","details","dialog","summary","progress","meter","meta","area","script","noscript","embed","object","param","view","scroll-view","swiper","icon","text","checkbox","radio","picker","picker-view","slider","switch","navigator","image","contact-button","block","usePromise","Promise","__config__","platform","systemVersion","resolve","then","bind","setTimeout","ASYNC_RENDER","obaa","target","arr","callback","_observe","$observer","eventPropArr","prop","isInArray","$observeProps","$observerPath","isString","watch","propertyChangedHandler","propChanged","onPropertyChanged","all","handler","oldValue","rootName","_getRootName","mock","methods","apply","RegExp","cprop","hasOwnProperty","isFunction","toUpperCase","get","currentValue","set","triggerStr","join","add","exec","_classCallCheck","_willUpdate","_Component","ModelView","str","Omi","mergeUpdate","WeElement","rpx","defineElement","module","exports"],"mappings":";;IACO,SAASA;IC2KhB,SAAgBC,EAAEC,UAAUC;QAC1B,IACEC,YACAC,OACAC,QACAC,GAJEC,WAAWC;QAKf,KAAKF,IAAIG,UAAUC,QAAQJ,MAA3B,KACEK,MAAMC,KAAKH,UAAXH;QAEF,IAAIJ,cAAqC,QAAvBA,WAAWK,UAAkB;YAC7C,KAAKI,MAAMD,QAAQC,MAAMC,KAAKV,WAAWK;mBAClCL,WAAWK;;QAEpB,OAAOI,MAAMD,QACX,KAAKN,QAAQO,MAAME,eAAwBC,MAAdV,MAAMS,KACjC,KAAKP,IAAIF,MAAMM,QAAQJ,OAAOK,MAAMC,KAAKR,MAAXE,UACzB;YACL,IAAqB,oBAAVF,OAAqBA,QAAQ;YAExC,IAAKC,SAA6B,qBAAbJ,UACnB,IAAa,QAATG,OAAeA,QAAA,SACd,IAAqB,mBAAVA,OAAoBA,QAAQW,OAAOX,aAC9C,IAAqB,mBAAVA,OAAoBC,UAAS;YAG/C,IAAIA,UAAUF,YACZI,SAASA,SAASG,SAAlB,MAAiCN,YAC5B,IAAIG,aAAaC,gBACtBD,aAAYH,cAEZG,SAASK,KAAKR;YAGhBD,aAAaE;;QAIjB,IAAIW,IAAI,IAAIjB;QACVE,EAAAA,WAAWgB,QAAQC,QAAQjB,WAAWkB,IAAIlB;QAC1CC,EAAAA,aAA2B,QAAdA,kBAAqBY,IAAYZ;QAChD,IAAIK,YAAmC,mBAAhBA,SAAP,OAAoCU,QAAQC,OAC1D,IAAMhB,EAAAA,YACFA,EAAAA,WAAWkB,QAAQb,SAArB,SAEEL,EAAAA;YAAekB,OAAOb,SAAT;gBAGfA,EAAAA,WAAWA;QAEbc,EAAAA,MAAoB,QAAdnB,kBAAqBY,IAAYZ,WAAWmB;QAGpD,SAAsBP,MAAlBG,QAAQK,OAAqBL,QAAQK,MAARN;QAEjC,OAAAA;;IC3NK,SAASO,OAAOC,KAAKC;QAC1B,KAAK,IAAInB,KAAKmB,OAAOD,IAAIlB,KAAKmB,MAAMnB;QACpC,OAAOkB;;IAoCA,SAASE,QAAQF;QACtB,OAA+C,qBAAxCG,OAAOC,UAAUC,SAASC,KAAKN;;IAGjC,SAASO,OAAON;QACrB,KAAKA,SAASC,QAAQD,QAAQ;QAC9B,IAAMO;QACNL,OAAOM,KAAKR,OAAOS,QAAQ,SAAAb;YACzBW,OAAOX,OAAOI,MAAMJ,KAAKD;;QAE3B,OAAOY;;IC9CJ,SAASG,aAAab,OAAOG;QAClC,OAAOzB,EACLsB,MAAMrB,UACNsB,OAAOA,WAAWD,MAAMpB,aAAauB,QACrChB,UAAUC,SAAS,OAAO0B,MAAMN,KAAKrB,WAAW,KAAKa,MAAMf;;ICNxD,SAAM8B,cAAWC;yCAExBrB,QAAAsB,qBAAAC,OAAAC;;;QCHA,IAAIC;QAEGA;QACL,IAAIA;QACAzB,OAAQsB,IAAAA,KAAAA,OAAAA;YACXI,UAAA3B,EAAA4B;YACFC,gBAAA7B;;QAEM,KAAA8B,KAASL,QACd,IAAIzB,QAAJ+B,iBAAA9B,QAAA8B,gBAAA/B,GAAA2B;;;;;;;ICGA,SAAOK,YAAMC,MAAAA;QACd,OAAAC,KAAAC,QAAAlD,YAAAiD,KAAAjD,SAAAmD,kBAAAnD,SAAAmD;;;QAeD,IAAA3B,QAAAF,WAAAD,MAAApB;;;;QAYE,OAAImD;;;QASJ,IAAAH,OAAOzB,QAAPR,QAAAqC,IAAAC,gBAAA,8BAAAtD,YAAAgB,QAAAqC,IAAAE,cAAAvD;QACDiD,KAAAC,MAAAlD;;;;;wBChDMwD,OAASC,OAAWzD,MAAAA,2BAAiB0D,GAAAC,GAAAC,UACtCX,IAAAA,KAAOY,IAGXZ,IAAKC,KAAAA,IACLY,OAAAN,KAAA;QAKI,IACDE,aADCI,KAAAC,MAAA,KAAA7C,IAAA,SAAA8C;YAAA,OAAAA,EAAAD,MAAA,KAAA7C,IAAA,SAAA+C;gBACKH,OADLG,KAAAA,EAAAC;;;QAEU,KAAA,IAAKC,IAAEC,YAAQ/D,IAAUgE,MAAA5C,QAAApB,IAAAA,IAAA,GAAAA,IAAAA,IAAAA,IAAAA,EAAAiE,OAAAC,gBAAA;YAAA,IAAAC;YAAvC,IAAAnE,GAAA;gBACIoE,IAAAA,KAAAA,EAAAA,QACDV;gBACIS,QAAOT,EAAAA;mBAAe;gBAAtB1D,IAAAA,EAAAqE;gBAFP,IAAArE,EAAAsE,MAAA;gBAGAH,QAAAnE,EAAAc;;YAAA,IAAAyD,QAAAJ;YAAA,IAAAK,WAAAD,MAAA;YAAA,IAAAzD,QAAAyD,MAAA;YAAAE;gBARF,OAASC,EAAAA,QAAT,UAA+B,SAAAC;oBACzBpB,OAAAA,MAASqB,OAAQb,GAAAA;;cAOrBS,aAAA1D;;QAAA,OAAA2D;;IAAA,SAAUD,WAAV5B;QAAA,IAAAiC,aAAAjC,KAAAiC;QAA0CJ,IAAAA,YAAcD,WAAdM,YAAAlC;;IAY5C,SAAAmC,YAAAnC,MAAAoC,MAAAC,KAAAnE,OAAA0C;;;;;+CASOZ,KAASmC,YAAYnC,SAAMoC,SAC5BA,IAAS,YAATA;YAEAA,KAAAA,SAAgB,mBAAAlE,SAAA,mBAAAmE,KAClBrC,KAAA6B,MAAAG,UAAA9D,SAAA;YAEA,IAAImE,SAAK,mBAAAnE,OAAA;gBACLA,IAAO,mBAAAA,KACN,KAAIkE,IAAAA,KAASC,KACbC,MAALlF,KAAiBc,QAAS8B,KAA1B6B,MAAAzE,KAAA;gBAGE,KAAKc,IAADd,KAAUc,OACZ8B,KAAK6B,MAAMG,KAAX,mBAAqB9D,MAASd,OAA9B,MAAAmF,mBAAAC,KAAApF,KAAAc,MAAAd,KAAA,OAAAc,MAAAd;;eAGA;YACE,IAAAqF,UAAAJ,KAAmBK,cAAWxE;YAA9B,IAAA,mBAAAmE,KACDI,UAAAX,aAAAO;YAECrC,IAAA,mBAAK6B,OAINa,cAAAZ,aAAA5D;YAGH,IAAIuE,aACFC,WAAAA;YAEAD,IAAAA,SAAUX;gBACX,KAAA,IAAA3D,OAAAsE,SACG,IAA0B,mBAAnBvE,iBAAmBC,OAAAuE,cAAA;oBAC5BA,OAAAA,OAAcZ;oBACfa,WAAA;;8CAKGF,IAAAA,YAASG,UAAAH,QAAAG,OAAA;oBACX9D,OAASX,QAAOsE,YAASG;oBACvBD,WAAWD;;gBAIZ,IAAAC;mBAIG7D,KAAAA,UAAA4D;eAGH,IAAA,8BAAAN;;eAED,IAAa,OAATO,KAAAA,MAAS,OAAAP,KAAA,IAAA;YACXpC,IAAAA,aAAK6C,UAALT,OAAAA,KAAAjB,QAAA,YAAA;YACDiB,OAAAA,KAAAlC,cAAA4C,UAAA;YACF,IAlBD5E;gBAmBE8B,KAAAA,KAAK6C,KAAAA,iBAALT,MAAAW,YAAAC;mBAEHhD,KAAAiD,oBAAAb,MAAAW,YAAAC;aAEDhD,KAAAkD,QAAgBC,KAAAA,WAAYf,QAAjBlE;eACN,IAAI,WAAAkE,QAAkB,WAAAA,SAAgBxB,SAAAwB,QAAApC,MAAA;YAC3CoD,YAAIJ,MAAaZ,MAAUA,QAAVA,QAAsBjB,KAAAA;YACvCiB,IAAYlC,QAAZkC,UAA0BU,MAAd5C,OAAZF,KAAAqD,gBAAAjB;eACIlE;YACF,IAAAoF,KAAKjB,SAAUkB,UAAAA,OAAiBnB,KAAMW,QAAAA,YAAYC;YACnD,IAAM,QAFP9E,UAEO,MAAAA,OACL8B,IAAAA,IAAKiD,KAAAA,kBAA0BF,gCAA/BX,KAAAlC,qBAAAF,KAAAqD,gBAAAjB,YACD,IAAA,qBAAAlE,OACMgF,IAAAA,IAAAA,KAALM,eAAyBN,gCAA1Bd,KAAAlC,eAAAhC,aAAA8B,KAAAyD,aAAArB,MAAAlE;;;IAaA,SAPDkF,YAOWpD,MAAAoC,MAAiBlE;QAC1B;YAOD8B,KAAAoC,QAAAlE;UACF,OAAAwF;;IAMH,SAASN,WAATM;QACE,OAAIC,KAAAT,IAAAQ,EAAAE,MAAA7F,QAAA8F,SAAA9F,QAAA8F,MAAAH,MAAAA;;ICrIC,SAAII;;QAEX,OAAAC,IAAAC,OAAArG,OAAA;YACIsG,IAAAA,QAAYC,YAAhBnG,QAAAmG,WAAAH;;YAEA,IAAAA,EAAAI,WAAAJ,EAAAI;;;IAUG,SAAAC,KAAAC,KAAAjG,OAAAkG,SAAAC,UAAAC,QAAAC;;;;;QAUD,IAAAC,MAAAC,MAAAN,KAAAjG,OAAAkG,SAAAC,UAAAE;QAGER,IAAAA,UAAYO,IAAAA,eAAkBA,QAAOI,OAAAA,YAAoBhH;QAGzDiH,OAAAA,WAAYR;YACbQ,aAAA;YAED,KAAIH,eAAiBtG;;QAGrB,OAAIoG;;IAIFK,SAAAA,MAAAA,KAAYzG,OAAZkG,SAAAC,UAAAE;QACA,IAAAK,MAAAT,KACAU,cAAKN;QAGP,IAAA,QAAArG,SAAA,oBAAAA,OAAAA,QAAA;QAGF,IAAA4G,YAAA5G,MAAArB;QACA,IAAAgB,QAAAkH,QAAoB7G,YAApB;YACEA,MAAI0G,WAAJ/G,QAAAkH,QAAAD;YAAA,OACED,wBADFV,KAAAjG,OAAAkG,SAAAC;;;YAOA,IAAIS,YAAJpH,MAAIoH,IAAY5G,aAAhBiG,IAAApC,gBAAAoC,IAAAa,cAAAT;gBAEErG,IAAMrB,IAAAA,aAAWgB,OACjBsG,IAAOc,YAAAA;;gBAILL,MAAAM,SAAAC,eAA6BjH;gBAC/B,IAAAiG,KAAA;oBAEEA,IAAAA,IACAA,YAAAA,IAAApC,WADAqD,aAEIrD,KAFJoC;oBAKAkB,kBAAAlB,MAAA;;;YAIDS,IAAM,KAAA;YAELA,OAAAA;;QAICb,YAAA,UAAAe,aAAA,IAAA,oBAAAA,aAAA,IAAAf;QAGHa,YAAI3F,OAAY6F;;YAEhBF,MAAAtE,WAAAwE,WAAAf;;gBAIFA,OAAAA,IACEe;gBAOFA,IAAAA,IAAYnH,YAAOmH,IAAP/C,WAAZqD,aAAAR,KAAAT;;;;QAM2BS,IAAAA,KAAAA,IAAIU,YAA3BjH,QAFOuG,IAAA,GAKPW,YAAQxD,MAAR5E;QAEA,IAAA,QAAAkB,OAAA;YACAgH,QAAAA,IAAuB;YACxB,KAAA,IAAA9E,IAAAqE,IAAA9H,YAAAI,IAAAqD,EAAAjD,QAAAJ,OACFmB,MAAAkC,EAAArD,GAAAgF,QAAA3B,EAAArD,GAAAc;;;YAMD,IAAIK,GAAAA,aAAekH,UAAA,IACjBlH,GAAAA,YAAYY,UAAZ;eAGD,IAAAsG,aAAAA,UAAAjI,UAAA,QAAAkI;QAaGA,eAAGC,KAAYF,MAAAA,YAAflH;QAGJ0F,YAAAc;QAEEa,OAAAA;;IAgBH,SAAAA,cAAAvB,KAAAoB,WAAAnB,SAAAC,UAAAsB;YASDC,GACMC,GACF1I,GACA2I,QACAC,0CAXJ5I;QAQE,IAME6I,MAAAA,KANF,KAOEC,IAAOV,IAAAA,GAAAA,IAAAA,KAAYA,KAAAA;YACnBK,IAAAA,SARFC,iBAAA3I,IASE2G,QATFqC,OAAA,GAUEC,MAVFF,QAAA5H,QAAA6H,OAAAlB,aAAAkB,OAAAlB,WAAAoB,MAAA/H,MAAAJ,MAAA;YAWEoI,IAAAA,QAAAA,KAXF;gBAYErJ;;mBAEF,IAAAqB,eAAAX,MAAAwI,OAAAI,YAAAX,cAAAO,OAAAT,UAAA1E,UAAA,IAAA4E,cACIY,SAAWP,iBAAAE;;QAUX,IAAIjI,MAAJgI,MACEF,KAAAA,IAAAA,IAAAA,GAAAA,IAAAA,MAAAA,KAAAA;YACAD,SAAM7H,UAAOjB;YACdA,QAAM;YAUR,IAAAiB,MAAAoI,OAAApI;YACF,IAAA,QAAAA;;oBAEGgI,QAAYH,MAAA7H;oBACT6H,MAAI5I,YAAOA;oBACdmJ;;mBAIIpI,KAAAA,SAAaA,MAAjB+H,aACI/H,KAAAA,IAAOuI,KAAMZ,IAAAI,aAAAJ,KACXG,SAAkB9H,MAAlB8H,SAAYD,MAAepI,eAAWmG,IAAA1G,SAAAyI,IAAAS,QAAAV,cAAA;gBACxC3I,QAAQ8I;gBACRA,SAAAF,UAAalI;gBACbqI,IAAAA,MAAAA,cAAAA,GAAAA;gBACD,IAAAH,MAAAY,KAAAA;gBACF;;YASKrJ,QAAAA,MAAAA,OAAAkJ,QAAc3I,SAAd2G;YAEA8B,IAAAN,iBAAA3I;YACA,IAAAF,SAAAA,UAAAmH,OAAAnH,UAAAmJ,GACD,IAAA,QAAAA,GACFhC,IAAAmB,YAAAtI,aACF,IAAAA,UAAAmJ,EAAAM,iCAGDzJ,IAAQyH,aAAa4B,OAAbF;;QAOJO,IAAAA,UACD,KAFM,IAAAxJ,KAEA4I,OACL3B,SAAIwC,MAAJxC,MAAIwC,IAAoBR,kBAAxBL,MAAA5I,KAAA;mCAMR,SAAAQ,OAAAV,QAAAG,SAAA6I,iBAAAX,kBAAArI,QAAA;;IAOA,SAAOwJ,kBAAP1G,MAA2B8G;QACzB,IAAA1H,YAAa/B,KAAAA;QAEd,IAAA+B,6CAGH;;YAKE,KAAqB8F,MAAjB9F,eAAJ,QAAAY,KAAA,GACIZ,WAAWY;YAAf+G,eAGO/G;;;;QASL+G,OAAAA,KAAAA;QACD,OAAA/G,MAAA;YACF,IAAAyB,OAAAzB,KAAAgH;;YAEDhH,OAAAyB;;;IASIzB,SAAAA,eAAAqE,KAAA4C,OAAA5E;QACD,IAAAD;QAGH,KAAAA,QAAAC;4BAQE,MAAA,eAAAD,QAAA,gBAAAA,QAAAA,QAAAC,OAAA4E,MAAA7E,WAAA,YAAAA,QAAA,cAAAA,OAAAiC,IAAAjC,QAAAC,IAAAD,SACAD,YAAAkC,KAAkBjC,MAAAC,IAAAD,OAAAC,IAAAD,QAAA6E,MAAA7E,OAAA6B;;IAkBnB,SAAAiD,iBAAA9H;;;;;QChVD,UAAM+H,OAAAA,WAANC,KAAAhF;QAGO,IAAAgF,KAASF,aAAAA,KAAiB9H,UAAWiI,QAAA;YAC1CC,OAAIlF,IAAOhD,KAAAA,OAAUmI;YAEtBC,UAAA5I,KAAA0I,MAAA/I,OAAA+F;;YAEDgD,OAAA,IAAAE,UAAAjJ,OAAA+F;YACOgD,KAASG,cAAAA;YACdH,KAAI1H,SAAOuH;;QAGX,IAAIC,MACFE,KAAAA,IAAOlK,IAAIgK,KAAK7I,QAAO+F,OACvBkD,IAAAA,KAAU5I,GAAV2I,gBAA4BjD,MAA5B;YAFFgD,KAGOI,MAAA9H,KAAAxC,GAAAsK;YACLJ,KAAOK,OAAIH,GAAAA;YACXF;;QAIF,OAAI1H;;IAIEA,SAAAA,SAAK+H,OAALC,MAAAtD;QACA,OAAAX,KAAA4D,YAAAhJ,OAAA+F;;IAKP,SAAAuD,YAAAC;;YAED,IAAAC,OAAAhK,QAAAiK,WAAA5K;YAEE,IAAA2K,KAAOD,SAAKP,MACb,OAAAQ,KAAAE;;QCvCM,IAAAA,WAASJ,YAAkBK;QAChCnK,QAAKiK,WAAWvB;YAAM1I,MAAQiK;YAAAA,UAA9BC;;QACEC;QAEA,OAAIH;;;QAKNI,SAAIF,MAAWE,OAAAjI,gBAAf;QAEAgI,MAAAA,IAAAA,QAAAA,mCAAAA;QAEA,IAAAE,KAAOH,IAAAA,OAAP,mDAAA;QAUAI,MAAAA,IAAAlH,QAAAiH,IAAA,SAAAE,IAAAC,IAAAC,IAAAC;;;YAUE,IAAIC,cAAcH,GAAApH,QAAlB,UAA+B,MAAAgH,SAAAK;;;QAW9B,OAAAH;;IAGD,SAAAM,SAAA3G,SAAA4G;;QAEA,IAAAC,MAAOH,SAAAA,eAAPE;QACA,IAAAE,OAAA1D,SAAA2D,qBAAA,QAAA;QACD,IAnBDF,OAAAA,IAAA5G,eAAA6G;;QAwBKA,KAAAtD,YAAkBxD;QACvB4G,gBAAQ1I,aAAR,QAAA;QACA8I,gBAAU5D,aAAS6D,MAAeL;QAClC,IAAIE,OAAO1D,eACX4D,gBAAe/G,WAAJD,UAAyBA,cAEnCgH,gBAAAE,cAAAlH;;IAIDgH,SAAAA,kBAAgBvF;QAChBuF,IAAAA,OAAAA,SAAgBvF,qBAAhB,QAAA;QACA,IAAI0F,kBAAOC,SAAe9I,cAAA;QACxB0I,KAAAA,YAAAA;QACDA,gBAAMvF,aAAA,QAAA;QAEN,IAAA0F,OAAAC,eACFJ,gBAAAK,WAAArH,UAAAA,cAEMgH,gBAASM,cAATtH;;IAILgH,SAAAA,cAAgBvF,MAAAA,OAAa8F,MAAQnK;;YAErCoK,UAAWJ,MAAAA;YACTJ,QAAAA,OAAAA,OAAgBK;YADlB,IAAAxH,UAEOzC,UAAAqK,GACLT,SAAAA,OAAgBE;eAEnB,IAAArH,UAAAzC,UAAAqK;QAGCrK,UAAIrB,IAAQ2L;;IAGV,SAAI7H,oBAAoB4H,MAAxB5H,OAAiC0H;QAC/BZ,IAAAA,QAAAA,aAAA;YACDa,UAAAD,MAAAI;YALH,KAMO5L,QAAI8D,mBAAoB4H,OAAS;gBACtCH,SAAAA,OAAkBzH,OAAlB0H,OAAAA;gBACDxL,QAAA6L,mBAAAL,SAAA;;eAEF,KAAAxL,QAAA6L,mBAAAL,OAAA;;YAEMxL,QAAS8L,mBAAoBF,SAAM9H;;;IAIpC8G,SAAAA,UAASmB,MAAOjI;QAChB9D,IAAQ6L,mBAAR7L,MAAA;YACD4L,KAAA3M,aAAA2M,KAAA3M;YALH2M,KAMO3M,WAAKe,QAAQ6L;YAClBN,KAAAA,SAAAA,QAAkBzH,SAAlB3E;gBACAa,OAAQ6L,UAAAA,MAAAA;;;;ICgIX,SATDG;;YAWA3I,KAAM1C,GAAAA,KAAUsL,KAAhBC;;;YCpPMC,SAAAA,GAAYtL,KAAlBuL,SAAAF;;;;IASIlC,SAAKqC,YAAQrC;QACd,IAFDsC,UAAA;;YAIAC,KAAAA,IAAAA,GAGAA,IAAAA,IAAAA,YAAiB9M,aAAjB;gBACD+M,aAAAF;gBCbMA,UAASG,WAAiB;oBAC3BH,IAAAA;oBACCxB;mBACCA;mBACF;gBACDA,IAAA4B;gBACDV;;;;IAWD,SAfDW,kBAAAtL,WAAAb,OAAAoM,MAAArG,SAAAC;QAgBD,KAAAnF,UAAAwL,KAAA;;;;;;gBCSM,IAAAxL,UAASsL,eAAkBtL,UAA3ByL;gBACL,IAAIzL,UAAUwL,SAAUxL,UAAA0L;gBACxB1L,IAAAA,UAAUwL,YAAVG;mBAGK3L,IAAAA,UAAA4L,mFAEA5L,IAAAA,UAAD6L,2BACF7L,UAAIA,0BAA8BA,OAAAA;YAGlC,IAAAkF,WAAIlF,YAAAA,UAA+BkF,SAAA;gBACjCkG,KAAAA,UAAYpL,KAAZA,UAAA8L,MAAA9L,UAAAkF;gBACDlF,UAAAkF,UAAAA;;YAGF,KAFMlF,UAEIA,KAAU6L,UAAAA,MAA2B7L,UAAAb;YAC9Ca,UAAAA,QAAU6L;;YAIV,IAAK7L,MAALuL,MACAvL,IAAUkF,MAAVlF,SAAA,MAAArB,QAAoBuG,yBAApBlF,UAAAM,MACDC,gBAAAP,WAAA,GAAAmF,gBAEG4G,cAAWC;;;;IAiBf,SAAIhM,gBAAiBA,WAAUiM,MAAMjM,UAAhBkM;QACtB,KAAAlM,UAAAwL,KAAA;YAED,IAWItG,UACAiH,MACAC,OAbJjN,QAAAa,UAAAb,sLAMOkN,WAAS9L,UAAgBP,MAC1BA,WAAUwL,UAAUlD,yCAEpBnJ,wBAAJa,UAAA8F,YACE0C,QAAOxI;YADT,IAOEsI,UAAAA;gBAPFtI,UAQEsM,QAAcD;gBARhBrM,UASEuM,OAAAA;gBATFvM,UAUSkF,UAVTsH;gBAAA,IAWEC,MAAAA,QAAAA,UAXFC,0BAAA,MAAA1M,UAAA0M,sBAAAvN,OAAAqJ,MAAAtD,UAYEgD,QAAAA,QACAyE,IAAAA,UAbFC,+EAeA,IAAA5M,UAAA6M,cACIR,UAAUQ,aAAA1N,OAAAqJ,MAAAtD;gBAEZlF,UAAUwI,QAAO4D;gBACjBpM,UAAUkF,OAAVsD;gBACAxI,UACEuL,UAASuB;;YAMT9M,UAAAA,MAAU4M,UAAAA,MAA2BpE,UAArCsD,MAAA9L,UAAAsI,MAAA;YAEAtI,KAAAA,MAAAA;gBACDyM,WAAAzM,UAAAiI,OAAA9I,OAAAqJ,MAAAtD;gBAGDlF,IAAAA,UAAUkF,WACXuF,oBAAAgC,UAAAzM,UAAA+M,aAAA,YAAAtE,YAAAzI,UAAAmI;mCAIG6E,cAAOP,UAAAzM,UAAAiJ,OAAA,YAAAjJ,UAAAiN,WAAAjN;gBAIT,IAAIA,UAAU+M,iBACZtC,UAAAA,OAAAA,WAAAvF,UAEElF,UAAU+M;gBAKd,IACEC,WAMD1M,MAPGN,iBAAeyM,YAAAA,SAAA9O;gBAUnB,IAAIqC,MAAAA;;oBAIJkI,OAAIgF;oBAAJ,IAEE5M,QAAAA,KAFF6H,gBAAAO,QAAAyE,WAAApO,OAAAmJ,KAAAhB,KAGEwB,kBAAe7C,MAAQqH,YAAAA,GAHzBhI,UAAA;wBAKIwD,YAAMR;;wBAGRA,KAAIiF,MAAaC,KAAAA,OAAaX;wBAC9BvE,KAAOqE,MAAAA;;wBAEPhM,gBAAiB4H,MAAAA,GAAAA,WAAb;;oBAGFkF,OAAAA,KAAAA;;oBAEArN,QAAAA;oBAGAsL,YAAAA;oBACA/K,IAAAA,WACDoM,QAAA3M,UAAA8F,aAAA;oBAhBH,IAAAwG,eAmBO,MAAAf,MAAA;wBACLoB,IAAAA,OAAQL,MAARxG,aAAA;;;;gBAKE6G,IAAAA,eAAQ3M,SAAU8F,eAAlBoC,SAAAqE,uBAAA;oBACD,IAAAe,aAAAhB,YAAAzJ;;wBAEDyK,WAAIhB,aAAef,MAASgC;wBAE1BjN,KAAAA,WACEqM;4BAOHL,YAAAxG,aAAA;4BACFK,kBAAAmG,cAAA;;;;gBAKGgB,IAAAA;gBAIEnH,UAAAA,OAAAA;gBACD,IAAA7F,SAAA4L,SAAA;oBACF,IAAAsB,eAAAxN,WACFyN,IAAAzN;uCAEDwN,eAAIH,GAAW/M,OAAAA;oBAEdA,KAAAwF,aAAA0H;;;;YAIC,KAAAnB,YACMrM,UACN4E,OAAA8I,QAAcC,iBACVH,KAAAA,MAAkBlN;kDAOtBN,UAAA4N,mBAAuBzB,eAAAC,eAAAI;gBAA3B,IAAAxM,UAEO6N,aAEL7N,UAAA6N,YAAA1B,eAAAC,eAAAI;gBAEA,IAAAxM,UAAA8N;gBAGE9N,IAAAA,QAAU4N,aAAAA,QACRzB,YADFnM;;YAOA,IAAA,QAAAA,UAAA+N,KACA/N,OAAAA,UAAU6N,IAAY1B,QACvBnM,UAAA+N,IAAAxP,MAAAiB,KAAAQ;YAID,KAAA0E,cAAYmJ,SAAalP;;;IAQ3B,SAAK+F,wBAAuBsJ,KAAAA,OAAAA,SAAAA;QAC7B,IAAArJ,IAAAM,OAAAA,IAAAa,mCAEDmI,SAAAhJ;;QAOE,IACEiJ,KAAAA,aAAAA,YADFvJ,EAAAmB,aAAA;YAAAwF,kBAAA3G,GAAAxF,OAAA,GAAA+F,SAAAC;YAAAF,MAGEkJ,EAAAA;eACAC;YAJF,IAKEjP,sBAAqBH,eALvB;gBAMAqP,iBAAOH;gBACLE,MAAAA,SAAYjG;;YAGdxD,IAAIA,gBAAkBQ,MAAAA,UAAcW,OAAAA;YAClCwF,IAAAA,QAAAA,EAAAA,KAAqBnM;gBACrB8F,EAAAA,MAAAA;gBAEAgJ,SAAIC;;YAEFjJ,kBAAeN,GAAfxF,OAAA,GAAA+F,SAAAC;YACDF,MAAAN,EAAArE;YAEDqE,IAAI0D,UAAAA,QAAgBrJ,QAAMrB;gBAC1BsQ,OAAIhJ,aAAJ;gBACEN,kBAAAsJ,SAAA;;;QAIF3C,OAAAA;;IAOD,SAAA+C,iBAAArO;;QAGF,IAAAM,OAAAN,UAAAM;QAEDN,UAAAwL,OAAA;;;QAKExL,UAAIrB,OAAQ2P;;QAIZtO,IAAAA,qCAEIA,IAAAA,MAAUuO;YACd,IAAIvO,KAAqBA,KAAAA,KAAA,EAAAwO,KAAAlO,KAAA,EAAAkO,IAAA;YAEzBxO,UAAUM,MAAVA;YAEAkH,WAAAlH;YACAwH,iBAAY9H;YAEVqO,eAAAA;;;;IAMA7G,SAAAA,gBAAAiH,UAAAC;QAAA,MAAAD,oBAAAC,cAAA,MAAA,IAAAC,UAAA;;;QC7TiBvG,SACP,mBAAAhD,SAAAY,SAAA4I,cAAAxJ,UAAAA;QCLd,IAAAyJ,SAAAA,MAAAC;;;IAOE1J,SAAAA,OAASpC,MAAOoC;;YAEhBzG,QAAIkQ,QAASA,QAAanG;YACxBmG,IAAAA,KAAMC,SACJpG,KAAOmG,MAGVnG,KAAAqG,aAAAC,cAAAtG,KAAAF;;;aCfGyG,cAAazG;QACnB,IAAM0G;;QAEC,OAASC;;IAGZ,SAAIzG,WAAAF,MAAcE;QAChBA,OAAAA,KAAKqG,MAAAA,QAAaC,SAActG;YACjChJ,OAAAX,QAAA;YACF,IAAAyF,OAAAnF,OAAAC,UAAAC,SAAAC,KAAAgJ,KAAAzJ;YACF,IAAA,sBAAAyF,+CAEewK,IAAcxG,qBAAdwG,MACRtP,aAAN8I,KAAAzJ,MAAAA,KAAAW;;;IAKF,SAAS0P,WAAW5G,MAAM9I,MAA1BA;QACEL,OAAOM,KAAK6I,MAAM5I,QAAQ,SAAAb;YACxBW,OAAOX,OAAO,MAAdA,QAAA;mBACMyF,OAAOnF;YACb,IAAImF,OAAAA,OAASyK,UAAY1P,SAAAC,KAAAgJ,KAAAzJ;YACvBsQ,IAAW7G,sBAAX6G,MADFA,WAEW7K,KAAAA,MAAS0K,OAAW,MAAAnQ,KAAAW,cAC7B4P,IAAkBvQ,qBAAlBuQ,MACDA,aAAA9G,KAAAzJ,MAAAwQ,OAAA,MAAAxQ,KAAAW;;;IAKHL,SAAOM,aAAWC,MAAQ2P,MAAA7P;QACxBA,KAAAA,QAAO6P,SAAaxQ,MAAOyQ;YAC3B9P,OAAOA,OAAO6P,MAAdC,QAAA,QAAA;mBACMhL,OAAOnF;YACb,IAAImF,OAAAA,OAASyK,UAAY1P,SAAAC,KAAAmJ;YACvB0G,IAAW7G,sBAAX6G,MADFA,WAEW7K,MAAAA,OAAS0K,MAAWM,QAAA,KAAA9P,cAC7B4P,IAAkBvQ,qBAAlBuQ,MACDA,aAAA3G,MAAA4G,OAAA,MAAAC,QAAA,KAAA9P;;;IAKH8I,SAAK5I,IAAAA;QACHF,OAAAA,IAAO6P,QAAA,4BAAP,SAAAlO,GAAAC;YACA,OAAO5B,OAAO6P,aAAdE,OAAAnO,KAAA,MAAA;;;IAIC,SAFDoO,kBAEoBR,UAAWR;QAAA,MAAAD,oBAAAC,cAAA,MAAA,IAAAC,UAAA;;IAE9B,SAAAgB,2BAAAC,MAAApQ;QAAA,KAAAoQ,MAAA,MAAA,IAAAC,eAAA;QAAA,OAAArQ,SAAA,mBAAAA,QAAA,qBAAAA,QAAAA,OAAAoQ;;IAEJ,SAAAE,UAAAC,UAAAC;QAAA,IAAA,qBAAAA,cAAA,SAAAA,YAAA,MAAA,IAAArB,UAAA,oEAAAqB;QAAAD,SAAAzQ,YAAAD,OAAA4Q,OAAAD,cAAAA,WAAA1Q;YAAA6I;gBAAArJ,OAAAiR;gBAAAG,aAAA;gBAAAC,WAAA;gBAAAC,eAAA;;;QAAA,IAAAJ,YAAA3Q,OAAAgR,iBAAAhR,OAAAgR,eAAAN,UAAAC,cAAAD,SAAAO,YAAAN;;IC/BD,IAAArR;QACE2L,cAAa;QACbzE;QACAjH,QAAO;QACP4L;QACAxJ,KAAyB,mBAAbgF,WAAwBA,WAAW;QAC/CuK,MA/BF;YACE,IACoB,mBAAXC,WACNA,UACDA,OAAOC,SAASA,QAChBD,OAAOxO,UAAUA,OACjB;gBACA,IAAoB,sBAAT4N,MACT,OAAOA,WACF,IAAsB,sBAAX7F,QAChB,OAAOA,aACF,IAAsB,sBAAXyG,QAChB,OAAOA;gBAET,OAAQ;oBACN,OAAOjM;;;YAGX,OAAOiM;;QAeP5H;;QjB9BIvK;IAEN,IAAMH;IAEN,IAAMW;QACJ6R,IAAI;QACJC,IAAI;QAEJjS,GAAG;QACHkS,IAAI;QACJC,IAAI;QACJC,IAAI;QACJC,IAAI;QACJC,IAAI;QACJC,IAAI;QACJC,MAAM;QACNC,SAAS;QACT7P,GAAG;QACH8P,KAAK;QACLC,KAAK;QACLC,YAAY;QACZC,MAAM;QACNC,MAAM;QACNC,KAAK;QACLC,KAAK;QACLC,KAAK;QACLC,IAAI;QACJC,QAAQ;QACRC,MAAM;QACNC,KAAK;QACLC,KAAK;QACLhU,GAAG;QACHiU,MAAM;QACNC,KAAK;QACLC,GAAG;QACHC,MAAM;QACNC,IAAI;QACJC,IAAI;QACJxQ,GAAG;QACHyQ,OAAO;QACPC,KAAK;QACLC,KAAK;QACLC,MAAM;QACNC,GAAG;QACHC,KAAK;QAELC,MAAM;QACNC,OAAO;QACPC,UAAU;QACVC,QAAQ;QACRC,QAAQ;QACRC,QAAQ;QACRC,UAAU;QACVC,OAAO;QACPC,UAAU;QACVC,UAAU;QACVC,QAAQ;QACRC,QAAQ;QAERC,QAAQ;QAERC,KAAK;QACLC,QAAQ;QACRC,QAAQ;QACRC,YAAY;QAEZC,OAAO;QACPC,QAAQ;QACRC,OAAO;QACPC,OAAO;QAEP5S,GAAG;QACH6S,KAAK;QACLC,MAAM;QAENC,IAAI;QACJC,IAAI;QACJC,IAAI;QACJC,IAAI;QACJC,IAAI;QACJC,IAAI;QACJC,MAAM;QACNC,SAAS;QAETC,OAAO;QACPC,SAAS;QACTC,IAAI;QACJC,IAAI;QACJC,IAAI;QACJC,OAAO;QACPC,OAAO;QACPC,OAAO;QACPC,KAAK;QACLC,UAAU;QAEVC,KAAK;QACLC,MAAM;QAENC,MAAM;QACNC,QAAQ;QACRC,QAAQ;QACRC,SAAS;QACTC,SAAS;QACTC,OAAO;QACPC,SAAS;QACTC,QAAQ;QACRC,SAAS;QAETC,UAAU;QACVC,OAAO;QACPxM,MAAM;QACNyM,MAAM;QACN7V,MAAM;QACNzB,KAAK;QACLuX,MAAM;QAENC,QAAQ;QACRC,UAAU;QACVC,OAAO;QACPC,QAAQ;QACRC,OAAO;QAEPC,MAAM;QACNC,eAAe;QACfC,QAAQ;QACRC,MAAM;QACNC,MAAM;QAENC,UAAU;QACVC,OAAO;QACPC,QAAQ;QACRC,eAAe;QACfC,QAAQ;QACRC,QAAQ;QACRC,WAAW;QAEXC,OAAO;QACPC,kBAAkB;QAClBC,OAAO;;ICzHT,IAAIC,aAA+B,qBAAXC;IAGxB,IACsB,mBAAb1R,YACW,sBAAXwK,UACPA,OAAOmH,GAEP,IAAmC,cAA/BnH,OAAOmH,EAAWC,UACpBH,cAAa,QACR;QACL,IAAII,gBACDrH,OAAOmH,EAAWE,iBACjBrH,OAAOmH,EAAWE,cAAcnW,MAAM,KAAK,MAC7C;QACF,IAAImW,gBAAgB,GAClBJ,cAAa;;IAKZ,IAAMvX,QAAQuX,aACjBC,QAAQI,UAAUC,KAAKC,KAAKN,QAAQI,aACpCG;;IEtCG,IAAMC;;;IGsJZ,IAAArT,aAAA;IClJM,IAAMD,aAAN;IA0UD7B,IAAAA;IC/SH,IAAA+F,UAAA;ICuFA,IAAAqP,OAAA,SAAAA,KAAAC,QAAAC,KAAAC;QACF,IAAAC,WAAA,SAAAH,QAAAC,KAAAC;;YC5HD,IAAAE,YAAAJ,OAAAI;;;;;;;gBAOMD,UAAAA,KAAWH;;YAEb,KAAII,IAAAA,QAAYJ,QAChB,IAAIK,OAAAA,eAAJC,OACIP,IAAAA;gBACEC,IAAAA,KAAOha,QAAPia,QAAqBF,KAAAQ,UAAAN,KAAAK,OAAA;oBACvBN,aAAOQ,KAAPF;oBACAN,UAAOQ,MAAPR,QAAqBS;uBACtB,IAAAV,KAAAW,SAAAT,QAAAK,QAAAL,KAAA;oBACDG,aAAeJ,KAAfM;oBACDF,UAAAO,MAAAX,QAAAM;;mBAEKN;gBACFK,aAAcna,KAAAoa;gBACZF,UAASpZ,MAALgZ,QAAAM;;YAIFD,UAAAA,SAAAA;YACAD,KAAAA,UAAAA,wBAAAA,UAAAQ;YACD,IAAAC,cAAAX,WAAAA,WAAAD;YACFG,UARDQ,uBAQO1a;gBACLma,MAAAA;gBACAD,aAAAA;gBACDC,cAAAA;;;QAGLD,SAAAA;YACAU,mBAAeF,SAAwBR,MAAUQ,OAAAA,UAAAA,QAAVzJ;gBACvC,IAAI0J,UAAAA,YAAcX,KAAWA,wBAA7B;oBACAE,IAAAA,WAAUQ,KAAAA,EAAVN,MAAsCnJ;oBACpC4J,KAAMb,IAAAA,IAD8B,GAAAjR,MAAA9C,KAAAyU,uBAAA5a,QAAAJ,IAAAqJ,KAAArJ,KAAA;wBAEpCib,IAAAA,UAAaA,KAAAA,uBAFuBjb;wBAGpCya,IAAAA,QAAcA,OAAAA,KAAAA,UAAAA,QAAAA,cAAAA,aAAAA,MAAAA,SAAAA,QAAAA,WAHhBW,QAAAH,YAAAzZ,KAAA+E,KAAA6T,QAAAM,MAAA5Z,OAAAua,UAAA9J;;;gBAQE,IAA+ByJ,MAA3Bla,KAAAA,QAAUua,aAAd,mBAA+BL,OAC7BzU,KAAI+U,MAAAA,QAAWnB,MAAKoB,OAALX,cAAfC;;YAOEW,MAAA,SACUL;gBAIRC,IAAAA,OAAAA;gBACDjB,KAAAsB,QAAA7Z,QAAA,SAAA+I;oBACFyP,OAAAzP,QAAA;wBACF,IAAA1F,MAAAjB,MAAA1C,UAAAQ,MAAAN,KAAA+E,MAAA;wBACGmU,IAAAA,SAAa1W,MAAA1C,UAAbqJ,MAAgC+Q,MAAO5a,MAAPkD,MAAiB1C,UAAUQ,MAAAN,KAAArB;wBAC7D,IAAK4a,IAALY,OAAA,QAAyBvB,OAAOQ,OAAAA,KAAAA,KAAcC,aAA9C;4BACD,KAAA,IAAAe,SAAArV,MArBgB,IAAAA,KAAAsV,eAAAD,WAAAzB,KAAA2B,WAAAvV,KAAAqV,SAuBbhK,KAAAmJ,MAASX,MAAQwB,OAAArV,KAAAqU,cAAAC;4BAIjBjJ,KAAI3M,kBAAM,WAAA0F,MAAApE,MAAVtB,KAAAsB,MAAAA,KAAAqU,cAAAC;;wBAKA,OAAInZ;;oBAEA0Y,OAAA,SAASyB,KAAAA,UAAeD,GAAAA,GAApBG,gBAAoCD,KAAWpW,UAAhB,MAA8B;wBAC/DkM,OAAAA,MAAKmJ,UAAYa,MAAjBF,MAA6Bd,MAAAA,MAAAA,UAAcC,MAA3CrZ,KAAArB;;;;YAIJyR,OAAAA,SAAKsJ,QAALR,MACEnJ;gBAMH,IAAA,oBAAAmJ,QAAA,gBAAAA,MACD,KAAAP,KAAA2B,WAAA1B,OAAAM,QAAA;oBACD,KAtBDN,OAAAQ,eAAAR,OAAAQ;oBAuBAR,SACE5Z,MADF4Z,MAGEA,OAAAQ,cAAatZ,gBACXiQ,WA5BN6I,OAAAQ,cAAAC,gBAAA;oBAmCA,IAAIH,eAASN,OAAAQ,cAAmBF,QAASN,OAAaM;oBAWpDsB,IAAgB,mBAAXC,cAAW;wBACd,IAAA9B,KAAO/Y,QAAKwZ,eAAL;4BAFyBrU,KAAAiV,KAAAS;4BAIlCC,IAAqB,MAAhBD,aAASnb,QAAO;gCACnB,KAAImE,aAAW2V,eAAfqB,aAAArB;gCACA,SAAKA,MAAAA,MACLhJ,aAAKsJ,cAEHpa,gBAGAsZ,WAZN6B,aAAArB,cAAAC,gBAAA;;;wBAmBI,KAAA,IAAIoB,SAAAA,cACF,IAAAA,aAAKA,eAAarB,QAClBrU,KAAIgL,MAAAA,cAAoBqK,OAAAxB,OAAAQ,cAAAC,gBAAA,MAAAH;;;;;QAM3B,OAAA,IAAAH,SAAAH,QAAAC,KAAAC;;IAGGH,KAAAsB,YAAA,UACEQ,cACAL,WACOhB,SAAAA,QAAcC,UAArB,QAAA,aAHF,WAAA,YAAA,WAAA,QAAA,QAAA,eAAA,OAAA,OAAA,QAAA,UAAA,eAAA,WAAA,SAAA,SAAA,QAAA,QAAA,UAAA,kBAAA,YAAA,WAAA,UAAA;IAKDV,KAAAgC,eAAA,UAAA,cAAA,QAAA,OAAA,QAAA,WAAA,SAAA,QAAA,UAAA,WAAA,SAAAC,KAAA;IAEJjC,KAAA/Y,UAAA,SAAAF;QACF,OAAA,qBAAAG,OAAAC,UAAAC,SAAAC,KAAAN;;IAGJiZ,KApJDW,WAAA,SAAA5Z;;;;QAoMAiZ,KAAK/Y,IAAAA,IAAUiZ,IAAAja,UAAAJ,KAAc,KAC3B,IAAA2K,SAAcrJ,IAAAA,IAAP,QAAiBC;;;IAKzB4Y,KAFD2B,aAAA,SAAA5a;;;IAMIiZ,KAAAoB,IAAalB,SAAQK,MAAAnJ;QACtB,IAAA,QAAAA,MACD,OAAOmJ;;IAKRP,KAFDkC,MAAA,SAAAnb,KAAAwZ;;QAIAP,UAAKoB,MAALra,KAAoBwZ;;IAGjBP,KAAA+B,MAAA,SAAAhb,KAAAwZ,MAAA5Z,OAAAwb;QACD,KAAAA,MAJFpb,IAAAwZ,QAAA5Z;QAOAqZ,IAAKkC,YAAMnb,IAASA;QAClBsZ,UAAIA,MAAYtZ,KAAIsZ;QACpBA,IAAAA,MAFFtZ,IAAAwZ,QAAA5Z;;IAOII,MAAAA,UAAYJ,OAAZ,SAAAV;QACDmG,KAAAnG,SAAAA;;IAGD,IAAA0M;IACE5L,IAAAA;;IGwFD,IAAAkJ,YAAA;;YAEDmS,gBAActO,MAAOjM;;;;;YChUrBuE,KAAAsK,QAAAA;;QACEzG,UAAKjJ,UAAQE,SACXI,SAAY0I;YAId5D,KAAK0I,KAAYzD;YACjB,IAAA8O,WAAY/T,KAAK4D,MAAoB5D,KAAKiE,WAA1ClK,KAAAga;;YAEA,IAAA3Z,QAAA8B,iBAAA9B,QAAA8B,gBAAA8D,MAAAA,KAAAjE;;;;QAMA,OAAKka;;IAILpS,UAAIzJ,KAAAA;oBI7BD,SAAkB8b;QAGtB,SAFDC;YAGDhL,kBAAAnL,MAAAmW;;;QAHC5K,UAAO6K,WAAYF;;;;;;;;;;ICOjB9b,QAAA4R,KAAAqK;QACDld,GAAAA;;;QAPoC0K,WAAAA;;QAAlBsS,UACZ/O;QADY+O,SAGZG;;QCKT1L,QAAM2L;QACNC,KAAMC;;QAENrc,eAAAqc;;IAGEnb,QAAAA,KAAAA,IAAAA,UAAAA;IAEAoI,IAAAA;QACA9H,GAAAA;QACAxB,eAAAA;QACAmc,cAAAA;QACA3L,WAAAA;QACA4L,QAViB9S;QAWlByS,UAAAA;QACAM,SAAAA;QAZDF,WAAAA;;QAeAnc,KAAAA;;QAEAqc,eAAeA;;IAGbnb,IAAAA,sBAAAA,QAHaob,OAAAC,UAAAN,UAAAhL,KAAAgL,MAAAA","file":"omi.js","sourcesContent":["/** Virtual DOM Node */\nexport function VNode() {}\n","import { VNode } from './vnode'\nimport options from './options'\n\nconst stack = []\n\nconst EMPTY_CHILDREN = []\n\nconst map = {\n  br: 'view',\n  hr: 'view',\n\n  p: 'view',\n  h1: 'view',\n  h2: 'view',\n  h3: 'view',\n  h4: 'view',\n  h5: 'view',\n  h6: 'view',\n  abbr: 'view',\n  address: 'view',\n  b: 'view',\n  bdi: 'view',\n  bdo: 'view',\n  blockquote: 'view',\n  cite: 'view',\n  code: 'view',\n  del: 'view',\n  ins: 'view',\n  dfn: 'view',\n  em: 'view',\n  strong: 'view',\n  samp: 'view',\n  kbd: 'view',\n  var: 'view',\n  i: 'view',\n  mark: 'view',\n  pre: 'view',\n  q: 'view',\n  ruby: 'view',\n  rp: 'view',\n  rt: 'view',\n  s: 'view',\n  small: 'view',\n  sub: 'view',\n  sup: 'view',\n  time: 'view',\n  u: 'view',\n  wbr: 'view',\n\n  form: 'form',\n  input: 'input',\n  textarea: 'textarea',\n  button: 'button',\n  select: 'picker',\n  option: 'view',\n  optgroup: 'view',\n  label: 'label',\n  fieldset: 'view',\n  datalist: 'picker',\n  legend: 'view',\n  output: 'view',\n\n  iframe: 'view',\n\n  img: 'image',\n  canvas: 'canvas',\n  figure: 'view',\n  figcaption: 'view',\n\n  audio: 'audio',\n  source: 'audio',\n  video: 'video',\n  track: 'video',\n\n  a: 'navigator',\n  nav: 'view',\n  link: 'navigator',\n\n  ul: 'view',\n  ol: 'view',\n  li: 'view',\n  dl: 'view',\n  dt: 'view',\n  dd: 'view',\n  menu: 'view',\n  command: 'view',\n\n  table: 'view',\n  caption: 'view',\n  th: 'view',\n  td: 'view',\n  tr: 'view',\n  thead: 'view',\n  tbody: 'view',\n  tfoot: 'view',\n  col: 'view',\n  colgroup: 'view',\n\n  div: 'view',\n  main: 'view',\n  //'span': 'label',\n  span: 'text',\n  header: 'view',\n  footer: 'view',\n  section: 'view',\n  article: 'view',\n  aside: 'view',\n  details: 'view',\n  dialog: 'view',\n  summary: 'view',\n\n  progress: 'progress',\n  meter: 'progress',\n  head: 'view',\n  meta: 'view',\n  base: 'text',\n  map: 'map',\n  area: 'navigator',\n\n  script: 'view',\n  noscript: 'view',\n  embed: 'view',\n  object: 'view',\n  param: 'view',\n\n  view: 'view',\n  'scroll-view': 'scroll-view',\n  swiper: 'swiper',\n  icon: 'icon',\n  text: 'text',\n\n  checkbox: 'checkbox',\n  radio: 'radio',\n  picker: 'picker',\n  'picker-view': 'picker-view',\n  slider: 'slider',\n  switch: 'switch',\n  navigator: 'navigator',\n\n  image: 'image',\n  'contact-button': 'contact-button',\n  block: 'block'\n}\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a lightweight representation\n * of the structure of a DOM tree. This structure can be realized by recursively comparing it against\n * the current _actual_ DOM structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string} nodeName\tAn element name. Ex: `div`, `a`, `span`, etc.\n * @param {Object} attributes\tAny attributes/props to set on the created element.\n * @param rest\t\t\tAdditional arguments are taken to be children to append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n  let children = EMPTY_CHILDREN,\n    lastSimple,\n    child,\n    simple,\n    i\n  for (i = arguments.length; i-- > 2; ) {\n    stack.push(arguments[i])\n  }\n  if (attributes && attributes.children != null) {\n    if (!stack.length) stack.push(attributes.children)\n    delete attributes.children\n  }\n  while (stack.length) {\n    if ((child = stack.pop()) && child.pop !== undefined) {\n      for (i = child.length; i--; ) stack.push(child[i])\n    } else {\n      if (typeof child === 'boolean') child = null\n\n      if ((simple = typeof nodeName !== 'function')) {\n        if (child == null) child = ''\n        else if (typeof child === 'number') child = String(child)\n        else if (typeof child !== 'string') simple = false\n      }\n\n      if (simple && lastSimple) {\n        children[children.length - 1] += child\n      } else if (children === EMPTY_CHILDREN) {\n        children = [child]\n      } else {\n        children.push(child)\n      }\n\n      lastSimple = simple\n    }\n  }\n\n  let p = new VNode()\n  p.nodeName = options.isWeb ? nodeName : map[nodeName]\n  p.attributes = attributes == null ? undefined : attributes\n  if (children && typeof children[0] === 'string' && !options.isWeb) {\n    if (p.attributes) {\n      p.attributes.value = children[0]\n    } else {\n      p.attributes = { value: children[0] }\n    }\n  } else {\n    p.children = children\n  }\n  p.key = attributes == null ? undefined : attributes.key\n\n  // if a \"vnode hook\" is defined, pass every created VNode to it\n  if (options.vnode !== undefined) options.vnode(p)\n\n  return p\n}\n","/**\n *  Copy all properties from `props` onto `obj`.\n *  @param {Object} obj\t\tObject onto which properties should be copied.\n *  @param {Object} props\tObject from which to copy properties.\n *  @returns obj\n *  @private\n */\nexport function extend(obj, props) {\n  for (let i in props) obj[i] = props[i]\n  return obj\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n *\n * @param {Function} callback\n */\n\nlet usePromise = typeof Promise == 'function'\n\n// for native\nif (\n  typeof document !== 'object' &&\n  typeof global !== 'undefined' &&\n  global.__config__\n) {\n  if (global.__config__.platform === 'android') {\n    usePromise = true\n  } else {\n    let systemVersion =\n      (global.__config__.systemVersion &&\n        global.__config__.systemVersion.split('.')[0]) ||\n      0\n    if (systemVersion > 8) {\n      usePromise = true\n    }\n  }\n}\n\nexport const defer = usePromise\n  ? Promise.resolve().then.bind(Promise.resolve())\n  : setTimeout\n\n  export function isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]'\n  }\n  \n  export function nProps(props) {\n    if (!props || isArray(props)) return {}\n    const result = {}\n    Object.keys(props).forEach(key => {\n      result[key] = props[key].value\n    })\n    return result\n  }","import { extend } from './util'\nimport { h } from './h'\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {VNode} vnode\t\tThe virtual DOM element to clone\n * @param {Object} props\tAttributes/props to add when cloning\n * @param {VNode} rest\t\tAny additional arguments will be used as replacement children.\n */\nexport function cloneElement(vnode, props) {\n  return h(\n    vnode.nodeName,\n    extend(extend({}, vnode.attributes), props),\n    arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children\n  )\n}\n","// render modes\n\nexport const NO_RENDER = 0\nexport const SYNC_RENDER = 1\nexport const FORCE_RENDER = 2\nexport const ASYNC_RENDER = 3\n\nexport const ATTR_KEY = '__preactattr_'\n\n// DOM properties that should NOT have \"px\" added when numeric\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i\n","import options from './options'\nimport { defer } from './util'\nimport { renderComponent } from './vdom/component'\n\n/** Managed queue of dirty components to be re-rendered */\n\nlet items = []\n\nexport function enqueueRender(component) {\n  if (items.push(component) == 1) {\n    ;(options.debounceRendering || defer)(rerender)\n  }\n}\n\nexport function rerender() {\n  let p,\n    list = items\n  items = []\n  let element\n  while ((p = list.pop())) {\n    element = p.base\n    renderComponent(p)\n  }\n  if (!list.length) {\n    if (options.componentChange) options.componentChange(p, element)\n  }\n}\n","import { extend } from '../util'\nimport options from '../options'\n/**\n * Check if two nodes are equivalent.\n *\n * @param {Node} node\t\t\tDOM Node to compare\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\n * @param {boolean} [hydrating=false]\tIf true, ignores component constructors when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    return node.splitText !== undefined\n  }\n  const ctor = options.mapping[vnode.nodeName]\n  if (ctor) {\n    return hydrating || node._componentConstructor === ctor\n  }\n  return !node._componentConstructor && isNamedNode(node, vnode.nodeName)\n}\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n *\n * @param {Element} node\tA DOM Element to inspect the name of.\n * @param {String} nodeName\tUnnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n  return (\n    node.normalizedNodeName === nodeName ||\n    node.nodeName.toLowerCase() === nodeName.toLowerCase()\n  )\n}\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n *\n * @param {VNode} vnode\n * @returns {Object} props\n */\nexport function getNodeProps(vnode) {\n  let props = extend({}, vnode.attributes)\n  props.children = vnode.children\n\n  let defaultProps = vnode.nodeName.defaultProps\n  if (defaultProps !== undefined) {\n    for (let i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i]\n      }\n    }\n  }\n\n  return props\n}\n","import { IS_NON_DIMENSIONAL } from '../constants'\nimport options from '../options'\n\n/** Create an element with the given nodeName.\n *\t@param {String} nodeName\n *\t@param {Boolean} [isSvg=false]\tIf `true`, creates an element within the SVG namespace.\n *\t@returns {Element} node\n */\nexport function createNode(nodeName, isSvg) {\n  let node = isSvg\n    ? options.doc.createElementNS('http://www.w3.org/2000/svg', nodeName)\n    : options.doc.createElement(nodeName)\n  node.normalizedNodeName = nodeName\n  return node\n}\n\nfunction parseCSSText(cssText) {\n  let cssTxt = cssText.replace(/\\/\\*(.|\\s)*?\\*\\//g, ' ').replace(/\\s+/g, ' ')\n  let style = {},\n    [a, b, rule] = cssTxt.match(/ ?(.*?) ?{([^}]*)}/) || [a, b, cssTxt]\n  let cssToJs = s => s.replace(/\\W+\\w/g, match => match.slice(-1).toUpperCase())\n  let properties = rule\n    .split(';')\n    .map(o => o.split(':').map(x => x && x.trim()))\n  for (let [property, value] of properties) style[cssToJs(property)] = value\n  return style\n}\n\n/** Remove a child node from its parent if attached.\n *\t@param {Element} node\t\tThe node to remove\n */\nexport function removeNode(node) {\n  let parentNode = node.parentNode\n  if (parentNode) parentNode.removeChild(node)\n}\n\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n *\tIf `value` is `null`, the attribute/handler will be removed.\n *\t@param {Element} node\tAn element to mutate\n *\t@param {string} name\tThe name/key to set, such as an event or attribute name\n *\t@param {any} old\tThe last value that was set for this name/node pair\n *\t@param {any} value\tAn attribute value, such as a function to be used as an event handler\n *\t@param {Boolean} isSvg\tAre we currently diffing inside an svg?\n *\t@private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n  if (name === 'className') name = 'class'\n\n  if (name === 'key') {\n    // ignore\n  } else if (name === 'ref') {\n    if (old) old(null)\n    if (value) value(node)\n  } else if (name === 'class' && !isSvg) {\n    node.className = value || ''\n  } else if (name === 'style') {\n    if (options.isWeb) {\n      if (!value || typeof value === 'string' || typeof old === 'string') {\n        node.style.cssText = value || ''\n      }\n      if (value && typeof value === 'object') {\n        if (typeof old !== 'string') {\n          for (let i in old) if (!(i in value)) node.style[i] = ''\n        }\n        for (let i in value) {\n          node.style[i] =\n            typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false\n              ? value[i] + 'px'\n              : value[i]\n        }\n      }\n    } else {\n      let oldJson = old,\n        currentJson = value\n      if (typeof old === 'string') {\n        oldJson = parseCSSText(old)\n      }\n      if (typeof value == 'string') {\n        currentJson = parseCSSText(value)\n      }\n\n      let result = {},\n        changed = false\n\n      if (oldJson) {\n        for (let key in oldJson) {\n          if (typeof currentJson == 'object' && !(key in currentJson)) {\n            result[key] = ''\n            changed = true\n          }\n        }\n\n        for (let ckey in currentJson) {\n          if (currentJson[ckey] !== oldJson[ckey]) {\n            result[ckey] = currentJson[ckey]\n            changed = true\n          }\n        }\n\n        if (changed) {\n          node.setStyles(result)\n        }\n      } else {\n        node.setStyles(currentJson)\n      }\n    }\n  } else if (name === 'dangerouslySetInnerHTML') {\n    if (value) node.innerHTML = value.__html || ''\n  } else if (name[0] == 'o' && name[1] == 'n') {\n    let useCapture = name !== (name = name.replace(/Capture$/, ''))\n    name = name.toLowerCase().substring(2)\n    if (value) {\n      if (!old) node.addEventListener(name, eventProxy, useCapture)\n    } else {\n      node.removeEventListener(name, eventProxy, useCapture)\n    }\n    ;(node._listeners || (node._listeners = {}))[name] = value\n  } else if (name !== 'list' && name !== 'type' && !isSvg && name in node) {\n    setProperty(node, name, value == null ? '' : value)\n    if (value == null || value === false) node.removeAttribute(name)\n  } else {\n    let ns = isSvg && name !== (name = name.replace(/^xlink:?/, ''))\n    if (value == null || value === false) {\n      if (ns)\n        node.removeAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          name.toLowerCase()\n        )\n      else node.removeAttribute(name)\n    } else if (typeof value !== 'function') {\n      if (ns)\n        node.setAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          name.toLowerCase(),\n          value\n        )\n      else node.setAttribute(name, value)\n    }\n  }\n}\n\n/** Attempt to set a DOM property to the given value.\n *\tIE & FF throw for certain property-value combinations.\n */\nfunction setProperty(node, name, value) {\n  try {\n    node[name] = value\n  } catch (e) {}\n}\n\n/** Proxy an event to hooked event handlers\n *\t@private\n */\nfunction eventProxy(e) {\n  return this._listeners[e.type]((options.event && options.event(e)) || e)\n}\n","import { ATTR_KEY } from '../constants'\nimport { isSameNodeType, isNamedNode } from './index'\nimport { buildComponentFromVNode } from './component'\nimport { createNode, setAccessor } from '../dom/index'\nimport { unmountComponent } from './component'\nimport options from '../options'\nimport { removeNode } from '../dom/index'\n\n/** Queue of components that have been mounted and are awaiting componentDidMount */\nexport const mounts = []\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n  let c\n  while ((c = mounts.pop())) {\n    if (options.afterMount) options.afterMount(c)\n    if (c.componentDidMount) c.componentDidMount()\n    if (c.installed) c.installed()\n  }\n}\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n  // diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n  if (!diffLevel++) {\n    // when first starting the diff, check if we're diffing an SVG or within an SVG\n    isSvgMode = parent != null && parent.ownerSVGElement !== undefined\n\n    // hydration is indicated by the existing element to be diffed not having a prop cache\n    hydrating = dom != null && !(ATTR_KEY in dom)\n  }\n\n  let ret = idiff(dom, vnode, context, mountAll, componentRoot)\n\n  // append the element if its a new parent\n  if (parent && ret.parentNode !== parent) parent.appendChild(ret)\n\n  // diffLevel being reduced to 0 means we're exiting the diff\n  if (!--diffLevel) {\n    hydrating = false\n    // invoke queued componentDidMount lifecycle methods\n    if (!componentRoot) flushMounts()\n  }\n\n  return ret\n}\n\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n  let out = dom,\n    prevSvgMode = isSvgMode\n\n  // empty values (null, undefined, booleans) render as empty Text nodes\n  if (vnode == null || typeof vnode === 'boolean') vnode = ''\n\n  // If the VNode represents a Component, perform a component diff:\n  let vnodeName = vnode.nodeName\n  if (options.mapping[vnodeName]) {\n    vnode.nodeName = options.mapping[vnodeName]\n    return buildComponentFromVNode(dom, vnode, context, mountAll)\n  }\n\n  // Fast case: Strings & Numbers create/update Text nodes.\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    // update if it's already a Text node:\n    if (\n      dom &&\n      dom.splitText !== undefined &&\n      dom.parentNode &&\n      (!dom._component || componentRoot)\n    ) {\n      /* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n      if (dom.nodeValue != vnode) {\n        dom.nodeValue = vnode\n      }\n    } else {\n      // it wasn't a Text node: replace it with one and recycle the old Element\n      out = document.createTextNode(vnode)\n      if (dom) {\n        if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n        recollectNodeTree(dom, true)\n      }\n    }\n\n    out[ATTR_KEY] = true\n\n    return out\n  }\n\n  // Tracks entering and exiting SVG namespace when descending through the tree.\n  isSvgMode =\n    vnodeName === 'svg'\n      ? true\n      : vnodeName === 'foreignObject'\n      ? false\n      : isSvgMode\n\n  // If there's no existing element or it's the wrong type, create a new one:\n  vnodeName = String(vnodeName)\n  if (!dom || !isNamedNode(dom, vnodeName)) {\n    out = createNode(vnodeName, isSvgMode)\n\n    if (dom) {\n      // move children into the replacement node\n      while (dom.firstChild) out.appendChild(dom.firstChild)\n\n      // if the previous Element was mounted into the DOM, replace it inline\n      if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n\n      // recycle the old element (skips non-Element node types)\n      recollectNodeTree(dom, true)\n    }\n  }\n\n  let fc = out.firstChild,\n    props = out[ATTR_KEY],\n    vchildren = vnode.children\n\n  if (props == null) {\n    props = out[ATTR_KEY] = {}\n    for (let a = out.attributes, i = a.length; i--; )\n      props[a[i].name] = a[i].value\n  }\n\n  // Optimization: fast-path for elements containing a single TextNode:\n  if (\n    !hydrating &&\n    vchildren &&\n    vchildren.length === 1 &&\n    typeof vchildren[0] === 'string' &&\n    fc != null &&\n    fc.splitText !== undefined &&\n    fc.nextSibling == null\n  ) {\n    if (fc.nodeValue != vchildren[0]) {\n      fc.nodeValue = vchildren[0]\n    }\n  }\n  // otherwise, if there are existing or new children, diff them:\n  else if ((vchildren && vchildren.length) || fc != null) {\n    innerDiffNode(\n      out,\n      vchildren,\n      context,\n      mountAll,\n      hydrating || props.dangerouslySetInnerHTML != null\n    )\n  }\n\n  // Apply attributes/props from VNode to the DOM Element:\n  diffAttributes(out, vnode.attributes, props)\n\n  // restore previous SVG mode: (in case we're exiting an SVG namespace)\n  isSvgMode = prevSvgMode\n\n  return out\n}\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\n *\t@param {Object} context\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\n *\t@param {Boolean} mountAll\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n  let originalChildren = dom.childNodes,\n    children = [],\n    keyed = {},\n    keyedLen = 0,\n    min = 0,\n    len = originalChildren.length,\n    childrenLen = 0,\n    vlen = vchildren ? vchildren.length : 0,\n    j,\n    c,\n    f,\n    vchild,\n    child\n\n  // Build up a map of keyed children and an Array of unkeyed children:\n  if (len !== 0) {\n    for (let i = 0; i < len; i++) {\n      let child = originalChildren[i],\n        props = child[ATTR_KEY],\n        key =\n          vlen && props\n            ? child._component\n              ? child._component.__key\n              : props.key\n            : null\n      if (key != null) {\n        keyedLen++\n        keyed[key] = child\n      } else if (\n        props ||\n        (child.splitText !== undefined\n          ? isHydrating\n            ? child.nodeValue.trim()\n            : true\n          : isHydrating)\n      ) {\n        children[childrenLen++] = child\n      }\n    }\n  }\n\n  if (vlen !== 0) {\n    for (let i = 0; i < vlen; i++) {\n      vchild = vchildren[i]\n      child = null\n\n      // attempt to find a node based on key matching\n      let key = vchild.key\n      if (key != null) {\n        if (keyedLen && keyed[key] !== undefined) {\n          child = keyed[key]\n          keyed[key] = undefined\n          keyedLen--\n        }\n      }\n      // attempt to pluck a node of the same type from the existing children\n      else if (!child && min < childrenLen) {\n        for (j = min; j < childrenLen; j++) {\n          if (\n            children[j] !== undefined &&\n            isSameNodeType((c = children[j]), vchild, isHydrating)\n          ) {\n            child = c\n            children[j] = undefined\n            if (j === childrenLen - 1) childrenLen--\n            if (j === min) min++\n            break\n          }\n        }\n      }\n\n      // morph the matched/found/created DOM child to match vchild (deep)\n      child = idiff(child, vchild, context, mountAll)\n\n      f = originalChildren[i]\n      if (child && child !== dom && child !== f) {\n        if (f == null) {\n          dom.appendChild(child)\n        } else if (child === f.nextSibling) {\n          removeNode(f)\n        } else {\n          dom.insertBefore(child, f)\n        }\n      }\n    }\n  }\n\n  // remove unused keyed children:\n  if (keyedLen) {\n    for (let i in keyed)\n      if (keyed[i] !== undefined) recollectNodeTree(keyed[i], false)\n  }\n\n  // remove orphaned unkeyed children:\n  while (min <= childrenLen) {\n    if ((child = children[childrenLen--]) !== undefined)\n      recollectNodeTree(child, false)\n  }\n}\n\n/** Recursively recycle (or just unmount) a node and its descendants.\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n  let component = node._component\n  if (component) {\n    // if node is owned by a Component, unmount that component (ends up recursing back here)\n    unmountComponent(component)\n  } else {\n    // If the node's VNode had a ref function, invoke it with null here.\n    // (this is part of the React spec, and smart for unsetting references)\n    if (node[ATTR_KEY] != null && node[ATTR_KEY].ref) node[ATTR_KEY].ref(null)\n\n    if (unmountOnly === false || node[ATTR_KEY] == null) {\n      removeNode(node)\n    }\n\n    removeChildren(node)\n  }\n}\n\n/** Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n  node = node.lastChild\n  while (node) {\n    let next = node.previousSibling\n    recollectNodeTree(node, true)\n    node = next\n  }\n}\n\n/** Apply differences in attributes from a VNode to the given DOM Element.\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n  let name\n\n  // remove attributes no longer present on the vnode by setting them to undefined\n  for (name in old) {\n    if (!(attrs && attrs[name] != null) && old[name] != null) {\n      setAccessor(dom, name, old[name], (old[name] = undefined), isSvgMode)\n    }\n  }\n\n  // add new & update changed attributes\n  for (name in attrs) {\n    if (\n      name !== 'children' &&\n      name !== 'innerHTML' &&\n      (!(name in old) ||\n        attrs[name] !==\n          (name === 'value' || name === 'checked' ? dom[name] : old[name]))\n    ) {\n      setAccessor(dom, name, old[name], (old[name] = attrs[name]), isSvgMode)\n    }\n  }\n}\n","import Component from '../component'\nimport options from '../options'\n/** Retains a pool of Components for re-use, keyed on component name.\n *\tNote: since component names are not unique or even necessarily available, these are primarily a form of sharding.\n *\t@private\n */\nconst components = {}\n\n/** Reclaim a component for later re-use by the recycler. */\nexport function collectComponent(component) {\n  let name = component.constructor.name\n  ;(components[name] || (components[name] = [])).push(component)\n}\n\n/** Create a component. Normalizes differences between PFC's and classful Components. */\nexport function createComponent(Ctor, props, context) {\n  let list = components[Ctor.name],\n    inst\n\n  if (Ctor.prototype && Ctor.prototype.render) {\n    inst = new Ctor(props, context)\n    Component.call(inst, props, context)\n  } else {\n    inst = new Component(props, context)\n    inst.constructor = Ctor\n    inst.render = doRender\n  }\n\n  if (list) {\n    for (let i = list.length; i--; ) {\n      if (list[i].constructor === Ctor) {\n        inst.nextBase = list[i].nextBase\n        list.splice(i, 1)\n        break\n      }\n    }\n  }\n  return inst\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, data, context) {\n  return this.constructor(props, context)\n}\n","import options from './options'\n\nlet styleId = 0\n\nexport function getCtorName(ctor) {\n  for (let i = 0, len = options.styleCache.length; i < len; i++) {\n    let item = options.styleCache[i]\n\n    if (item.ctor === ctor) {\n      return item.attrName\n    }\n  }\n\n  let attrName = 'static_' + styleId\n  options.styleCache.push({ ctor, attrName })\n  styleId++\n\n  return attrName\n}\n\n// many thanks to https://github.com/thomaspark/scoper/\nexport function scoper(css, prefix) {\n  prefix = '[' + prefix.toLowerCase() + ']'\n  // https://www.w3.org/TR/css-syntax-3/#lexical\n  css = css.replace(/\\/\\*[^*]*\\*+([^/][^*]*\\*+)*\\//g, '')\n  // eslint-disable-next-line\n    let re = new RegExp('([^\\r\\n,{}:]+)(:[^\\r\\n,{}]+)?(,(?=[^{}]*{)|\\s*{)', 'g')\n  /**\n   * Example:\n   *\n   * .classname::pesudo { color:red }\n   *\n   * g1 is normal selector `.classname`\n   * g2 is pesudo class or pesudo element\n   * g3 is the suffix\n   */\n  css = css.replace(re, (g0, g1, g2, g3) => {\n    if (typeof g2 === 'undefined') {\n      g2 = ''\n    }\n\n    /* eslint-ignore-next-line */\n    if (\n      g1.match(\n        /^\\s*(@media|\\d+%?|@-webkit-keyframes|@keyframes|to|from|@font-face)/\n      )\n    ) {\n      return g1 + g2 + g3\n    }\n\n    let appendClass = g1.replace(/(\\s*)$/, '') + prefix + g2\n    //let prependClass = prefix + ' ' + g1.trim() + g2;\n\n    return appendClass + g3\n    //return appendClass + ',' + prependClass + g3;\n  })\n\n  return css\n}\n\nexport function addStyle(cssText, id) {\n  id = id.toLowerCase()\n  let ele = document.getElementById(id)\n  let head = document.getElementsByTagName('head')[0]\n  if (ele && ele.parentNode === head) {\n    head.removeChild(ele)\n  }\n\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n  someThingStyles.setAttribute('id', id)\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addStyleWithoutId(cssText) {\n  let head = document.getElementsByTagName('head')[0]\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addScopedAttr(vdom, style, attr, component) {\n  if (options.scopedStyle) {\n    scopeVdom(attr, vdom)\n    style = scoper(style, attr)\n    if (style !== component._preCss) {\n      addStyle(style, attr)\n    }\n  } else if (style !== component._preCss) {\n    addStyleWithoutId(style)\n  }\n  component._preCss = style\n}\n\nexport function addScopedAttrStatic(vdom, style, attr) {\n  if (options.scopedStyle) {\n    scopeVdom(attr, vdom)\n    if (!options.staticStyleMapping[attr]) {\n      addStyle(scoper(style, attr), attr)\n      options.staticStyleMapping[attr] = true\n    }\n  } else if (!options.staticStyleMapping[attr]) {\n    addStyleWithoutId(style)\n    options.staticStyleMapping[attr] = true\n  }\n}\n\nexport function scopeVdom(attr, vdom) {\n  if (typeof vdom === 'object') {\n    vdom.attributes = vdom.attributes || {}\n    vdom.attributes[attr] = ''\n    vdom.children.forEach(child => scopeVdom(attr, child))\n  }\n}\n","/* obaa 1.0.0\n * By dntzhang\n * Github: https://github.com/Tencent/omi\n * MIT Licensed.\n */\n\nvar obaa = function(target, arr, callback) {\n  var _observe = function(target, arr, callback) {\n    if (!target.$observer) target.$observer = this\n    var $observer = target.$observer\n    var eventPropArr = []\n    if (obaa.isArray(target)) {\n      if (target.length === 0) {\n        target.$observeProps = {}\n        target.$observeProps.$observerPath = '#'\n      }\n      $observer.mock(target)\n    }\n    for (var prop in target) {\n      if (target.hasOwnProperty(prop)) {\n        if (callback) {\n          if (obaa.isArray(arr) && obaa.isInArray(arr, prop)) {\n            eventPropArr.push(prop)\n            $observer.watch(target, prop)\n          } else if (obaa.isString(arr) && prop == arr) {\n            eventPropArr.push(prop)\n            $observer.watch(target, prop)\n          }\n        } else {\n          eventPropArr.push(prop)\n          $observer.watch(target, prop)\n        }\n      }\n    }\n    $observer.target = target\n    if (!$observer.propertyChangedHandler) $observer.propertyChangedHandler = []\n    var propChanged = callback ? callback : arr\n    $observer.propertyChangedHandler.push({\n      all: !callback,\n      propChanged: propChanged,\n      eventPropArr: eventPropArr\n    })\n  }\n  _observe.prototype = {\n    onPropertyChanged: function(prop, value, oldValue, target, path) {\n      if (value !== oldValue && this.propertyChangedHandler) {\n        var rootName = obaa._getRootName(prop, path)\n        for (\n          var i = 0, len = this.propertyChangedHandler.length;\n          i < len;\n          i++\n        ) {\n          var handler = this.propertyChangedHandler[i]\n          if (\n            handler.all ||\n            obaa.isInArray(handler.eventPropArr, rootName) ||\n            rootName.indexOf('Array-') === 0\n          ) {\n            handler.propChanged.call(this.target, prop, value, oldValue, path)\n          }\n        }\n      }\n      if (prop.indexOf('Array-') !== 0 && typeof value === 'object') {\n        this.watch(target, prop, target.$observeProps.$observerPath)\n      }\n    },\n    mock: function(target) {\n      var self = this\n      obaa.methods.forEach(function(item) {\n        target[item] = function() {\n          var old = Array.prototype.slice.call(this, 0)\n          var result = Array.prototype[item].apply(\n            this,\n            Array.prototype.slice.call(arguments)\n          )\n          if (new RegExp('\\\\b' + item + '\\\\b').test(obaa.triggerStr)) {\n            for (var cprop in this) {\n              if (this.hasOwnProperty(cprop) && !obaa.isFunction(this[cprop])) {\n                self.watch(this, cprop, this.$observeProps.$observerPath)\n              }\n            }\n            //todo\n            self.onPropertyChanged(\n              'Array-' + item,\n              this,\n              old,\n              this,\n              this.$observeProps.$observerPath\n            )\n          }\n          return result\n        }\n        target[\n          'pure' + item.substring(0, 1).toUpperCase() + item.substring(1)\n        ] = function() {\n          return Array.prototype[item].apply(\n            this,\n            Array.prototype.slice.call(arguments)\n          )\n        }\n      })\n    },\n    watch: function(target, prop, path) {\n      if (prop === '$observeProps' || prop === '$observer') return\n      if (obaa.isFunction(target[prop])) return\n      if (!target.$observeProps) target.$observeProps = {}\n      if (path !== undefined) {\n        target.$observeProps.$observerPath = path\n      } else {\n        target.$observeProps.$observerPath = '#'\n      }\n      var self = this\n      var currentValue = (target.$observeProps[prop] = target[prop])\n      Object.defineProperty(target, prop, {\n        get: function() {\n          return this.$observeProps[prop]\n        },\n        set: function(value) {\n          var old = this.$observeProps[prop]\n          this.$observeProps[prop] = value\n          self.onPropertyChanged(\n            prop,\n            value,\n            old,\n            this,\n            target.$observeProps.$observerPath\n          )\n        }\n      })\n      if (typeof currentValue == 'object') {\n        if (obaa.isArray(currentValue)) {\n          this.mock(currentValue)\n          if (currentValue.length === 0) {\n            if (!currentValue.$observeProps) currentValue.$observeProps = {}\n            if (path !== undefined) {\n              currentValue.$observeProps.$observerPath = path\n            } else {\n              currentValue.$observeProps.$observerPath = '#'\n            }\n          }\n        }\n        for (var cprop in currentValue) {\n          if (currentValue.hasOwnProperty(cprop)) {\n            this.watch(\n              currentValue,\n              cprop,\n              target.$observeProps.$observerPath + '-' + prop\n            )\n          }\n        }\n      }\n    }\n  }\n  return new _observe(target, arr, callback)\n}\n\nobaa.methods = [\n  'concat',\n  'copyWithin',\n  'entries',\n  'every',\n  'fill',\n  'filter',\n  'find',\n  'findIndex',\n  'forEach',\n  'includes',\n  'indexOf',\n  'join',\n  'keys',\n  'lastIndexOf',\n  'map',\n  'pop',\n  'push',\n  'reduce',\n  'reduceRight',\n  'reverse',\n  'shift',\n  'slice',\n  'some',\n  'sort',\n  'splice',\n  'toLocaleString',\n  'toString',\n  'unshift',\n  'values',\n  'size'\n]\nobaa.triggerStr = [\n  'concat',\n  'copyWithin',\n  'fill',\n  'pop',\n  'push',\n  'reverse',\n  'shift',\n  'sort',\n  'splice',\n  'unshift',\n  'size'\n].join(',')\n\nobaa.isArray = function(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nobaa.isString = function(obj) {\n  return typeof obj === 'string'\n}\n\nobaa.isInArray = function(arr, item) {\n  for (var i = arr.length; --i > -1; ) {\n    if (item === arr[i]) return true\n  }\n  return false\n}\n\nobaa.isFunction = function(obj) {\n  return Object.prototype.toString.call(obj) == '[object Function]'\n}\n\nobaa._getRootName = function(prop, path) {\n  if (path === '#') {\n    return prop\n  }\n  return path.split('-')[1]\n}\n\nobaa.add = function(obj, prop) {\n  var $observer = obj.$observer\n  $observer.watch(obj, prop)\n}\n\nobaa.set = function(obj, prop, value, exec) {\n  if (!exec) {\n    obj[prop] = value\n  }\n  var $observer = obj.$observer\n  $observer.watch(obj, prop)\n  if (exec) {\n    obj[prop] = value\n  }\n}\n\nArray.prototype.size = function(length) {\n  this.length = length\n}\n\nexport default obaa\n","const callbacks = []\nconst nextTickCallback = []\n\nexport function tick(fn, scope) {\n  callbacks.push({ fn, scope })\n}\n\nexport function fireTick() {\n  callbacks.forEach(item => {\n    item.fn.call(item.scope)\n  })\n\n  nextTickCallback.forEach(nextItem => {\n    nextItem.fn.call(nextItem.scope)\n  })\n  nextTickCallback.length = 0\n}\n\nexport function nextTick(fn, scope) {\n  nextTickCallback.push({ fn, scope })\n}\n","import obaa from './obaa'\nimport { fireTick } from './tick'\n\nexport function proxyUpdate(ele) {\n  let timeout = null\n  obaa(ele.data, () => {\n    if (ele._willUpdate) {\n      return\n    }\n    if (ele.constructor.mergeUpdate) {\n      clearTimeout(timeout)\n\n      timeout = setTimeout(() => {\n        ele.update()\n        fireTick()\n      }, 0)\n    } else {\n      ele.update()\n      fireTick()\n    }\n  })\n}\n","import {\n  SYNC_RENDER,\n  NO_RENDER,\n  FORCE_RENDER,\n  ASYNC_RENDER,\n  ATTR_KEY\n} from '../constants'\nimport options from '../options'\nimport { extend } from '../util'\nimport { enqueueRender } from '../render-queue'\nimport { getNodeProps } from './index'\nimport {\n  diff,\n  mounts,\n  diffLevel,\n  flushMounts,\n  recollectNodeTree,\n  removeChildren\n} from './diff'\nimport { createComponent, collectComponent } from './component-recycler'\nimport { removeNode } from '../dom/index'\nimport { addScopedAttr, addScopedAttrStatic, getCtorName } from '../style'\nimport { proxyUpdate } from '../observe'\n\n/** Set a component's `props` (generally derived from JSX attributes).\n *\t@param {Object} props\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n *\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n */\nexport function setComponentProps(component, props, opts, context, mountAll) {\n  if (component._disable) return\n  component._disable = true\n\n  if ((component.__ref = props.ref)) delete props.ref\n  if ((component.__key = props.key)) delete props.key\n\n  if (!component.base || mountAll) {\n    if (component.componentWillMount) component.componentWillMount()\n    if (component.beforeInstall) component.beforeInstall()\n    if (component.install) component.install()\n    if (component.constructor.observe) {\n      proxyUpdate(component)\n    }\n  } else if (component.receiveProps) {\n    component.receiveProps(props, component.data, component.props)\n  } else if (component.componentWillReceiveProps) {\n    component.componentWillReceiveProps(props, context)\n  }\n\n  if (context && context !== component.context) {\n    if (!component.prevContext) component.prevContext = component.context\n    component.context = context\n  }\n\n  if (!component.prevProps) component.prevProps = component.props\n  component.props = props\n\n  component._disable = false\n\n  if (opts !== NO_RENDER) {\n    if (\n      opts === SYNC_RENDER ||\n      options.syncComponentUpdates !== false ||\n      !component.base\n    ) {\n      renderComponent(component, SYNC_RENDER, mountAll)\n    } else {\n      enqueueRender(component)\n    }\n  }\n\n  if (component.__ref) component.__ref(component)\n}\n\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n *\t@param {Component} component\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n *\t@private\n */\nexport function renderComponent(component, opts, mountAll, isChild) {\n  if (component._disable) return\n\n  let props = component.props,\n    data = component.data,\n    context = component.context,\n    previousProps = component.prevProps || props,\n    previousState = component.prevState || data,\n    previousContext = component.prevContext || context,\n    isUpdate = component.base,\n    nextBase = component.nextBase,\n    initialBase = isUpdate || nextBase,\n    initialChildComponent = component._component,\n    skip = false,\n    rendered,\n    inst,\n    cbase\n\n  // if updating\n  if (isUpdate) {\n    component.props = previousProps\n    component.data = previousState\n    component.context = previousContext\n    if (\n      opts !== FORCE_RENDER &&\n      component.shouldComponentUpdate &&\n      component.shouldComponentUpdate(props, data, context) === false\n    ) {\n      skip = true\n    } else if (component.componentWillUpdate) {\n      component.componentWillUpdate(props, data, context)\n    } else if (component.beforeUpdate) {\n      component.beforeUpdate(props, data, context)\n    }\n    component.props = props\n    component.data = data\n    component.context = context\n  }\n\n  component.prevProps = component.prevState = component.prevContext = component.nextBase = null\n\n  if (!skip) {\n    rendered = component.render(props, data, context)\n\n    //don't rerender\n    if (component.staticCss) {\n      addScopedAttrStatic(\n        rendered,\n        component.staticCss(),\n        '_style_' + getCtorName(component.constructor)\n      )\n    }\n\n    if (component.css) {\n      addScopedAttr(\n        rendered,\n        component.css(),\n        '_style_' + component.elementId,\n        component\n      )\n    }\n\n    // context to pass to the child, can be updated via (grand-)parent component\n    if (component.getChildContext) {\n      context = extend(extend({}, context), component.getChildContext())\n    }\n\n    let childComponent = rendered && rendered.nodeName,\n      toUnmount,\n      base,\n      ctor = options.mapping[childComponent]\n\n    if (ctor) {\n      // set up high order component link\n\n      let childProps = getNodeProps(rendered)\n      inst = initialChildComponent\n\n      if (inst && inst.constructor === ctor && childProps.key == inst.__key) {\n        setComponentProps(inst, childProps, SYNC_RENDER, context, false)\n      } else {\n        toUnmount = inst\n\n        component._component = inst = createComponent(ctor, childProps, context)\n        inst.nextBase = inst.nextBase || nextBase\n        inst._parentComponent = component\n        setComponentProps(inst, childProps, NO_RENDER, context, false)\n        renderComponent(inst, SYNC_RENDER, mountAll, true)\n      }\n\n      base = inst.base\n    } else {\n      cbase = initialBase\n\n      // destroy high order component link\n      toUnmount = initialChildComponent\n      if (toUnmount) {\n        cbase = component._component = null\n      }\n\n      if (initialBase || opts === SYNC_RENDER) {\n        if (cbase) cbase._component = null\n        base = diff(\n          cbase,\n          rendered,\n          context,\n          mountAll || !isUpdate,\n          initialBase && initialBase.parentNode,\n          true\n        )\n      }\n    }\n\n    if (initialBase && base !== initialBase && inst !== initialChildComponent) {\n      let baseParent = initialBase.parentNode\n      if (baseParent && base !== baseParent) {\n        baseParent.replaceChild(base, initialBase)\n\n        if (!toUnmount) {\n          initialBase._component = null\n          recollectNodeTree(initialBase, false)\n        }\n      }\n    }\n\n    if (toUnmount) {\n      unmountComponent(toUnmount)\n    }\n\n    component.base = base\n    if (base && !isChild) {\n      let componentRef = component,\n        t = component\n      while ((t = t._parentComponent)) {\n        ;(componentRef = t).base = base\n      }\n      base._component = componentRef\n      base._componentConstructor = componentRef.constructor\n    }\n  }\n\n  if (!isUpdate || mountAll) {\n    mounts.unshift(component)\n  } else if (!skip) {\n    // Ensure that pending componentDidMount() hooks of child components\n    // are called before the componentDidUpdate() hook in the parent.\n    // Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n    // flushMounts();\n\n    if (component.componentDidUpdate) {\n      component.componentDidUpdate(\n        previousProps,\n        previousState,\n        previousContext\n      )\n    }\n    if (component.afterUpdate) {\n      //deprecated\n      component.afterUpdate(previousProps, previousState, previousContext)\n    }\n    if (component.updated) {\n      component.updated(previousProps, previousState, previousContext)\n    }\n    if (options.afterUpdate) options.afterUpdate(component)\n  }\n\n  if (component._renderCallbacks != null) {\n    while (component._renderCallbacks.length)\n      component._renderCallbacks.pop().call(component)\n  }\n\n  if (!diffLevel && !isChild) flushMounts()\n}\n\n/** Apply the Component referenced by a VNode to the DOM.\n *\t@param {Element} dom\tThe DOM node to mutate\n *\t@param {VNode} vnode\tA Component-referencing VNode\n *\t@returns {Element} dom\tThe created/mutated element\n *\t@private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n  let c = dom && dom._component,\n    originalComponent = c,\n    oldDom = dom,\n    isDirectOwner = c && dom._componentConstructor === vnode.nodeName,\n    isOwner = isDirectOwner,\n    props = getNodeProps(vnode)\n  while (c && !isOwner && (c = c._parentComponent)) {\n    isOwner = c.constructor === vnode.nodeName\n  }\n\n  if (c && isOwner && (!mountAll || c._component)) {\n    setComponentProps(c, props, ASYNC_RENDER, context, mountAll)\n    dom = c.base\n  } else {\n    if (originalComponent && !isDirectOwner) {\n      unmountComponent(originalComponent)\n      dom = oldDom = null\n    }\n\n    c = createComponent(vnode.nodeName, props, context)\n    if (dom && !c.nextBase) {\n      c.nextBase = dom\n      // passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n      oldDom = null\n    }\n    setComponentProps(c, props, SYNC_RENDER, context, mountAll)\n    dom = c.base\n\n    if (oldDom && dom !== oldDom) {\n      oldDom._component = null\n      recollectNodeTree(oldDom, false)\n    }\n  }\n\n  return dom\n}\n\n/** Remove a component from the DOM and recycle it.\n *\t@param {Component} component\tThe Component instance to unmount\n *\t@private\n */\nexport function unmountComponent(component) {\n  if (options.beforeUnmount) options.beforeUnmount(component)\n\n  let base = component.base\n\n  component._disable = true\n\n  if (component.componentWillUnmount) component.componentWillUnmount()\n  if (component.uninstall) component.uninstall()\n\n  component.base = null\n\n  // recursively tear down & recollect high-order component children:\n  let inner = component._component\n  if (inner) {\n    unmountComponent(inner)\n  } else if (base) {\n    if (base[ATTR_KEY] && base[ATTR_KEY].ref) base[ATTR_KEY].ref(null)\n\n    component.nextBase = base\n\n    removeNode(base)\n    collectComponent(component)\n\n    removeChildren(base)\n  }\n\n  if (component.__ref) component.__ref(null)\n}\n","import { FORCE_RENDER } from './constants'\nimport { renderComponent } from './vdom/component'\nimport options from './options'\nimport { nProps } from './util'\n\nlet id = 0\n\nexport default class Component {\n  static is = 'WeElement'\n\n  constructor(props, store) {\n    this.props = Object.assign(\n      nProps(this.constructor.props),\n      this.constructor.defaultProps,\n      props\n    )\n    this.elementId = id++\n    this.data = this.constructor.data || this.data || {}\n\n    this._preCss = null\n\n    this.store = store\n  }\n\n  update(callback) {\n    this._willUpdate = true\n    if (callback)\n      (this._renderCallbacks = this._renderCallbacks || []).push(callback)\n    renderComponent(this, FORCE_RENDER)\n    if (options.componentChange) options.componentChange(this, this.base)\n    this._willUpdate = false\n  }\n\n  render() { }\n}\n\n","import { diff } from './vdom/diff'\nimport options from './options'\n\n/** Render JSX into a `parent` Element.\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n *\t@param {Element} parent\t\tDOM element to render into\n *\t@param {object} [store]\n *\t@public\n */\nexport function render(vnode, parent, store) {\n  parent = typeof parent === 'string' ? document.querySelector(parent) : parent\n\n  if (store && store.merge) {\n    store.merge =\n      typeof store.merge === 'string'\n        ? document.querySelector(store.merge)\n        : store.merge\n  }\n\n  return diff(store && store.merge, vnode, store, false, parent, false)\n}\n","import options from './options'\n\nconst OBJECTTYPE = '[object Object]'\nconst ARRAYTYPE = '[object Array]'\n\nexport function define(name, ctor) {\n  if (ctor.is === 'WeElement') {\n    options.mapping[name] = ctor\n    if (ctor.data && !ctor.pure) {\n      ctor.updatePath = getUpdatePath(ctor.data)\n    }\n  }\n}\n\nexport function getUpdatePath(data) {\n  const result = {}\n  dataToPath(data, result)\n  return result\n}\n\nfunction dataToPath(data, result) {\n  Object.keys(data).forEach(key => {\n    result[key] = true\n    const type = Object.prototype.toString.call(data[key])\n    if (type === OBJECTTYPE) {\n      _objToPath(data[key], key, result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(data[key], key, result)\n    }\n  })\n}\n\nfunction _objToPath(data, path, result) {\n  Object.keys(data).forEach(key => {\n    result[path + '.' + key] = true\n    delete result[path]\n    const type = Object.prototype.toString.call(data[key])\n    if (type === OBJECTTYPE) {\n      _objToPath(data[key], path + '.' + key, result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(data[key], path + '.' + key, result)\n    }\n  })\n}\n\nfunction _arrayToPath(data, path, result) {\n  data.forEach((item, index) => {\n    result[path + '[' + index + ']'] = true\n    delete result[path]\n    const type = Object.prototype.toString.call(item)\n    if (type === OBJECTTYPE) {\n      _objToPath(item, path + '[' + index + ']', result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(item, path + '[' + index + ']', result)\n    }\n  })\n}\n","function getGlobal() {\n  if (\n    typeof global !== 'object' ||\n    !global ||\n    global.Math !== Math ||\n    global.Array !== Array\n  ) {\n    if (typeof self !== 'undefined') {\n      return self\n    } else if (typeof window !== 'undefined') {\n      return window\n    } else if (typeof global !== 'undefined') {\n      return global\n    }\n    return (function() {\n      return this\n    })()\n  }\n  return global\n}\n\n/** Global options\n *\t@public\n *\t@namespace options {Object}\n */\nexport default {\n  scopedStyle: true,\n  mapping: {},\n  isWeb: true,\n  staticStyleMapping: {},\n  doc: typeof document === 'object' ? document : null,\n  root: getGlobal(),\n  //styleCache :[{ctor:ctor,ctorName:ctorName,style:style}]\n  styleCache: []\n  //componentChange(component, element) { },\n  /** If `true`, `prop` changes trigger synchronous component updates.\n   *\t@name syncComponentUpdates\n   *\t@type Boolean\n   *\t@default true\n   */\n  //syncComponentUpdates: true,\n\n  /** Processes all created VNodes.\n   *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n   */\n  //vnode(vnode) { }\n\n  /** Hook invoked after a component is mounted. */\n  //afterMount(component) { },\n\n  /** Hook invoked after the DOM is updated with a component's latest render. */\n  //afterUpdate(component) { }\n\n  /** Hook invoked immediately before a component is unmounted. */\n  // beforeUnmount(component) { }\n}\n","export function rpx(str) {\n  return str.replace(/([1-9]\\d*|0)(\\.\\d*)*rpx/g, (a, b) => {\n    return (window.innerWidth * Number(b)) / 750 + 'px'\n  })\n}\n","import Component from './component'\n\nexport default class ModelView extends Component {\n  static observe = true\n\n  static mergeUpdate = true\n  \n  beforeInstall() {\n    this.data = this.vm.data\n  }\n}\n","import { h, h as createElement } from './h'\nimport { cloneElement } from './clone-element'\nimport Component from './component'\nimport { render } from './render'\nimport { rerender } from './render-queue'\nimport options from './options'\nimport { define } from './define'\nimport { rpx } from './rpx'\nimport ModelView from './model-view'\n\nconst WeElement = Component\nconst defineElement = define\n\noptions.root.Omi = {\n  h,\n  createElement,\n  cloneElement,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n\tModelView,\n\tdefineElement\n}\n\noptions.root.Omi.version = 'omio-0.1.1'\n\nexport default {\n  h,\n  createElement,\n  cloneElement,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n\tModelView,\n\tdefineElement\n}\n\nexport {\n  h,\n  createElement,\n  cloneElement,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n\tModelView,\n\tdefineElement\n}\n"]}