{"version":3,"sources":["../src/vnode.js","../src/h.js","../src/util.js","../src/clone-element.js","../src/constants.js","../src/render-queue.js","../src/vdom/index.js","../src/dom/index.js","../src/style.js","../src/vdom/diff.js","../src/vdom/component-recycler.js","../src/obaa.js","../src/tick.js","../src/observe.js","../src/vdom/component.js","../src/component.js","../src/render.js","../src/define.js","../src/rpx.js","../src/class.js","../src/get-host.js","../src/options.js","../src/model-view.js","../src/omi.js"],"names":["VNode","h","nodeName","attributes","lastSimple","child","simple","i","children","EMPTY_CHILDREN","arguments","length","stack","push","pop","undefined","String","p","key","options","vnode","toObject","val","TypeError","Object","assign","target","source","from","to","symbols","s","hasOwnProperty","call","getOwnPropertySymbols","propIsEnumerable","extend","obj","props","applyRef","ref","value","current","isArray","prototype","toString","nProps","result","keys","forEach","cloneElement","slice","ATTR_KEY","component","debounceRendering","defer","rerender","items","enqueueRender","renderComponent","isNamedNode","_componentConstructor","node","normalizedNodeName","toLowerCase","defaultProps","doc","createElementNS","createElement","_ref","createNode","a","b","cssTxt","isSvg","rule","split","map","o","x","trim","replace","Array","Symbol","iterator","_ref3","properties","next","done","_ref2","property","style","parseCSSText","match","cssText","parentNode","removeChild","setAccessor","name","old","className","IS_NON_DIMENSIONAL","test","oldJson","currentJson","changed","ckey","setStyles","substring","addEventListener","eventProxy","useCapture","touchStart","touchEnd","_listeners","setProperty","removeEventListener","removeAttribute","ns","removeAttributeNS","setAttributeNS","setAttribute","e","this","type","event","___touchY","touches","pageY","Math","abs","changedTouches","pageX","___touchX","document","body","scrollTop","___scrollTop","styleCache","len","item","ctor","attrName","getCtorName","styleId","prefix","re","css","g0","g1","g2","g3","appendClass","addStyle","id","ele","head","getElementsByTagName","appendChild","someThingStyles","getElementById","textContent","window","ActiveXObject","styleSheet","addStyleWithoutId","attr","scopeVdom","_preCss","scopedStyle","vdom","addScopedAttrStatic","staticStyleMapping","scoper","diffLevel","c","mounts","isSvgMode","afterMount","hydrating","constructor","diff","dom","context","mountAll","parent","componentRoot","ret","out","prevSvgMode","vnodeName","mapping","_component","buildComponentFromVNode","createTextNode","replaceChild","recollectNodeTree","vchildren","fc","nodeValue","innerDiffNode","isHydrating","j","originalChildren","keyed","keyedLen","childrenLen","vlen","_child","f","__key","vchild","splitText","min","nextSibling","idiff","removeNode","insertBefore","unmountOnly","removeChildren","previousSibling","attrs","collectComponent","components","Ctor","render","inst","Component","createComponent","list","nextBase","splice","data","fireTick","size","scope","callbacks","nextItem","fn","timeout","nextTickCallback","clearTimeout","proxyUpdate","update","setComponentProps","opts","_disable","install","observe","receiveProps","beforeInstall","prevProps","base","shallowComparison","isChild","previousProps","previousState","isUpdate","initialBase","initialChildComponent","previousContext","rendered","cbase","beforeUpdate","store","skip","prevState","prevContext","beforeRender","dynamicCss","elementId","scopeHost","scopedCssAttr","getChildContext","childComponent","childProps","getNodeProps","toUnmount","baseParent","SYNC_RENDER","componentRef","t","unshift","_parentComponent","updated","afterUpdate","_renderCallbacks","flushMounts","oldDom","originalComponent","isDirectOwner","isOwner","unmountComponent","inner","uninstall","instance","Constructor","querySelector","empty","merge","firstChild","define","rpx","str","superClass","subClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","hasOwn","argType","classes","arg","_Array$prototype$slic","args","class","extractClass","classNames","apply","createRef","isWeb","root","global","self","propertyIsEnumerable","Element","runListeners","oEvent","iLstId","iElId","oEvtListeners","oListeners","aEls","aEvts","sEventType","fListener","nElIdx","aElListeners","proto","propertiesObject","F","Error","usePromise","Promise","__config__","platform","systemVersion","resolve","then","bind","setTimeout","ASYNC_RENDER","obaa","_observe","arr","callback","$observer","eventPropArr","prop","isInArray","$observeProps","$observerPath","isString","watch","propertyChangedHandler","propChanged","onPropertyChanged","path","all","handler","oldValue","rootName","_getRootName","mock","methods","RegExp","cprop","isFunction","toUpperCase","get","currentValue","set","triggerStr","join","add","exec","componentChange","_willUpdate","every","is","ModelView","_Component","_inherits","WeElement","defineElement","Omi","version","getHost","module","exports","Omi$1"],"mappings":";;IACO,SAASA;ICkCT,SAASC,EAAEC,UAAUC;QAC1B,IACEC,YACAC,OACAC,QACAC,GAJEC,WAAWC;QAKf,KAAKF,IAAIG,UAAUC,QAAQJ,MAAM,KAC/BK,MAAMC,KAAKH,UAAUH;QAEvB,IAAIJ,cAAqC,QAAvBA,WAAWK,UAAkB;YAC7C,KAAKI,MAAMD,QAAQC,MAAMC,KAAKV,WAAWK;mBAClCL,WAAWK;;QAEpB,OAAOI,MAAMD,QACX,KAAKN,QAAQO,MAAME,eAAwBC,MAAdV,MAAMS,KACjC,KAAKP,IAAIF,MAAMM,QAAQJ,OAAOK,MAAMC,KAAKR,MAAME,UAC1C;YACL,IAAqB,oBAAVF,OAAqBA,QAAQ;YAExC,IAAKC,SAA6B,qBAAbJ,UACnB,IAAa,QAATG,OAAeA,QAAQ,SACtB,IAAqB,mBAAVA,OAAoBA,QAAQW,OAAOX,aAC9C,IAAqB,mBAAVA,OAAoBC,UAAS;YAG/C,IAAIA,UAAUF,YACZI,SAASA,SAASG,SAAS,MAAMN,YAC5B,IAAIG,aAAaC,gBACtBD,aAAYH,cAEZG,SAASK,KAAKR;YAGhBD,aAAaE;;QAIjB,IAAIW,IAAI,IAAIjB;QACZiB,EAAEf,WAAWA;QACbe,EAAET,WAAWA;QACdS,EAAEd,aAA2B,QAAdA,kBAAqBY,IAAYZ;QAC/Cc,EAAEC,MAAoB,QAAdf,kBAAqBY,IAAYZ,WAAWe;QAGpD,SAAsBH,MAAlBI,QAAQC,OAAqBD,QAAQC,MAAMH;QAE/C,OAAOA;;IC3ET,SAASI,SAASC;QAChB,IAAY,SAARA,YAAwBP,MAARO,KAClB,MAAM,IAAIC,UAAU;QAGtB,OAAOC,OAAOF;;IAGT,SAASG,OAAOC,QAAQC;QAC7B,IAAIC;QACJ,IAAIC,KAAKR,SAASK;QAClB,IAAII;QAEJ,KAAK,IAAIC,IAAI,GAAGA,IAAIrB,UAAUC,QAAQoB,KAAK;YACzCH,OAAOJ,OAAOd,UAAUqB;YAExB,KAAK,IAAIb,OAAOU,MACd,IAAII,eAAeC,KAAKL,MAAMV,MAC5BW,GAAGX,OAAOU,KAAKV;YAInB,IAAIgB,uBAAuB;gBACzBJ,UAAUI,sBAAsBN;gBAChC,KAAK,IAAIrB,IAAI,GAAGA,IAAIuB,QAAQnB,QAAQJ,KAClC,IAAI4B,iBAAiBF,KAAKL,MAAME,QAAQvB,KACtCsB,GAAGC,QAAQvB,MAAMqB,KAAKE,QAAQvB;;;QAMtC,OAAOsB;;IAwFF,SAASO,OAAOC,KAAKC;QAC1B,KAAK,IAAI/B,KAAK+B,OAAOD,IAAI9B,KAAK+B,MAAM/B;QACpC,OAAO8B;;IAOF,SAASE,SAASC,KAAKC;QAC5B,IAAID,KACF,IAAkB,qBAAPA,KAAmBA,IAAIC,aAC7BD,IAAIE,UAAUD;;IAqChB,SAASE,QAAQN;QACtB,OAA+C,qBAAxCb,OAAOoB,UAAUC,SAASZ,KAAKI;;IAGjC,SAASS,OAAOR;QACrB,KAAKA,SAASK,QAAQL,QAAQ;QAC9B,IAAMS;QACNvB,OAAOwB,KAAKV,OAAOW,QAAQ,SAAA/B;YACzB6B,OAAO7B,OAAOoB,MAAMpB,KAAKuB;;QAE3B,OAAOM;;IChLF,SAASG,aAAa9B,OAAOkB;QAClC,OAAOrC,EACLmB,MAAMlB,UACNkC,OAAOA,WAAWhB,MAAMjB,aAAamC,QACrC5B,UAAUC,SAAS,OAAOwC,MAAMlB,KAAKvB,WAAW,KAAKU,MAAMZ;;ICNxD,SAAM4C,cAAWC;yCAExBlC,QAAAmC,qBAAAC,OAAAC;;ICHA,SAAIC;;QAEG,OAASC,IAAAA,MAAAA,OACdC,gBAAeN;;;;;;;ICSf,SAAOO,YAAMC,MAAAA;QACd,OAAAC,KAAAC,QAAA7D,YAAA4D,KAAA5D,SAAA8D,kBAAA9D,SAAA8D;;;QAeD,IAAA1B,QAAAF,WAAAhB,MAAAjB;;;;QAYE,OAAI8D;;;QASJ,IAAAH,OAAOxB,QAAPnB,QAAA+C,IAAAC,gBAAA,8BAAAjE,YAAAiB,QAAA+C,IAAAE,cAAAlE;QACD4D,KAAAC,MAAA7D;;;;;wBC/CMmE,OAASC,OAAWpE,MAAAA,2BAAiBqE,GAAAC,GAAAC,UACtCX,IAAAA,KAAOY,IAGXZ,IAAKC,KAAAA,IACLY,OAAAN,KAAA;QAKI,IACDE,aADCI,KAAAC,MAAA,KAAAC,IAAA,SAAAC;YAAA,OAAAA,EAAAF,MAAA,KAAAC,IAAA,SAAAE;gBACKJ,OADLI,KAAAA,EAAAC;;;QAEU,KAAA,IAAKjD,IAAEkD,YAAQ1E,IAAU2E,MAAAvC,QAAApC,IAAAA,IAAA,GAAAA,IAAAA,IAAAA,IAAAA,EAAA4E,OAAAC,gBAAA;YAAA,IAAAC;YAAvC,IAAA9E,GAAA;gBACI+E,IAAAA,KAAAA,EAAAA,QACDV;gBACIS,QAAOT,EAAAA;mBAAe;gBAAtBrE,IAAAA,EAAAgF;gBAFP,IAAAhF,EAAAiF,MAAA;gBAGAH,QAAA9E,EAAAkC;;YAAA,IAAAgD,QAAAJ;YAAA,IAAAK,WAAAD,MAAA;YAAA,IAAAhD,QAAAgD,MAAA;YAAAE;gBARF,OAASC,EAAAA,QAAT,UAA+B,SAAAC;oBACzBpB,OAAAA,MAASqB,OAAQb,GAAAA;;cAOrBS,aAAAjD;;QAAA,OAAAkD;;IAAA,SAAUD,WAAV5B;QAAA,IAAAiC,aAAAjC,KAAAiC;QAA0CJ,IAAAA,YAAcD,WAAdM,YAAAlC;;IAY5C,SAAAmC,YAAAnC,MAAAoC,MAAAC,KAAA1D,OAAAiC;;;;;+CASOZ,KAASmC,YAAYnC,SAAMoC,SAC5BA,IAAS,YAATA;YAEAA,KAAAA,SAAgB,mBAAAzD,SAAA,mBAAA0D,KAClBrC,KAAA6B,MAAAG,UAAArD,SAAA;YAEAF,IAAAA,SAAA,mBAAAE,OAAA;gBACAF,IAAA,mBAAA4D,KACK,KAAID,IAAAA,KAASC,KACbC,MAAL7F,KAAiBkC,QAASqB,KAA1B6B,MAAApF,KAAA;gBAGE,KAAKkC,IAADlC,KAAUkC,OACZqB,KAAK6B,MAAMG,KAAX,mBAAqBrD,MAASlC,OAA9B,MAAA8F,mBAAAC,KAAA/F,KAAAkC,MAAAlC,KAAA,OAAAkC,MAAAlC;;eAGA;YACE,IAAAgG,UAAAJ,KAAmBK,cAAW/D;YAA9B,IAAA,mBAAA0D,KACDI,UAAAX,aAAAO;YAECrC,IAAA,mBAAK6B,OAINa,cAAAZ,aAAAnD;YAGH,IAAI8D,aACFC,WAAAA;YAEAD,IAAAA,SAAUX;gBACX,KAAA,IAAA1E,OAAAqF,SACG,IAA0B,mBAAnB9D,iBAAmBvB,OAAAsF,cAAA;oBAC5BA,OAAAA,OAAcZ;oBACfa,WAAA;;8CAKGF,IAAAA,YAASG,UAAAH,QAAAG,OAAA;oBACX3D,OAAS7B,QAAOqF,YAASG;oBACvBD,WAAWD;;gBAIZ,IAAAC;mBAIG1D,KAAAA,UAAAyD;eAGH,IAAA,8BAAAN;;eAED,IAAa,OAATO,KAAAA,MAAS,OAAAP,KAAA,IAAA;YACXpC,IAAAA,aAAK6C,UAALT,OAAAA,KAAAjB,QAAA,YAAA;YACDiB,OAAAA,KAAAlC,cAAA4C,UAAA;YACF,IAlBDnE;gBAmBEqB,KAAAA,KAAK6C;oBACN7C,KAAA+C,iBAAAX,MAAAY,YAAAC;oBACF,IAAA,SAAAb,MAAA;wBACIpC,KAAIoC,iBAAS,cAAAc,YAA2BD;wBACzCtE,KAAOqB,iBAAiBrB,YAAAwE,UAAjBF;;;mBAGJb;gBACPpC,KAAIrB,oBAAOyD,MAAAY,YAAAC;gBACT,IAAU,SAANb,MAAM;oBACRpC,KAAK+C,oBAAiBX,cAAtBc,YAAAD;oBACAjD,KAAIoC,oBAAe,YAAAe,UAAAF;;;aAGlBjD,KAAAoD,QAAApD,KAAAoD,WAAAhB,QAAAzD;eACF,IAAA,WAAAyD,QAAA,WAAAA,SAAAxB,SAAAwB,QAAApC,MAAA;YACFqD,YAAMrD,MAAAoC,MAAA,QAAAzD,QAAA,KAAAA;YACLqB,IAAKsD,QAALtD,UAAA,MAAKsD,OAA0BN,KAA/BO,gBAAAnB;eACA;YACEpC,IAAAA,KAAKsD,SAAAA,UAALlB,OAAyBA,KAAAjB,QAAc+B,YAAYD;YACnDjD,IAAKsD,QAALtD,UAAyB,MAApBsD,OACN,IAAAE,IAAAxD,KAAAyD,kBAAA,gCAAArB,KAAAlC,qBAAAF,KAAAuD,gBAAAnB,YACF,IAAA,qBAAAzD,OACMyE,IAAAA,IAAAA,KAALM,eAAyBN,gCAA1BhB,KAAAlC,eAAAvB,aAAAqB,KAAA2D,aAAAvB,MAAAzD;;;IAaA,SAPD0E,YAOWrD,MAAAoC,MAAiBzD;QAC1B;YAODqB,KAAAoC,QAAAzD;UACF,OAAAiF;;IAMH,SAASP,WAATO;QACE,OAAIC,KAAAT,IAAAQ,EAAAE,MAAAzG,QAAA0G,SAAA1G,QAAA0G,MAAAH,MAAAA;;IAGL,SAAAV,WAAAU;;QAEDC,KAAAG,IAAAJ,EAAAK,QAAA,GAAAC;;;IAIE,SAAOf,SAAKC;QACb,IAAAe,KAAAC,IAAAR,EAAAS,eAAA,GAAAC,QAAAT,KAAAU,KAAA,MAAAJ,KAAAC,IAAAR,EAAAS,eAAA,GAAAH,QAAAL,KAAAG,KAAA,MAAAG,KAAAC,IAAAI,SAAAC,KAAAC,YAAAb,KAAAc,KAAA;;;;;QAQD,KAAA,IAASxB,IAAAA,GAASS,MAAGvG,QAAAuH,WAAA/H,QAAAJ,IAAAoI,KAAApI,KAAA;YACnB,IACE0H,OAASP,QAAES,WAAF5H;YAKV,IAAAqI,KAAAC,SAAAA,MACF,OAAAD,KAAAE;;QClLM,IAAAA,WAASC,MAAYF;QAC1B1H,QAAKuH,WAAWC;YAAMxH,MAAQuH;YAAAA,UAA9BI;;QACEE;QAEA,OAAIJ;;;QAKNK,SAAIH,MAAWG,OAAMD,gBAArB;QAEAA,MAAAA,IAAAA,QAAAA,mCAAAA;QAEA,IAAAE,KAAOJ,IAAAA,OAAP,mDAAA;QAUAK,MAAAA,IAAAlE,QAAAiE,IAAA,SAAAE,IAAAC,IAAAC,IAAAC;;;YAUE,IAAIC,cAAcH,GAAApE,QAAlB,UAA+B,MAAAgE,SAAAK;;;QAW9B,OAAAH;;IAGD,SAAAM,SAAA3D,SAAA4D;;QAEA,IAAAC,MAAOH,SAAAA,eAAPE;QACA,IAAAE,OAAAtB,SAAAuB,qBAAA,QAAA;QACD,IAnBDF,OAAAA,IAAA5D,eAAA6D;;QAwBKA,KAAAE,YAAkBhE;QACvB4D,gBAAQ1F,aAAR,QAAA;QACA+F,gBAAUzB,aAAS0B,MAAeN;QAClC,IAAIE,OAAOtB,eACXyB,gBAAehE,WAAJD,UAAyBA,cAEnCiE,gBAAAE,cAAAnE;;IAIDiE,SAAAA,kBAAgBtC;QAChBsC,IAAAA,OAAAA,SAAgBtC,qBAAhB,QAAA;QACA,IAAIyC,kBAAOC,SAAe/F,cAAA;QACxB2F,KAAAA,YAAAA;QACDA,gBAAMtC,aAAA,QAAA;QAEN,IAAAyC,OAAAC,eACFJ,gBAAAK,WAAAtE,UAAAA,cAEMiE,gBAASM,cAATvE;;IAILiE,SAAAA,cAAgBtC,MAAAA,OAAa6C,MAAQjH;;YAErCkH,UAAWJ,MAAAA;YACTJ,QAAAA,OAAAA,OAAgBK;YADlB,IAAAzE,UAEOtC,UAAAmH,GACLT,SAAAA,OAAgBE;eAEnB,IAAAtE,UAAAtC,UAAAmH;QAGCnH,UAAIlC,IAAQsJ;;IAGV,SAAI9E,oBAAoB6E,MAAxBF;QACEb,IAAAA,QAAAA,aACDc,UAAAD,MAAAI;;IAIHrH,SAAAA,eAAoBsC,OAApB2E;QACD,IAAAnJ,QAAAsJ;;gBAEMhB,SAASkB,OAAAA,OAAoBD,OAAMJ;gBACpCnJ,QAAQsJ,mBAAaH,SAAA;;eAExB,KAAAnJ,QAAAyJ,mBAAAN,OAAA;YACFD,kBAAA1E;;;;IAKK8D,SAAAA,UAASoB,MAAOlF;QAChBxE,IAAQyJ,mBAARzJ,MAAA;YACDuJ,KAAAvK,aAAAuK,KAAAvK;YAJHuK,KAKOvK,WAAKgB,QAAQyJ;YAClBP,KAAAA,MAAAA,KAAAA;YACAlJ,KAAAA,IAAQyJ,QAAAA;YACTF,KAAAlK,SAAAyC,QAAA,SAAA5C;gBACF,OAAAkK,UAAAD,MAAAjK;;;;IAKGqK,SAAKvK,UAALuK,MAAAvB;QACAuB,IAAgBvB,mBAAhBuB,QAAAvB,KAAA;YACAuB,KAAKvB,aAAYuB,KAAjBvK;YACAuK,KAAKlK,IAAAA,OAASyC,KAAQyH,KAAAvK,WAASoK,OAAgBlK;;;ICnH5C,SAAIyK;;QAEX,OAAAC,IAAAC,OAAAlK,OAAA;YACImK,IAAAA,QAAYC,YAAhB/J,QAAA+J,WAAAH;;YAEA,IAAAA,EAAA5B,KACIgC,eAAJ,qBAAAJ,EAAA5B,MAAA4B,EAAA5B,QAAA4B,EAAA5B,KAAA,OAAAJ,YAAAgC,EAAAK;;;IAWG,SAAAC,KAAAC,KAAAlK,OAAAmK,SAAAC,UAAAC,QAAAC;;;;;QASI,IAAAC;QAEL,IAAIhJ,QAACmI,QACH1J;YACA6J,UAAYQ;;;QAKdE,MAAIA,MAAAA,KAAJvK,OAAAmK,SAAAC,UAAAE;QAEA,IAAI/I,UAAQvB,IAAZ2E,eAAoB0F,QAAAA,OAAA3B,YAAA6B;QAGhBnL,OAAAA,WAAUY;YAFJ+J,aAAR;;;QAQF,OAAIM;;IAIFN,SAAAA,MAAAA,KAAY/J,OAAZmK,SAAAC,UAAAE;QACA,IAAAE,MAAAN,KACAO,cAAKH;QAGP,IAAA,QAAAtK,SAAA,oBAAAA,OAAAA,QAAA;QAGF,IAAA0K,YAAA1K,MAAAlB;QACA,IAAAiB,QAAA4K,QAAoB3K,YAApB;YACEA,MAAIwK,WAAJzK,QAAA4K,QAAAD;YAAA,OACED,wBADFP,KAAAlK,OAAAmK,SAAAC;;;YAOA,IAAIM,YAAJ/K,MAAI+K,IAAY1K,aAAhBkK,IAAAvF,gBAAAuF,IAAAU,cAAAN;gBAEEtK,IAAMlB,IAAAA,aAAWiB,OACjBmK,IAAOW,YAAAA;;gBAILL,MAAAtD,SAAA4D,eAA6B9K;gBAC/B,IAAAkK,KAAA;oBAEEA,IAAAA,IACAA,YAAAA,IAAAvF,WADAoG,aAEIpG,KAFJuF;oBAKAc,kBAAAd,MAAA;;;YAKA;gBACAM,IAAeM,cAAAA;cACf,OAAAxE;YAEE0E,OAAAA;;QAIJnB,YAAA,UAAAa,aAAA,IAAA,oBAAAA,aAAA,IAAAb;QAGCa,YAAC9K,OAAU8K;;YAEZF,MAAAtH,WAAAwH,WAAAb;;gBAIFA,OAAAA,IACEa;gBAOFA,IAAAA,IAAY9K,YAAO8K,IAAP/F,WAAZoG,aAAAP,KAAAN;;;;QAM2BM,IAAAA,KAAAA,IAAI9B,YAA3BxH,QAFOsJ,IAAA,YAKPS,YAAQtG,MAARvF;QAEA,IAAA,QAAA8B,OAAA;YACA8J,QAAAA,IAAA;YACD,KAAA,IAAA7H,IAAAqH,IAAAzL,YAAAI,IAAAgE,EAAA5D,QAAAJ,OACF+B,MAAAiC,EAAAhE,GAAA2F,QAAA3B,EAAAhE,GAAAkC;;;YAMD,IAAIH,GAAAA,aAAe+J,UAAA,IACjB/J,GAAAA,YAAYc,UAAZ;eAGD,IAAAiJ,aAAAA,UAAA1L,UAAA,QAAA2L;QAaGA,eAAGC,KAAYF,MAAAA,YAAf/J;QAGJ2I,YAAAY;QAEEW,OAAAA;;IAgBH,SAAAA,cAAAlB,KAAAe,WAAAd,SAAAC,UAAAiB;YASDC,GACMC,GACFnM,GACAoM,QACAC,0CAXJrM;QAQE,IAMEsM,MAAAA,KANF,KAOEC,IAAOV,IAAAA,GAAAA,IAAAA,KAAYA,KAAAA;YACnBK,IAAAA,SARFC,iBAAApM,IASEwK,QATFiC,OAAA,YAUEC,MAVFF,QAAAzK,QAAA0K,OAAAhB,aAAAgB,OAAAhB,WAAAkB,MAAA5K,MAAApB,MAAA;YAWEiM,IAAAA,QAAAA,KAXF;gBAYE9M;;mBAEF,IAAAiC,eAAAvB,MAAAiM,OAAAI,YAAAX,cAAAO,OAAAT,UAAAvH,UAAA,IAAAyH,cACI9D,SAAWmE,iBAAAE;;QAUX,IAAI9L,MAAJ6L,MACEF,KAAAA,IAAAA,IAAAA,GAAAA,IAAAA,MAAAA,KAAAA;YACAD,SAAM1L,UAAOb;YACdA,QAAM;YAUR,IAAAa,MAAAiM,OAAAjM;YACF,IAAA,QAAAA;;oBAEG6L,QAAYH,MAAA1L;oBACT0L,MAAIrM,YAAOA;oBACd4M;;mBAIIjM,KAAAA,SAAaA,MAAjB4L,aACI5L,KAAAA,IAAOmM,KAAMX,IAAAI,aAAAJ,KACXG,SAAkB3L,MAAlB2L,SAAYD,MAAe7L,eAAWgK,IAAAvK,SAAAkM,IAAAS,QAAAV,cAAA;gBACxCpM,QAAQuM;gBACRA,SAAAF,UAAa3L;gBACb8L,IAAAA,MAAAA,cAAAA,GAAAA;gBACD,IAAAH,MAAAW,KAAAA;gBACF;;YASK7M,QAAAA,MAAAA,OAAA2M,QAAcpM,SAAdyK;YAEAyB,IAAAN,iBAAApM;YACA,IAAAF,SAAAA,UAAAiL,OAAAjL,UAAA4M,GACD,IAAA,QAAAA,GACF3B,IAAAxB,YAAAzJ,aACF,IAAAA,UAAA4M,EAAAK,iCAGDjN,IAAQkN,aAAaJ,OAAbF;;QAOJO,IAAAA,UACD,KAFM,IAAAjN,KAEAqM,OACLtB,SAAImC,MAAJnC,MAAImC,IAAoBR,kBAAxBL,MAAArM,KAAA;mCAMR,SAAAQ,OAAAV,QAAAG,SAAAsM,iBAAAV,kBAAA/L,QAAA;;IAOA,SAAOgN,kBAAPvJ,MAA2B4J;QACzB,IAAArK,YAAa7C,KAAAA;QAEd,IAAA6C,6CAGH;;YAKE,KAAqB2I,MAAjB3I,eAAJ,QAAAS,KAAA,YACIT,WAAWS;YAAf6J,eAGO7J;;;;QASL6J,OAAAA,KAAAA;QACD,OAAA7J,MAAA;YACF,IAAAyB,OAAAzB,KAAA8J;;YAED9J,OAAAyB;;;IASIzB,SAAAA,eAAAwH,KAAAuC,OAAA1H;QACD,IAAAD;QAGH,KAAAA,QAAAC;4BAQE,MAAA,eAAAD,QAAA,gBAAAA,QAAAA,QAAAC,OAAA0H,MAAA3H,WAAA,YAAAA,QAAA,cAAAA,OAAAoF,IAAApF,QAAAC,IAAAD,SACAD,YAAAqF,KAAkBpF,MAAAC,IAAAD,OAAAC,IAAAD,QAAA2H,MAAA3H,OAAA+E;;IAkBnB,SAAA6C,iBAAAzK;;;;;QC9VD,UAAM0K,OAAAA,WAANC,KAAA9H;QAGO,IAAA8H,KAASF,aAAAA,KAAiBzK,UAAW4K,QAAA;YAC1CC,OAAIhI,IAAO7C,KAAAA,OAAU+H;YAEtB+C,UAAAlM,KAAAiM,MAAA5L,OAAAiJ;;YAED2C,OAAA,IAAAC,UAAA7L,OAAAiJ;YACO2C,KAASE,cAAAA;YACdF,KAAIG,SAAON;;;QAITG,IAAAA,MACAC,KAAAA,IAAAA,IAAUlM,KAAKiM,QAAf3N,OAFF,IAGO8N,KAAA9N,GAAA6K,gBAAA4C,MAAA;YACLE,KAAOI,MAAAD,KAAc/L,GAAOiJ;YAC5B2C,KAAK9C,OAAL7K,GAAmByN;YACnBE;;QAIF,OAAIG;;IAIEA,SAAAA,SAAKE,OAALC,MAAAjD;QACA,OAAA5D,KAAAyD,YAAA9I,OAAAiJ;;ICgNP,SATDkD;;YAWAvJ,KAAMtC,GAAAA,KAAU8L,KAAhBC;;;YCpPMC,SAAAA,GAAY3M,KAAlB4M,SAAAF;;;;IASI/F,SAAKkG,YAAQlG;QACd,IAFDmG,UAAA;;YAIAC,KAAAA,IAAAA,GAGAA,IAAAA,IAAAA,YAAiBrO,aAAjB;gBACDsO,aAAAF;gBCbMA,UAASG,WAAiB;oBAC3BH,IAAAA;oBACCpF;mBACCA;mBACF;gBACDA,IAAAwF;gBACDV;;;;IAWD,SAfDW,kBAAA/L,WAAAf,OAAA+M,MAAA9D,SAAAC;QAgBD,KAAAnI,UAAAiM,KAAA;;;;;;gBCcM,IAAAjM,UAAS+L,SAAkB/L,UAA3BkM;gBACL,IAAIlM,UAAUiM,YAAUE,SACxBnM,YAAUiM;mBAELjM,IAAAA,UAAAoM,cACLpM,UAAKA,aAAkBf,OAAvBe,UAA0Cf,MAAMpB,UAAboB;YAGjC,IAAAiJ,WAAIlI,YAAUqM,UAAerM,SAAUqM;gBACvC,KAAIrM,UAAUkM,KAASlM,UAAUkM,MAAVlM,UAAAkI;gBACvBlI,UAAIA,UAAU+H;;YAGf,KAND/H,UAMWA,KAAUoM,UAAcE,MAAAtM,UAAAf;YACjCe,UAAAA,QAAUoM;;YAIV,IAAKpM,MAALgM,MACAhM,IAAUkI,MAAVlI,SAAA,MAAAlC,QAAoBoK,yBAApBlI,UAAAuM,MACDjM,gBAAAN,WAAA,GAAAmI,gBAEG9H,cAAWiM;;;;IAWXhM,SAAAA,kBAAgBN,KAAhBwK;QACD,IAND3H;QAQC,KAAAA,QAAAC,KACF,IAAA,QAAA0H,MAAA3H,SAAA,QAAAC,IAAAD;QAKH,IAAAC,IAAS0J,SAAAA,SAAkB1J,KAAK0H,MAAOrN,SAAAG,SAAA,GACrC,QAAIuF;QAGF,KAAAA,QAAUA,OACR,IAAO,cAAPA,MAAA;YACD,IAAA0B,cAAAiG,MAAA3H;YACF,IAAA,cAAA0B,QAAA,YAAAA,sBAEOpH,IAAAA,MAASG,SAAbwF,IAA2B0H,OAC7B,QAAA;;;IAYD,SAAAlK,gBAAAN,WAAAgM,MAAA7D,UAAAsE;QACF,KAAAzM,UAAAiM,KAAA;YAED,IAWI/D,UACAwE,MACAC,OAbJ1N,QAAAe,UAAAf,sLAMO2N,WAAStM,UAAgBN,MAC1BA,WAAUiM,UAAUhB,yCAEpBhM,wBAAJe,UAAA2I,YACEwC,QAAOnL;YADT,IAOEiL,UAAAA;gBAPFjL,UAQE6M,QAAcD;gBARhB5M,UASE8M,OAAAA;gBATF9M,UAUSkI,UAVT6E;gBAAA,IAWEC,UAAAA,SAXF,KAAAhB,QAAAQ,kBAAAE,eAAAzN,QAAA;oBAYE4L,QAAAA;oBACAoC,IAAAA,UAbFC;uBAiBElN,QAAAA;gBAEAA,UAAUkI,QAAVjJ;gBACAe,UAAIA,OAAUmN;gBACZC,UAAOlF,UAAPA;;YAGClI,UAAAsM,MAAAtM,UAAAqN,MAAArN,UAAAsN,MAAAtN,UAAAiL,MAAA;YAEDmC,KAAAA,MAAO;gBACRpN,UAAAuN,gBAAAvN,UAAAuN;gBACDvN,WAAUf,UAAQA,OAAlBA,OAAAkM,MAAAjD;gBAGD,IAAAlI,UAAA8F;gBAID,IAAKsH,UAAMI,YACTxN,cAAUuN,UAAgBvN,UAAUuN,cAApC,OAAAvN,UAAAyN,WAAAzN;gBAGA0N,UAAAV,UAAAhN,UAAA2N;gBAMC,IAAA3N,UAAA4N;gBASA,eAEDF,MAFCG,iBAAAb,YAAAA,SAAAnQ;gBAKD,IAAImD,MAAAA;;oBAIJ6K,OAAIgD;oBAAJ,IAEEtB,QAAAA,KAFFxE,gBAAAvC,QAAAsI,WAAAjQ,OAAAgN,KAAAhB,KAGErE,kBAAekD,MAAQmF,YAAAA,GAHzB3F,UAAA;wBAKI1C,YAAMqF;;wBAGRA,KAAIiD,MAAaC,KAAAA,OAAaf;wBAC9BnC,KAAOiC,MAAAA;;wBAEPxM,gBAAiByH,MAAAA,GAAAA,WAAb;;oBAGFiG,OAAAA,KAAAA;;oBAEAhO,QAAAA;oBAGA+L,YAAAA;oBACAzL,IAAAA,WACD2M,QAAAjN,UAAA2I,aAAA;oBAhBH,IAAAkE,eAmBO,MAAAb,MAAA;wBACLiB,IAAAA,OAAQJ,MAARlE,aAAA;;;;gBAKEsE,IAAAA,eAAQjN,SAAU2I,eAAlBkC,SAAAiC,uBAAA;oBACD,IAAAmB,aAAApB,YAAAnK;;wBAEDuL,WAAIpB,aAAeb,MAASkC;wBAE1B3B,KAAAA,WACEU;4BAOHJ,YAAAlE,aAAA;4BACFI,kBAAA8D,cAAA;;;;gBAKGoB,IAAAA;gBAIElF,UAAAA,OAAAA;gBACD,IAAAwD,SAAAE,SAAA;oBACF,IAAA0B,eAAAnO,WACFoO,IAAApO;uCAEDmO,eAAIH,GAAWzB,OAAAA;oBAEdA,KAAA5D,aAAAwF;;;;YAIC,KAAAvB,YACM5M,UACN2H,OAAA0G,QAAcC,iBACVH,KAAAA,MAAkB5B;2CAQxB5E,UAAO0G,YAAP3B,eAAAC,eAAAI;gBAEA,IAAA/M,UAAAuO,SACAvO,UAAAuO,QAAA7B,eAAAC,eAAAI;gBAEA,IAAAjP,QAAA0Q,aAAA1Q,QAAA0Q,YAAAxO;;YAGE,IAAA,QAAAA,UAAAyO,KACAzO,OAAAA,UAAUwO,IAAY9B,QACvB1M,UAAAyO,IAAAhR,MAAAmB,KAAAoB;YAID,KAAAyH,cAAY+G,SAAa1Q;;;IAQ3B,SAAK2J,wBAAuBiH,KAAAA,OAAAA,SAAAA;QAC7B,IAAAhH,IAAAO,OAAAA,IAAAU,mCAEDgG,SAAA1G;;QAOE,IACE2G,KAAAA,aAAAA,YADFlH,EAAAiB,aAAA;YAAAoD,kBAAArE,GAAAzI,OAAA,GAAAiJ,SAAAC;YAAAF,MAGE4G,EAAAA;eACAC;YAJF,IAKE7P,sBAAqBlB,eALvB;gBAMAgR,iBAAOH;gBACLE,MAAAA,SAAY/G;;YAGdL,IAAIA,gBAAkBS,MAAAA,UAAcQ,OAAAA,SAAa5K;YAC/CgO,IAAAA,QAAAA,EAAAA,KAAqB9M;gBACrBgJ,EAAAA,MAAAA;gBAEA0G,SAAIC;;YAEF3G,kBAAeP,GAAfzI,OAAA,GAAAiJ,SAAAC;YACDF,MAAAP,EAAA6E;YAED7E,IAAIqD,UAAAA,QAAgBhN,QAAMlB;gBAC1B8R,OAAI1G,aAAJ;gBACEP,kBAAAiH,SAAA;;;QAIF5C,OAAAA;;IAOD,SAAAgD,iBAAA/O;;QAGF,IAAAuM,OAAAvM,UAAAuM;QAEDvM,UAAAiM,OAAA;;QAIOjM,UAAS+O,OAAAA;QAGd,IAAIxC,QAAOvM,UAAUuM;mBAErBvM,iBAAAgP;YAEA,IAAyBhP,QAArBA,KAAJ,YAAyBA,SAAUiP,KAAV,WAAA9P,KAAA;YAEzBa,UAAUuM,MAAVA;YAEApC,WAAAoC;YACA9B,iBAAYzK;YAEV+O,eAAAA;;;;IAMA5E,SAAAA,gBAAA+E,UAAAC;QAAA,MAAAD,oBAAAC,cAAA,MAAA,IAAAjR,UAAA;;;QC/UiB4M,SACP,mBAAA1C,SAAAnD,SAAAmK,cAAAhH,UAAAA;QCNd,IAAAiH;QAMO,IAAAC,OACLlH,QAA2B,mBAAXA,QAAsBnD,SAASmK,cAAchH,SAApDkH;QAGP,OAAAtH,KAAOI,OAAOmH,OAAdpC,QAA0B,GAAA/E,SAAA;;IAG3B,SAAAoH,OAAA3M,MAAA2C;;;IAOA,SAAAiK,IAAAC;;YAED,OAAO1H,OAAKsH,aAAcnC,OAAOhM,KAAOiH,MAAjC;;;ICrBPtK,SAAAA,kBAAwB0H,UAAxB2J;QAAA,MAAAD,oBAAAC,cAAA,MAAA,IAAAjR,UAAA;;;;;;ICFA,SAAOwR,UAAI9N,UAAQ+N;QAAA,IAAsC,qBAAVA,cAAU,SAAAA,YAAA,MAAA,IAAAzR,UAAA,oEAAAyR;QAAAC,SAAArQ,YAAApB,OAAA0R,OAAAF,cAAAA,WAAApQ;YAAAwI;gBAAA3I,OAAAwQ;gBAAAE,aAAA;gBAAAC,WAAA;gBAAAC,eAAA;;;QAAA,IAAAL,YAAAxR,OAAA8R,iBAAA9R,OAAA8R,eAAAL,UAAAD,cAAAC,SAAAM,YAAAP;;;;;;;gBCOvDQ,IAAAA,iBAAYxR;gBAET,IAAA,aAAAyR,WAAsB,aAAAA,SACvBC,QAAAA,KAAJC;oBAEA,IAAKtB,QAAW9R,WAAIG,MAAUC,MAAQJ;oBACpC,IAAIoT,OACAD,QAAM7S,KAAAwR;uBAENoB,IAAiBE,aAAjBF,8BAEAA,IAAAA,OAAAA,KAAYE,KAAZzS,QAAwBuS,IAAAA,MAC1BC,QAAA7S,KAAAK;;;QAMD,OALMwS,QAKID,KAAAA;;IAGLC,SAAAA;QACD,IAAAE,wBAAA1O,MAAAtC,UAAAO,MAAAlB,KAAAvB,WAAA,IACF4B,QAAAsR,sBAAA,IACFC,OAAAD,sBAAAzQ,MAAA;mBAGH,IAAAb,MAAOoR,OAAA;YACRG,KAAAnC,QAAApP,MAAAwR;;eAEeC,IAAAA,MAAT3N,WAAwB;YAAAyN,KAAAnC,QAAApP,MAAA8D;mBAAA9D,MAAA8D;;QAE7B,IAAI9D,KAAJ3B,SAAW,GACT;YAAI2B,OAAJ0R,WAAiBC,MAAA,MAAAJ;;;IAIfA,SAAAA,QAAKnC;QACL,IAAA9B,OAAOtN,UAAM8D;QACd,IAAAwJ,MACF,OAAAA,KAAA7J,YACG8N,IAAAA,KAAKlT,WAAYqL,YACnB,OAAS8H,KAAOE,WAAWC,iBAE9BrE,OAAAA,KAAA7J;;IC9CM,SAFDmO;QAGEtE;;ICkBR,IAAAzO;QACEsJ,cAAa;QACbsB;QACAoI,QAAO;QACPvJ;QACA1G,KAAyB,mBAAboE,WAAwBA,WAAW;QAC/C8L,MA/BF;YACE,IACoB,mBAAXC,WACNA,UACDA,OAAOpM,SAASA,QAChBoM,OAAOnP,UAAUA,OACjB;gBACA,IAAoB,sBAAToP,MACT,OAAOA,WACF,IAAsB,sBAAXpK,QAChB,OAAOA,aACF,IAAsB,sBAAXmK,QAChB,OAAOA;gBAET,OAAQ;oBACN,OAAO1M;;;YAGX,OAAO0M;;QAeP3L;;QpB9BI9H;IAEN,IAAMH;ICHN,IAAIyB,wBAAwBV,OAAOU;IACnC,IAAIF,iBAAiBR,OAAOoB,UAAUZ;IACtC,IAAIG,mBAAmBX,OAAOoB,UAAU2R;IAqCxC,KAAKC,QAAQ5R,UAAUiE,kBAAkB;QAAA,IAE9B4N,eAAT,SAAsBC;YACpB,KAAKA,QAAUA,SAASxK,OAAOrC;YAC/B,KAAK,IAAI8M,SAAS,GAAGC,QAAQ,GAAGC,gBAAgBC,WAAWJ,OAAO9M,OAAOgN,QAAQC,cAAcE,KAAKpU,QAAQiU,SAC1G,IAAIC,cAAcE,KAAKH,WAAWjN,MAAM;gBACtC,KAAKgN,QAAQA,SAASE,cAAcG,MAAMJ,OAAOjU,QAAQgU,UAAYE,cAAcG,MAAMJ,OAAOD,QAAQ1S,KAAK0F,MAAM+M;gBACnH;;;QANN,IAAII;QAUJN,QAAQ5R,UAAUiE,mBAAmB,SAAUoO,YAAYC;YACzD,IAAIJ,WAAW9S,eAAeiT,aAAa;gBACzC,IAAIJ,gBAAgBC,WAAWG;gBAC/B,KAAK,IAAIE,UAAU,GAAGP,QAAQ,GAAGA,QAAQC,cAAcE,KAAKpU,QAAQiU,SAClE,IAAIC,cAAcE,KAAKH,WAAWjN,MAAM;oBAAEwN,SAASP;oBAAO;;gBAE5D,KAAgB,MAAZO,QAAe;oBACjBN,cAAcE,KAAKlU,KAAK8G;oBACxBkN,cAAcG,MAAMnU,OAAMqU;oBAC1BvN,KAAK,OAAOsN,cAAcR;uBACrB;oBACL,IAAIW,eAAeP,cAAcG,MAAMG;oBACvC,IAAIxN,KAAK,OAAOsN,gBAAgBR,cAAc;wBAC5CW,aAAa7G,OAAO;wBACpB5G,KAAK,OAAOsN,cAAcR;;oBAE5B,KAAK,IAAIE,SAAS,GAAGA,SAASS,aAAazU,QAAQgU,UACjD,IAAIS,aAAaT,YAAYO,WAAa;oBAE5CE,aAAavU,KAAKqU;;mBAEf;gBACLJ,WAAWG;oBAAgBF,QAAOpN;oBAAOqN,WAASE;;gBAClDvN,KAAK,OAAOsN,cAAcR;;;QAG9BD,QAAQ5R,UAAUwE,sBAAsB,SAAU6N,YAAYC;YAC5D,IAAKJ,WAAW9S,eAAeiT,aAA/B;gBACA,IAAIJ,gBAAgBC,WAAWG;gBAC/B,KAAK,IAAIE,UAAU,GAAGP,QAAQ,GAAGA,QAAQC,cAAcE,KAAKpU,QAAQiU,SAClE,IAAIC,cAAcE,KAAKH,WAAWjN,MAAM;oBAAEwN,SAASP;oBAAO;;gBAE5D,KAAgB,MAAZO,QACJ,KAAK,IAAIR,SAAS,GAAGS,eAAeP,cAAcG,MAAMG,SAASR,SAASS,aAAazU,QAAQgU,UAC7F,IAAIS,aAAaT,YAAYO,WAAaE,aAAa7G,OAAOoG,QAAQ;;;;IAM5E,IAA6B,qBAAlBnT,OAAO0R,QAChB1R,OAAO0R,SAAS,SAASmC,OAAOC;QAa9B,SAASC;QAZT,IAAqB,mBAAVF,SAAuC,qBAAVA,OACtC,MAAM,IAAI9T,UAAU,6CAA6C8T,aAC5D,IAAc,SAAVA,OACT,MAAM,IAAIG,MACR;QASJD,EAAE3S,YAAYyS;QAEd,OAAO,IAAIE;;IAIf,KAAKvU,OAAO4B,UAAUoC,MACpBhE,OAAO4B,UAAUoC,OAAO;QACtB,OAAO2C,KAAK1C,QAAQ,sCAAsC;;IAmC9D,IAAIwQ,aAA+B,qBAAXC;IAGxB,IACsB,mBAAbpN,YACW,sBAAX+L,UACPA,OAAOsB,GAEP,IAAmC,cAA/BtB,OAAOsB,EAAWC,UACpBH,cAAa,QACR;QACL,IAAII,gBACDxB,OAAOsB,EAAWE,iBACjBxB,OAAOsB,EAAWE,cAAcjR,MAAM,KAAK,MAC7C;QACF,IAAIiR,gBAAgB,GAClBJ,cAAa;;IAKZ,IAAMlS,QAAQkS,aACjBC,QAAQI,UAAUC,KAAKC,KAAKN,QAAQI,aACpCG;;IExKG,IAAMC;IGsKX,IAAAlN,UAAKP;ICrCL,IAAAuC;IAGIN,IAAAA,YAAKvK;IAGV,IAAA8K,aAAA;ICjIM,IAAMD,aAAN;IAsVD/E,IAAAA;ICtTJ,IAAAkQ,OAAO,SAAK/K,KAAL1J,QAAwB6J,KAAAA;QAChC,IAAA6K,WAAA,SAAA1U,QAAA2U,KAAAC;;YC5CD,IAAAC,YAAA7U,OAAA6U;;;;;;;gBAOMH,UAAAA,KAAW1U;;YAEb,KAAI6U,IAAAA,QAAY7U,QAChB,IAAI8U,OAAAA,eAAJC,OACIN,IAAAA;gBACEzU,IAAAA,KAAOf,QAAP0V,QAAqBF,KAAAO,UAAAL,KAAAI,OAAA;oBACvB/U,aAAOiV,KAAPF;oBACA/U,UAAOiV,MAAPjV,QAAqBkV;uBACtB,IAAAT,KAAAU,SAAAR,QAAAI,QAAAJ,KAAA;oBACDE,aAAe7U,KAAf+U;oBACDF,UAAAO,MAAApV,QAAA+U;;mBAEK/U;gBACF8U,aAAc3V,KAAA4V;gBACZF,UAAS5T,MAALjB,QAAA+U;;YAIFD,UAAAA,SAAAA;YACAD,KAAAA,UAAAA,wBAAAA,UAAAQ;YACD,IAAAC,cAAAV,WAAAA,WAAAD;YACFE,UARDQ,uBAQOlW;gBACL2V,MAAAA;gBACAD,aAAAA;gBACDC,cAAAA;;;QAGLD,SAAAA;YACAU,mBAAeF,SAAwBR,MAAUQ,OAAAA,UAAAA,QAAVG;gBACvC,IAAIF,UAAAA,YAAcV,KAAWA,wBAA7B;oBACAC,IAAAA,WAAUQ,KAAAA,EAAVN,MAAsCS;oBACpCC,KAAMb,IAAAA,IAD8B,GAAA3N,MAAAhB,KAAAoP,uBAAApW,QAAAJ,IAAAoI,KAAApI,KAAA;wBAEpCyW,IAAAA,UAAaA,KAAAA,uBAFuBzW;wBAGpCiW,IAAAA,QAAcA,OAAAA,KAAAA,UAAAA,QAAAA,cAAAA,aAAAA,MAAAA,SAAAA,QAAAA,WAHhBY,QAAAJ,YAAA/U,KAAA0F,KAAAjG,QAAA+U,MAAAhU,OAAA4U,UAAAH;;;gBAQE,IAA+BH,MAA3BtU,KAAAA,QAAU4U,aAAd,mBAA+BN,OAC7BpP,KAAI2P,MAAAA,QAAWnB,MAAKoB,OAALZ,cAAfC;;YAOEY,MAAA,SACUL;gBAIRC,IAAAA,OAAAA;gBACDjB,KAAAsB,QAAAxU,QAAA,SAAA2F;oBACFlH,OAAAkH,QAAA;wBACF,IAAAzC,MAAAjB,MAAAtC,UAAAO,MAAAlB,KAAA0F,MAAA;wBACG8O,IAAAA,SAAavR,MAAAtC,UAAbgG,MAAgCqL,MAAOxR,MAAPyC,MAAiBtC,UAAUO,MAAAlB,KAAAvB;wBAC7D,IAAKoW,IAALY,OAAA,QAAyBhW,OAAOiV,OAAAA,KAAAA,KAAcC,aAA9C;4BACD,KAAA,IAAAe,SAAAhQ,MArBgB,IAAAA,KAAA3F,eAAA2V,WAAAxB,KAAAyB,WAAAjQ,KAAAgQ,SAuBbrD,KAAAwC,MAASpV,MAAQiW,OAAAhQ,KAAAgP,cAAAC;4BAIjBtC,KAAInO,kBAAM,WAAAyC,MAAAjB,MAAVxB,KAAAwB,MAAAA,KAAAgP,cAAAC;;wBAKA,OAAI7T;;oBAEArB,OAAA,SAASM,KAAAA,UAAe2V,GAAAA,GAApBE,gBAAoCD,KAAWhR,UAAhB,MAA8B;wBAC/D0N,OAAAA,MAAKwC,UAAYa,MAAjB1D,MAA6B0C,MAAAA,MAAAA,UAAcC,MAA3C3U,KAAAvB;;;;YAIJ4T,OAAAA,SAAK2C,QAALR,MACES;gBAMH,IAAA,oBAAAT,QAAA,gBAAAA,MACD,KAAAN,KAAAyB,WAAAlW,OAAA+U,QAAA;oBACD,KAtBD/U,OAAAiV,eAAAjV,OAAAiV;oBAuBAjV,SACEX,MADFW,MAGEA,OAAAiV,cAAa/T,gBACXsU,WA5BNxV,OAAAiV,cAAAC,gBAAA;oBAmCA,IAAIH,eAAS/U,OAAAiV,cAAmBF,QAAS/U,OAAa+U;oBAWpDqB,IAAgB,mBAAXC,cAAW;wBACd,IAAA5B,KAAOxT,QAAKgU,eAAL;4BAFyBhP,KAAA6P,KAAAO;4BAIlCC,IAAqB,MAAhBD,aAAStV,QAAO;gCACnB,KAAI0D,aAAWwQ,eAAfoB,aAAApB;gCACA,SAAKA,MAAAA,MACLrC,aAAK2C,cAEHxU,gBAGAf,WAZNqW,aAAApB,cAAAC,gBAAA;;;wBAmBI,KAAA,IAAImB,SAAAA,cACF,IAAAA,aAAKA,eAAapB,QAClBhP,KAAIuP,MAAAA,cAAoBS,OAAAjW,OAAAiV,cAAAC,gBAAA,MAAAH;;;;;QAM3B,OAAA,IAAAL,SAAA1U,QAAA2U,KAAAC;;IAGGH,KAAAsB,YAAA,UACEM,cACAJ,WACOhB,SAAAA,QAAcC,UAArB,QAAA,aAHF,WAAA,YAAA,WAAA,QAAA,QAAA,eAAA,OAAA,OAAA,QAAA,UAAA,eAAA,WAAA,SAAA,SAAA,QAAA,QAAA,UAAA,kBAAA,YAAA,WAAA,UAAA;IAKDT,KAAA8B,eAAA,UAAA,cAAA,QAAA,OAAA,QAAA,WAAA,SAAA,QAAA,UAAA,WAAA,SAAAC,KAAA;IAEJ/B,KAAAxT,UAAA,SAAAN;QACF,OAAA,qBAAAb,OAAAoB,UAAAC,SAAAZ,KAAAI;;IAGJ8T,KApJDU,WAAA,SAAAxU;;;;QAoMA8T,KAAKxT,IAAAA,IAAU0T,IAAA1V,UAAAJ,KAAc,KAC3B,IAAAqI,SAAchG,IAAAA,IAAP,QAAiBC;;;IAKzBsT,KAFDyB,aAAA,SAAAvV;;;IAMI8T,KAAAoB,IAAalB,SAAQI,MAAAS;QACtB,IAAA,QAAAA,MACD,OAAOT;;IAKRN,KAFDgC,MAAA,SAAA9V,KAAAoU;;QAIAN,UAAKoB,MAALlV,KAAoBoU;;IAGjBN,KAAA6B,MAAA,SAAA3V,KAAAoU,MAAAhU,OAAA2V;QACD,KAAAA,MAJF/V,IAAAoU,QAAAhU;QAOA0T,IAAKgC,YAAM9V,IAASA;QAClBkU,UAAIA,MAAYlU,KAAIkU;QACpBA,IAAAA,MAFFlU,IAAAoU,QAAAhU;;IAOIJ,MAAAA,UAAYI,OAAZ,SAAA9B;QACDgH,KAAAhH,SAAAA;;IAGD,IAAAiO;IACEvM,IAAAA;;IG0GD,IAAA8L,YAAA;;YAED5L,gBAASc,MAAT8K;;;;;YClVAxG,KAAA6I,QAAAA;;QACErC,UAAK7L,UAAQb,SACJ,SAAA6U;YAIT3O,KAAKmJ,KAAYpH;YACjB,IAAA4M,WAAY3O,KAAKyD,MAAoBzD,KAAK6G,WAA1C3N,KAAAyV;;YAEA,IAAAnV,QAAAkX,iBAAAlX,QAAAkX,gBAAA1Q,MAAAA,KAAAiI;;;;;YAOApO,OAAI8U,KAAJ3O,KACGrF,OAAKwP,MAAAA,SAAmB5Q;gBAC3ByC,IAAAA,OAAAA,KAAgBK,kBAAhB9C,IAAA8C,eAAA;oBACI7C,MAAAA,MAAQkX;wBAAAA,QAAiBlX;;oBAC7B,QAAKmX;;;;;QAIL9W,UAAOwB,UAAUV,SAAOiW;QAEpB,OAAApK;;IAGFA,UAAAqK,KAAO;IGpCV,IAFDC,YAAA,SAAAC;;;;;QAGDC,UAAAF,WAAAC;kBIFoBD,UAAAA,gBAAAA;;;;;;;;IFEf,IAAAG,YAAS7S;IACP,IAAA8S,gBAAY9S;IAKjB5E,QAAAiT,KAAA0E;QACF7Y,GAAAA;;sBGCiBkO;QAClB+F,WAAM2E;QACN1K,WAAS+F;QACPjG,QAAOA;QACRzK,UAAAA;;QAEDrC,WAAa2X;QACX7Y,QADiB4S;QAEjBzO,KAAAA;QACAlB,WAAAA;QACAgR,eAAAA;QACA/F,YAAAA;QACAF,cANiB8F;QAOjBvQ,SAAAA;;IAEAoV,QAAAA,KAAAA,MAAAA;IACA/F,QAAAA,KAAAA,IAViBkG,UAAA;IAYjBN,IAAAA;QACAI,GAAAA;QACA7E,eAAAA;QACAD,cAAAA;QACAiF,WAAAA;QAhBF7K,WAAAA;QAkBAhN,QAAQiT;QACRjT,UAAAqC;;QAEAoV,WAAeA;QACb3Y,QADa4S;QAEbzO,KAAAA;QACAlB,WAAAA;QACAgR,eAAAA;QACA/F,YAAAA;QACAF,cANa8F;QAObvQ,SAAAA;;IAGAqP,IAVa,sBAUbA,QAVaoG,OAAAC,UAAAC,YAAA7E,KAAAwE,MAAAK","file":"omi.js","sourcesContent":["/** Virtual DOM Node */\nexport function VNode() {}\n","import { VNode } from './vnode'\nimport options from './options'\n\nconst stack = []\n\nconst EMPTY_CHILDREN = []\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a lightweight representation\n * of the structure of a DOM tree. This structure can be realized by recursively comparing it against\n * the current _actual_ DOM structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string} nodeName\tAn element name. Ex: `div`, `a`, `span`, etc.\n * @param {Object} attributes\tAny attributes/props to set on the created element.\n * @param rest\t\t\tAdditional arguments are taken to be children to append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n  let children = EMPTY_CHILDREN,\n    lastSimple,\n    child,\n    simple,\n    i\n  for (i = arguments.length; i-- > 2; ) {\n    stack.push(arguments[i])\n  }\n  if (attributes && attributes.children != null) {\n    if (!stack.length) stack.push(attributes.children)\n    delete attributes.children\n  }\n  while (stack.length) {\n    if ((child = stack.pop()) && child.pop !== undefined) {\n      for (i = child.length; i--; ) stack.push(child[i])\n    } else {\n      if (typeof child === 'boolean') child = null\n\n      if ((simple = typeof nodeName !== 'function')) {\n        if (child == null) child = ''\n        else if (typeof child === 'number') child = String(child)\n        else if (typeof child !== 'string') simple = false\n      }\n\n      if (simple && lastSimple) {\n        children[children.length - 1] += child\n      } else if (children === EMPTY_CHILDREN) {\n        children = [child]\n      } else {\n        children.push(child)\n      }\n\n      lastSimple = simple\n    }\n  }\n\n  let p = new VNode()\n  p.nodeName = nodeName\n  p.children = children\n\tp.attributes = attributes == null ? undefined : attributes\n  p.key = attributes == null ? undefined : attributes.key\n\n  // if a \"vnode hook\" is defined, pass every created VNode to it\n  if (options.vnode !== undefined) options.vnode(p)\n\n  return p\n}\n","'use strict'\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols\nvar hasOwnProperty = Object.prototype.hasOwnProperty\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined')\n  }\n\n  return Object(val)\n}\n\nexport function assign(target, source) {\n  var from\n  var to = toObject(target)\n  var symbols\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s])\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key]\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from)\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]]\n        }\n      }\n    }\n  }\n\n  return to\n}\n\nif (!Element.prototype.addEventListener) {\n  var oListeners = {};\n  function runListeners(oEvent) {\n    if (!oEvent) { oEvent = window.event; }\n    for (var iLstId = 0, iElId = 0, oEvtListeners = oListeners[oEvent.type]; iElId < oEvtListeners.aEls.length; iElId++) {\n      if (oEvtListeners.aEls[iElId] === this) {\n        for (iLstId; iLstId < oEvtListeners.aEvts[iElId].length; iLstId++) { oEvtListeners.aEvts[iElId][iLstId].call(this, oEvent); }\n        break;\n      }\n    }\n  }\n  Element.prototype.addEventListener = function (sEventType, fListener /*, useCapture (will be ignored!) */) {\n    if (oListeners.hasOwnProperty(sEventType)) {\n      var oEvtListeners = oListeners[sEventType];\n      for (var nElIdx = -1, iElId = 0; iElId < oEvtListeners.aEls.length; iElId++) {\n        if (oEvtListeners.aEls[iElId] === this) { nElIdx = iElId; break; }\n      }\n      if (nElIdx === -1) {\n        oEvtListeners.aEls.push(this);\n        oEvtListeners.aEvts.push([fListener]);\n        this[\"on\" + sEventType] = runListeners;\n      } else {\n        var aElListeners = oEvtListeners.aEvts[nElIdx];\n        if (this[\"on\" + sEventType] !== runListeners) {\n          aElListeners.splice(0);\n          this[\"on\" + sEventType] = runListeners;\n        }\n        for (var iLstId = 0; iLstId < aElListeners.length; iLstId++) {\n          if (aElListeners[iLstId] === fListener) { return; }\n        }\n        aElListeners.push(fListener);\n      }\n    } else {\n      oListeners[sEventType] = { aEls: [this], aEvts: [[fListener]] };\n      this[\"on\" + sEventType] = runListeners;\n    }\n  };\n  Element.prototype.removeEventListener = function (sEventType, fListener /*, useCapture (will be ignored!) */) {\n    if (!oListeners.hasOwnProperty(sEventType)) { return; }\n    var oEvtListeners = oListeners[sEventType];\n    for (var nElIdx = -1, iElId = 0; iElId < oEvtListeners.aEls.length; iElId++) {\n      if (oEvtListeners.aEls[iElId] === this) { nElIdx = iElId; break; }\n    }\n    if (nElIdx === -1) { return; }\n    for (var iLstId = 0, aElListeners = oEvtListeners.aEvts[nElIdx]; iLstId < aElListeners.length; iLstId++) {\n      if (aElListeners[iLstId] === fListener) { aElListeners.splice(iLstId, 1); }\n    }\n  };\n}\n\n\nif (typeof Object.create !== 'function') {\n  Object.create = function(proto, propertiesObject) {\n    if (typeof proto !== 'object' && typeof proto !== 'function') {\n      throw new TypeError('Object prototype may only be an Object: ' + proto)\n    } else if (proto === null) {\n      throw new Error(\n        \"This browser's implementation of Object.create is a shim and doesn't support 'null' as the first argument.\"\n      )\n    }\n\n    // if (typeof propertiesObject != 'undefined') {\n    //     throw new Error(\"This browser's implementation of Object.create is a shim and doesn't support a second argument.\");\n    // }\n\n    function F() {}\n    F.prototype = proto\n\n    return new F()\n  }\n}\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '')\n  }\n}\n\n/**\n *  Copy all properties from `props` onto `obj`.\n *  @param {Object} obj\t\tObject onto which properties should be copied.\n *  @param {Object} props\tObject from which to copy properties.\n *  @returns obj\n *  @private\n */\nexport function extend(obj, props) {\n  for (let i in props) obj[i] = props[i]\n  return obj\n}\n\n/** Invoke or update a ref, depending on whether it is a function or object ref.\n *  @param {object|function} [ref=null]\n *  @param {any} [value]\n */\nexport function applyRef(ref, value) {\n  if (ref) {\n    if (typeof ref == 'function') ref(value)\n    else ref.current = value\n  }\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n *\n * @param {Function} callback\n */\n\nlet usePromise = typeof Promise == 'function'\n\n// for native\nif (\n  typeof document !== 'object' &&\n  typeof global !== 'undefined' &&\n  global.__config__\n) {\n  if (global.__config__.platform === 'android') {\n    usePromise = true\n  } else {\n    let systemVersion =\n      (global.__config__.systemVersion &&\n        global.__config__.systemVersion.split('.')[0]) ||\n      0\n    if (systemVersion > 8) {\n      usePromise = true\n    }\n  }\n}\n\nexport const defer = usePromise\n  ? Promise.resolve().then.bind(Promise.resolve())\n  : setTimeout\n\nexport function isArray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nexport function nProps(props) {\n  if (!props || isArray(props)) return {}\n  const result = {}\n  Object.keys(props).forEach(key => {\n    result[key] = props[key].value\n  })\n  return result\n}","import { extend } from './util'\nimport { h } from './h'\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {VNode} vnode\t\tThe virtual DOM element to clone\n * @param {Object} props\tAttributes/props to add when cloning\n * @param {VNode} rest\t\tAny additional arguments will be used as replacement children.\n */\nexport function cloneElement(vnode, props) {\n  return h(\n    vnode.nodeName,\n    extend(extend({}, vnode.attributes), props),\n    arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children\n  )\n}\n","// render modes\n\nexport const NO_RENDER = 0\nexport const SYNC_RENDER = 1\nexport const FORCE_RENDER = 2\nexport const ASYNC_RENDER = 3\n\nexport const ATTR_KEY = '__omiattr_'\n\n// DOM properties that should NOT have \"px\" added when numeric\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i\n","import options from './options'\nimport { defer } from './util'\nimport { renderComponent } from './vdom/component'\n\n/** Managed queue of dirty components to be re-rendered */\n\nlet items = []\n\nexport function enqueueRender(component) {\n  if (items.push(component) == 1) {\n    ;(options.debounceRendering || defer)(rerender)\n  }\n}\n\n/** Rerender all enqueued dirty components */\nexport function rerender() {\n\tlet p\n\twhile ( (p = items.pop()) ) {\n    renderComponent(p)\n\t}\n}","import { extend } from '../util'\nimport options from '../options'\n/**\n * Check if two nodes are equivalent.\n *\n * @param {Node} node\t\t\tDOM Node to compare\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\n * @param {boolean} [hydrating=false]\tIf true, ignores component constructors when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    return node.splitText !== undefined\n  }\n  const ctor = options.mapping[vnode.nodeName]\n  if (ctor) {\n    return hydrating || node._componentConstructor === ctor\n  }\n  return !node._componentConstructor && isNamedNode(node, vnode.nodeName)\n}\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n *\n * @param {Element} node\tA DOM Element to inspect the name of.\n * @param {String} nodeName\tUnnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n  return (\n    node.normalizedNodeName === nodeName ||\n    node.nodeName.toLowerCase() === nodeName.toLowerCase()\n  )\n}\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n *\n * @param {VNode} vnode\n * @returns {Object} props\n */\nexport function getNodeProps(vnode) {\n  let props = extend({}, vnode.attributes)\n  props.children = vnode.children\n\n  let defaultProps = vnode.nodeName.defaultProps\n  if (defaultProps !== undefined) {\n    for (let i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i]\n      }\n    }\n  }\n\n  return props\n}\n","import { IS_NON_DIMENSIONAL } from '../constants'\nimport { applyRef } from '../util'\nimport options from '../options'\n\n/** Create an element with the given nodeName.\n *\t@param {String} nodeName\n *\t@param {Boolean} [isSvg=false]\tIf `true`, creates an element within the SVG namespace.\n *\t@returns {Element} node\n */\nexport function createNode(nodeName, isSvg) {\n  let node = isSvg\n    ? options.doc.createElementNS('http://www.w3.org/2000/svg', nodeName)\n    : options.doc.createElement(nodeName)\n  node.normalizedNodeName = nodeName\n  return node\n}\n\nfunction parseCSSText(cssText) {\n  let cssTxt = cssText.replace(/\\/\\*(.|\\s)*?\\*\\//g, ' ').replace(/\\s+/g, ' ')\n  let style = {},\n    [a, b, rule] = cssTxt.match(/ ?(.*?) ?{([^}]*)}/) || [a, b, cssTxt]\n  let cssToJs = s => s.replace(/\\W+\\w/g, match => match.slice(-1).toUpperCase())\n  let properties = rule\n    .split(';')\n    .map(o => o.split(':').map(x => x && x.trim()))\n  for (let [property, value] of properties) style[cssToJs(property)] = value\n  return style\n}\n\n/** Remove a child node from its parent if attached.\n *\t@param {Element} node\t\tThe node to remove\n */\nexport function removeNode(node) {\n  let parentNode = node.parentNode\n  if (parentNode) parentNode.removeChild(node)\n}\n\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n *\tIf `value` is `null`, the attribute/handler will be removed.\n *\t@param {Element} node\tAn element to mutate\n *\t@param {string} name\tThe name/key to set, such as an event or attribute name\n *\t@param {any} old\tThe last value that was set for this name/node pair\n *\t@param {any} value\tAn attribute value, such as a function to be used as an event handler\n *\t@param {Boolean} isSvg\tAre we currently diffing inside an svg?\n *\t@private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n  if (name === 'className') name = 'class'\n\n  if (name === 'key') {\n    // ignore\n  } else if (name === 'ref') {\n    applyRef(old, null)\n    applyRef(value, node)\n  } else if (name === 'class' && !isSvg) {\n    node.className = value || ''\n  } else if (name === 'style') {\n    if (options.isWeb) {\n      if (!value || typeof value === 'string' || typeof old === 'string') {\n        node.style.cssText = value || ''\n      }\n      if (value && typeof value === 'object') {\n        if (typeof old !== 'string') {\n          for (let i in old) if (!(i in value)) node.style[i] = ''\n        }\n        for (let i in value) {\n          node.style[i] =\n            typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false\n              ? value[i] + 'px'\n              : value[i]\n        }\n      }\n    } else {\n      let oldJson = old,\n        currentJson = value\n      if (typeof old === 'string') {\n        oldJson = parseCSSText(old)\n      }\n      if (typeof value == 'string') {\n        currentJson = parseCSSText(value)\n      }\n\n      let result = {},\n        changed = false\n\n      if (oldJson) {\n        for (let key in oldJson) {\n          if (typeof currentJson == 'object' && !(key in currentJson)) {\n            result[key] = ''\n            changed = true\n          }\n        }\n\n        for (let ckey in currentJson) {\n          if (currentJson[ckey] !== oldJson[ckey]) {\n            result[ckey] = currentJson[ckey]\n            changed = true\n          }\n        }\n\n        if (changed) {\n          node.setStyles(result)\n        }\n      } else {\n        node.setStyles(currentJson)\n      }\n    }\n  } else if (name === 'dangerouslySetInnerHTML') {\n    if (value) node.innerHTML = value.__html || ''\n  } else if (name[0] == 'o' && name[1] == 'n') {\n    let useCapture = name !== (name = name.replace(/Capture$/, ''))\n    name = name.toLowerCase().substring(2)\n    if (value) {\n      if (!old) {\n        node.addEventListener(name, eventProxy, useCapture)\n        if (name == 'tap') {\n          node.addEventListener('touchstart', touchStart, useCapture)\n          node.addEventListener('touchend', touchEnd, useCapture)\n        }\n      }\n    } else {\n      node.removeEventListener(name, eventProxy, useCapture)\n      if (name == 'tap') {\n        node.removeEventListener('touchstart', touchStart, useCapture)\n        node.removeEventListener('touchend', touchEnd, useCapture)\n      }\n    }\n    ;(node._listeners || (node._listeners = {}))[name] = value\n  } else if (name !== 'list' && name !== 'type' && !isSvg && name in node) {\n    setProperty(node, name, value == null ? '' : value)\n    if (value == null || value === false) node.removeAttribute(name)\n  } else {\n    let ns = isSvg && name !== (name = name.replace(/^xlink:?/, ''))\n    if (value == null || value === false) {\n      if (ns)\n        node.removeAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          name.toLowerCase()\n        )\n      else node.removeAttribute(name)\n    } else if (typeof value !== 'function') {\n      if (ns)\n        node.setAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          name.toLowerCase(),\n          value\n        )\n      else node.setAttribute(name, value)\n    }\n  }\n}\n\n/** Attempt to set a DOM property to the given value.\n *\tIE & FF throw for certain property-value combinations.\n */\nfunction setProperty(node, name, value) {\n  try {\n    node[name] = value\n  } catch (e) {}\n}\n\n/** Proxy an event to hooked event handlers\n *\t@private\n */\nfunction eventProxy(e) {\n  return this._listeners[e.type]((options.event && options.event(e)) || e)\n}\n\nfunction touchStart(e) {\n  this.___touchX = e.touches[0].pageX\n  this.___touchY = e.touches[0].pageY\n  this.___scrollTop = document.body.scrollTop\n}\n\nfunction touchEnd(e) {\n  if (\n    Math.abs(e.changedTouches[0].pageX - this.___touchX) < 30 &&\n    Math.abs(e.changedTouches[0].pageY - this.___touchY) < 30 &&\n    Math.abs(document.body.scrollTop - this.___scrollTop) < 30\n  ) {\n    this.dispatchEvent(new CustomEvent('tap', { detail: e }))\n  }\n}","import options from './options'\n\nlet styleId = 0\n\nexport function getCtorName(ctor) {\n  for (let i = 0, len = options.styleCache.length; i < len; i++) {\n    let item = options.styleCache[i]\n\n    if (item.ctor === ctor) {\n      return item.attrName\n    }\n  }\n\n  let attrName = 's' + styleId\n  options.styleCache.push({ ctor, attrName })\n  styleId++\n\n  return attrName\n}\n\n// many thanks to https://github.com/thomaspark/scoper/\nexport function scoper(css, prefix) {\n  prefix = '[' + prefix.toLowerCase() + ']'\n  // https://www.w3.org/TR/css-syntax-3/#lexical\n  css = css.replace(/\\/\\*[^*]*\\*+([^/][^*]*\\*+)*\\//g, '')\n  // eslint-disable-next-line\n    let re = new RegExp('([^\\r\\n,{}:]+)(:[^\\r\\n,{}]+)?(,(?=[^{}]*{)|\\s*{)', 'g')\n  /**\n   * Example:\n   *\n   * .classname::pesudo { color:red }\n   *\n   * g1 is normal selector `.classname`\n   * g2 is pesudo class or pesudo element\n   * g3 is the suffix\n   */\n  css = css.replace(re, (g0, g1, g2, g3) => {\n    if (typeof g2 === 'undefined') {\n      g2 = ''\n    }\n\n    /* eslint-ignore-next-line */\n    if (\n      g1.match(\n        /^\\s*(@media|\\d+%?|@-webkit-keyframes|@keyframes|to|from|@font-face)/\n      )\n    ) {\n      return g1 + g2 + g3\n    }\n\n    let appendClass = g1.replace(/(\\s*)$/, '') + prefix + g2\n    //let prependClass = prefix + ' ' + g1.trim() + g2;\n\n    return appendClass + g3\n    //return appendClass + ',' + prependClass + g3;\n  })\n\n  return css\n}\n\nexport function addStyle(cssText, id) {\n  id = id.toLowerCase()\n  let ele = document.getElementById(id)\n  let head = document.getElementsByTagName('head')[0]\n  if (ele && ele.parentNode === head) {\n    head.removeChild(ele)\n  }\n\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n  someThingStyles.setAttribute('id', id)\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addStyleWithoutId(cssText) {\n  let head = document.getElementsByTagName('head')[0]\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addScopedAttr(vdom, style, attr, component) {\n  if (options.scopedStyle) {\n    scopeVdom(attr, vdom)\n    style = scoper(style, attr)\n    if (style !== component._preCss) {\n      addStyle(style, attr)\n    }\n  } else if (style !== component._preCss) {\n    addStyleWithoutId(style)\n  }\n  component._preCss = style\n}\n\nexport function addScopedAttrStatic(vdom, attr) {\n  if (options.scopedStyle) {\n    scopeVdom(attr, vdom)\n  } \n}\n\nexport function addStyleToHead(style, attr) {\n  if (options.scopedStyle) {\n    if (!options.staticStyleMapping[attr]) {\n      addStyle(scoper(style, attr), attr)\n      options.staticStyleMapping[attr] = true\n    }\n  } else if (!options.staticStyleMapping[attr]) {\n    addStyleWithoutId(style)\n    options.staticStyleMapping[attr] = true\n  }\n}\n\nexport function scopeVdom(attr, vdom) {\n  if (typeof vdom === 'object') {\n    vdom.attributes = vdom.attributes || {}\n    vdom.attributes[attr] = ''\n    vdom.css = vdom.css || {}\n    vdom.css[attr] = ''\n    vdom.children.forEach(child => scopeVdom(attr, child))\n  }\n}\n\nexport function scopeHost(vdom, css) {\n  if (typeof vdom === 'object' && css) {\n    vdom.attributes = vdom.attributes || {}\n    for (let key in css) {\n      vdom.attributes[key] = ''\n    }\n  }\n}\n","import { ATTR_KEY } from '../constants'\nimport { isSameNodeType, isNamedNode } from './index'\nimport { buildComponentFromVNode } from './component'\nimport { createNode, setAccessor } from '../dom/index'\nimport { unmountComponent } from './component'\nimport options from '../options'\nimport { applyRef } from '../util'\nimport { removeNode } from '../dom/index'\nimport { isArray } from '../util'\nimport { addStyleToHead, getCtorName } from '../style'\n/** Queue of components that have been mounted and are awaiting componentDidMount */\nexport const mounts = []\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n  let c\n  while ((c = mounts.pop())) {\n    if (options.afterMount) options.afterMount(c)\n    if (c.installed) c.installed()\n    if(c.css){\n      addStyleToHead(typeof c.css === 'function' ? c.css() : c.css, '_s' + getCtorName(c.constructor))\n    }\n  }\n}\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n  // diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n  if (!diffLevel++) {\n    // when first starting the diff, check if we're diffing an SVG or within an SVG\n    isSvgMode = parent != null && parent.ownerSVGElement !== undefined\n\n    // hydration is indicated by the existing element to be diffed not having a prop cache\n    hydrating = dom != null && !(ATTR_KEY in dom)\n  }\n  let ret\n\n  if (isArray(vnode)) {\n    vnode = {\n      nodeName: 'span',\n      children: vnode\n    }\n  }\n\n  ret = idiff(dom, vnode, context, mountAll, componentRoot)\n  // append the element if its a new parent\n  if (parent && ret.parentNode !== parent) parent.appendChild(ret)\n\n  // diffLevel being reduced to 0 means we're exiting the diff\n  if (!--diffLevel) {\n    hydrating = false\n    // invoke queued componentDidMount lifecycle methods\n    if (!componentRoot) flushMounts()\n  }\n\n  return ret\n}\n\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n  let out = dom,\n    prevSvgMode = isSvgMode\n\n  // empty values (null, undefined, booleans) render as empty Text nodes\n  if (vnode == null || typeof vnode === 'boolean') vnode = ''\n\n  // If the VNode represents a Component, perform a component diff:\n  let vnodeName = vnode.nodeName\n  if (options.mapping[vnodeName]) {\n    vnode.nodeName = options.mapping[vnodeName]\n    return buildComponentFromVNode(dom, vnode, context, mountAll)\n  }\n\n  // Fast case: Strings & Numbers create/update Text nodes.\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    // update if it's already a Text node:\n    if (\n      dom &&\n      dom.splitText !== undefined &&\n      dom.parentNode &&\n      (!dom._component || componentRoot)\n    ) {\n      /* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n      if (dom.nodeValue != vnode) {\n        dom.nodeValue = vnode\n      }\n    } else {\n      // it wasn't a Text node: replace it with one and recycle the old Element\n      out = document.createTextNode(vnode)\n      if (dom) {\n        if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n        recollectNodeTree(dom, true)\n      }\n    }\n\n    //ie8 error\n    try {\n      out[ATTR_KEY] = true\n    } catch (e) {}\n\n    return out\n  }\n\n  // Tracks entering and exiting SVG namespace when descending through the tree.\n  isSvgMode =\n    vnodeName === 'svg'\n      ? true\n      : vnodeName === 'foreignObject'\n      ? false\n      : isSvgMode\n\n  // If there's no existing element or it's the wrong type, create a new one:\n  vnodeName = String(vnodeName)\n  if (!dom || !isNamedNode(dom, vnodeName)) {\n    out = createNode(vnodeName, isSvgMode)\n\n    if (dom) {\n      // move children into the replacement node\n      while (dom.firstChild) out.appendChild(dom.firstChild)\n\n      // if the previous Element was mounted into the DOM, replace it inline\n      if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n\n      // recycle the old element (skips non-Element node types)\n      recollectNodeTree(dom, true)\n    }\n  }\n\n  let fc = out.firstChild,\n    props = out[ATTR_KEY],\n    vchildren = vnode.children\n\n  if (props == null) {\n    props = out[ATTR_KEY] = {}\n    for (let a = out.attributes, i = a.length; i--; )\n      props[a[i].name] = a[i].value\n  }\n\n  // Optimization: fast-path for elements containing a single TextNode:\n  if (\n    !hydrating &&\n    vchildren &&\n    vchildren.length === 1 &&\n    typeof vchildren[0] === 'string' &&\n    fc != null &&\n    fc.splitText !== undefined &&\n    fc.nextSibling == null\n  ) {\n    if (fc.nodeValue != vchildren[0]) {\n      fc.nodeValue = vchildren[0]\n    }\n  }\n  // otherwise, if there are existing or new children, diff them:\n  else if ((vchildren && vchildren.length) || fc != null) {\n    innerDiffNode(\n      out,\n      vchildren,\n      context,\n      mountAll,\n      hydrating || props.dangerouslySetInnerHTML != null\n    )\n  }\n\n  // Apply attributes/props from VNode to the DOM Element:\n  diffAttributes(out, vnode.attributes, props)\n\n  // restore previous SVG mode: (in case we're exiting an SVG namespace)\n  isSvgMode = prevSvgMode\n\n  return out\n}\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\n *\t@param {Object} context\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\n *\t@param {Boolean} mountAll\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n  let originalChildren = dom.childNodes,\n    children = [],\n    keyed = {},\n    keyedLen = 0,\n    min = 0,\n    len = originalChildren.length,\n    childrenLen = 0,\n    vlen = vchildren ? vchildren.length : 0,\n    j,\n    c,\n    f,\n    vchild,\n    child\n\n  // Build up a map of keyed children and an Array of unkeyed children:\n  if (len !== 0) {\n    for (let i = 0; i < len; i++) {\n      let child = originalChildren[i],\n        props = child[ATTR_KEY],\n        key =\n          vlen && props\n            ? child._component\n              ? child._component.__key\n              : props.key\n            : null\n      if (key != null) {\n        keyedLen++\n        keyed[key] = child\n      } else if (\n        props ||\n        (child.splitText !== undefined\n          ? isHydrating\n            ? child.nodeValue.trim()\n            : true\n          : isHydrating)\n      ) {\n        children[childrenLen++] = child\n      }\n    }\n  }\n\n  if (vlen !== 0) {\n    for (let i = 0; i < vlen; i++) {\n      vchild = vchildren[i]\n      child = null\n\n      // attempt to find a node based on key matching\n      let key = vchild.key\n      if (key != null) {\n        if (keyedLen && keyed[key] !== undefined) {\n          child = keyed[key]\n          keyed[key] = undefined\n          keyedLen--\n        }\n      }\n      // attempt to pluck a node of the same type from the existing children\n      else if (!child && min < childrenLen) {\n        for (j = min; j < childrenLen; j++) {\n          if (\n            children[j] !== undefined &&\n            isSameNodeType((c = children[j]), vchild, isHydrating)\n          ) {\n            child = c\n            children[j] = undefined\n            if (j === childrenLen - 1) childrenLen--\n            if (j === min) min++\n            break\n          }\n        }\n      }\n\n      // morph the matched/found/created DOM child to match vchild (deep)\n      child = idiff(child, vchild, context, mountAll)\n\n      f = originalChildren[i]\n      if (child && child !== dom && child !== f) {\n        if (f == null) {\n          dom.appendChild(child)\n        } else if (child === f.nextSibling) {\n          removeNode(f)\n        } else {\n          dom.insertBefore(child, f)\n        }\n      }\n    }\n  }\n\n  // remove unused keyed children:\n  if (keyedLen) {\n    for (let i in keyed)\n      if (keyed[i] !== undefined) recollectNodeTree(keyed[i], false)\n  }\n\n  // remove orphaned unkeyed children:\n  while (min <= childrenLen) {\n    if ((child = children[childrenLen--]) !== undefined)\n      recollectNodeTree(child, false)\n  }\n}\n\n/** Recursively recycle (or just unmount) a node and its descendants.\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n  let component = node._component\n  if (component) {\n    // if node is owned by a Component, unmount that component (ends up recursing back here)\n    unmountComponent(component)\n  } else {\n    // If the node's VNode had a ref function, invoke it with null here.\n    // (this is part of the React spec, and smart for unsetting references)\n    if (node[ATTR_KEY] != null) applyRef(node[ATTR_KEY].ref, null)\n\n    if (unmountOnly === false || node[ATTR_KEY] == null) {\n      removeNode(node)\n    }\n\n    removeChildren(node)\n  }\n}\n\n/** Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n  node = node.lastChild\n  while (node) {\n    let next = node.previousSibling\n    recollectNodeTree(node, true)\n    node = next\n  }\n}\n\n/** Apply differences in attributes from a VNode to the given DOM Element.\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n  let name\n\n  // remove attributes no longer present on the vnode by setting them to undefined\n  for (name in old) {\n    if (!(attrs && attrs[name] != null) && old[name] != null) {\n      setAccessor(dom, name, old[name], (old[name] = undefined), isSvgMode)\n    }\n  }\n\n  // add new & update changed attributes\n  for (name in attrs) {\n    if (\n      name !== 'children' &&\n      name !== 'innerHTML' &&\n      (!(name in old) ||\n        attrs[name] !==\n          (name === 'value' || name === 'checked' ? dom[name] : old[name]))\n    ) {\n      setAccessor(dom, name, old[name], (old[name] = attrs[name]), isSvgMode)\n    }\n  }\n}\n","import Component from '../component'\nimport options from '../options'\n/** Retains a pool of Components for re-use, keyed on component name.\n *\tNote: since component names are not unique or even necessarily available, these are primarily a form of sharding.\n *\t@private\n */\nconst components = {}\n\n/** Reclaim a component for later re-use by the recycler. */\nexport function collectComponent(component) {\n  let name = component.constructor.name\n  ;(components[name] || (components[name] = [])).push(component)\n}\n\n/** Create a component. Normalizes differences between PFC's and classful Components. */\nexport function createComponent(Ctor, props, context, vnode) {\n  let list = components[Ctor.name],\n    inst\n\n  if (Ctor.prototype && Ctor.prototype.render) {\n    inst = new Ctor(props, context)\n    Component.call(inst, props, context)\n  } else {\n    inst = new Component(props, context)\n    inst.constructor = Ctor\n    inst.render = doRender\n  }\n  vnode && (inst.scopedCssAttr = vnode.css)\n\n  if (list) {\n    for (let i = list.length; i--; ) {\n      if (list[i].constructor === Ctor) {\n        inst.nextBase = list[i].nextBase\n        list.splice(i, 1)\n        break\n      }\n    }\n  }\n  return inst\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, data, context) {\n  return this.constructor(props, context)\n}\n","/* obaa 1.0.0\n * By dntzhang\n * Github: https://github.com/Tencent/omi\n * MIT Licensed.\n */\n\nvar obaa = function(target, arr, callback) {\n  var _observe = function(target, arr, callback) {\n    if (!target.$observer) target.$observer = this\n    var $observer = target.$observer\n    var eventPropArr = []\n    if (obaa.isArray(target)) {\n      if (target.length === 0) {\n        target.$observeProps = {}\n        target.$observeProps.$observerPath = '#'\n      }\n      $observer.mock(target)\n    }\n    for (var prop in target) {\n      if (target.hasOwnProperty(prop)) {\n        if (callback) {\n          if (obaa.isArray(arr) && obaa.isInArray(arr, prop)) {\n            eventPropArr.push(prop)\n            $observer.watch(target, prop)\n          } else if (obaa.isString(arr) && prop == arr) {\n            eventPropArr.push(prop)\n            $observer.watch(target, prop)\n          }\n        } else {\n          eventPropArr.push(prop)\n          $observer.watch(target, prop)\n        }\n      }\n    }\n    $observer.target = target\n    if (!$observer.propertyChangedHandler) $observer.propertyChangedHandler = []\n    var propChanged = callback ? callback : arr\n    $observer.propertyChangedHandler.push({\n      all: !callback,\n      propChanged: propChanged,\n      eventPropArr: eventPropArr\n    })\n  }\n  _observe.prototype = {\n    onPropertyChanged: function(prop, value, oldValue, target, path) {\n      if (value !== oldValue && this.propertyChangedHandler) {\n        var rootName = obaa._getRootName(prop, path)\n        for (\n          var i = 0, len = this.propertyChangedHandler.length;\n          i < len;\n          i++\n        ) {\n          var handler = this.propertyChangedHandler[i]\n          if (\n            handler.all ||\n            obaa.isInArray(handler.eventPropArr, rootName) ||\n            rootName.indexOf('Array-') === 0\n          ) {\n            handler.propChanged.call(this.target, prop, value, oldValue, path)\n          }\n        }\n      }\n      if (prop.indexOf('Array-') !== 0 && typeof value === 'object') {\n        this.watch(target, prop, target.$observeProps.$observerPath)\n      }\n    },\n    mock: function(target) {\n      var self = this\n      obaa.methods.forEach(function(item) {\n        target[item] = function() {\n          var old = Array.prototype.slice.call(this, 0)\n          var result = Array.prototype[item].apply(\n            this,\n            Array.prototype.slice.call(arguments)\n          )\n          if (new RegExp('\\\\b' + item + '\\\\b').test(obaa.triggerStr)) {\n            for (var cprop in this) {\n              if (this.hasOwnProperty(cprop) && !obaa.isFunction(this[cprop])) {\n                self.watch(this, cprop, this.$observeProps.$observerPath)\n              }\n            }\n            //todo\n            self.onPropertyChanged(\n              'Array-' + item,\n              this,\n              old,\n              this,\n              this.$observeProps.$observerPath\n            )\n          }\n          return result\n        }\n        target[\n          'pure' + item.substring(0, 1).toUpperCase() + item.substring(1)\n        ] = function() {\n          return Array.prototype[item].apply(\n            this,\n            Array.prototype.slice.call(arguments)\n          )\n        }\n      })\n    },\n    watch: function(target, prop, path) {\n      if (prop === '$observeProps' || prop === '$observer') return\n      if (obaa.isFunction(target[prop])) return\n      if (!target.$observeProps) target.$observeProps = {}\n      if (path !== undefined) {\n        target.$observeProps.$observerPath = path\n      } else {\n        target.$observeProps.$observerPath = '#'\n      }\n      var self = this\n      var currentValue = (target.$observeProps[prop] = target[prop])\n      Object.defineProperty(target, prop, {\n        get: function() {\n          return this.$observeProps[prop]\n        },\n        set: function(value) {\n          var old = this.$observeProps[prop]\n          this.$observeProps[prop] = value\n          self.onPropertyChanged(\n            prop,\n            value,\n            old,\n            this,\n            target.$observeProps.$observerPath\n          )\n        }\n      })\n      if (typeof currentValue == 'object') {\n        if (obaa.isArray(currentValue)) {\n          this.mock(currentValue)\n          if (currentValue.length === 0) {\n            if (!currentValue.$observeProps) currentValue.$observeProps = {}\n            if (path !== undefined) {\n              currentValue.$observeProps.$observerPath = path\n            } else {\n              currentValue.$observeProps.$observerPath = '#'\n            }\n          }\n        }\n        for (var cprop in currentValue) {\n          if (currentValue.hasOwnProperty(cprop)) {\n            this.watch(\n              currentValue,\n              cprop,\n              target.$observeProps.$observerPath + '-' + prop\n            )\n          }\n        }\n      }\n    }\n  }\n  return new _observe(target, arr, callback)\n}\n\nobaa.methods = [\n  'concat',\n  'copyWithin',\n  'entries',\n  'every',\n  'fill',\n  'filter',\n  'find',\n  'findIndex',\n  'forEach',\n  'includes',\n  'indexOf',\n  'join',\n  'keys',\n  'lastIndexOf',\n  'map',\n  'pop',\n  'push',\n  'reduce',\n  'reduceRight',\n  'reverse',\n  'shift',\n  'slice',\n  'some',\n  'sort',\n  'splice',\n  'toLocaleString',\n  'toString',\n  'unshift',\n  'values',\n  'size'\n]\nobaa.triggerStr = [\n  'concat',\n  'copyWithin',\n  'fill',\n  'pop',\n  'push',\n  'reverse',\n  'shift',\n  'sort',\n  'splice',\n  'unshift',\n  'size'\n].join(',')\n\nobaa.isArray = function(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nobaa.isString = function(obj) {\n  return typeof obj === 'string'\n}\n\nobaa.isInArray = function(arr, item) {\n  for (var i = arr.length; --i > -1; ) {\n    if (item === arr[i]) return true\n  }\n  return false\n}\n\nobaa.isFunction = function(obj) {\n  return Object.prototype.toString.call(obj) == '[object Function]'\n}\n\nobaa._getRootName = function(prop, path) {\n  if (path === '#') {\n    return prop\n  }\n  return path.split('-')[1]\n}\n\nobaa.add = function(obj, prop) {\n  var $observer = obj.$observer\n  $observer.watch(obj, prop)\n}\n\nobaa.set = function(obj, prop, value, exec) {\n  if (!exec) {\n    obj[prop] = value\n  }\n  var $observer = obj.$observer\n  $observer.watch(obj, prop)\n  if (exec) {\n    obj[prop] = value\n  }\n}\n\nArray.prototype.size = function(length) {\n  this.length = length\n}\n\nexport default obaa\n","const callbacks = []\nconst nextTickCallback = []\n\nexport function tick(fn, scope) {\n  callbacks.push({ fn, scope })\n}\n\nexport function fireTick() {\n  callbacks.forEach(item => {\n    item.fn.call(item.scope)\n  })\n\n  nextTickCallback.forEach(nextItem => {\n    nextItem.fn.call(nextItem.scope)\n  })\n  nextTickCallback.length = 0\n}\n\nexport function nextTick(fn, scope) {\n  nextTickCallback.push({ fn, scope })\n}\n","import obaa from './obaa'\nimport { fireTick } from './tick'\n\nexport function proxyUpdate(ele) {\n  let timeout = null\n  obaa(ele.data, () => {\n    if (ele._willUpdate) {\n      return\n    }\n    if (ele.constructor.mergeUpdate) {\n      clearTimeout(timeout)\n\n      timeout = setTimeout(() => {\n        ele.update()\n        fireTick()\n      }, 0)\n    } else {\n      ele.update()\n      fireTick()\n    }\n  })\n}\n","import {\n  SYNC_RENDER,\n  NO_RENDER,\n  FORCE_RENDER,\n  ASYNC_RENDER,\n  ATTR_KEY\n} from '../constants'\nimport options from '../options'\nimport { extend, applyRef } from '../util'\nimport { enqueueRender } from '../render-queue'\nimport { getNodeProps } from './index'\nimport {\n  diff,\n  mounts,\n  diffLevel,\n  flushMounts,\n  recollectNodeTree,\n  removeChildren\n} from './diff'\nimport { createComponent, collectComponent } from './component-recycler'\nimport { removeNode } from '../dom/index'\nimport {\n  addScopedAttr,\n  addScopedAttrStatic,\n  getCtorName,\n  scopeHost\n} from '../style'\nimport { proxyUpdate } from '../observe'\n\n/** Set a component's `props` (generally derived from JSX attributes).\n *\t@param {Object} props\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n *\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n */\nexport function setComponentProps(component, props, opts, context, mountAll) {\n  if (component._disable) return\n  component._disable = true\n\n  if ((component.__ref = props.ref)) delete props.ref\n  if ((component.__key = props.key)) delete props.key\n\n  if (!component.base || mountAll) {\n    if (component.beforeInstall) component.beforeInstall()\n    if (component.install) component.install()\n    if (component.constructor.observe) {\n      proxyUpdate(component)\n    }\n  } else if (component.receiveProps) {\n    component.receiveProps(props, component.data, component.props)\n  }\n\n  if (context && context !== component.context) {\n    if (!component.prevContext) component.prevContext = component.context\n    component.context = context\n  }\n\n  if (!component.prevProps) component.prevProps = component.props\n  component.props = props\n\n  component._disable = false\n\n  if (opts !== NO_RENDER) {\n    if (\n      opts === SYNC_RENDER ||\n      options.syncComponentUpdates !== false ||\n      !component.base\n    ) {\n      renderComponent(component, SYNC_RENDER, mountAll)\n    } else {\n      enqueueRender(component)\n    }\n  }\n\n  applyRef(component.__ref, component)\n}\n\nfunction shallowComparison(old, attrs) {\n  let name\n\n  for (name in old) {\n    if (attrs[name] == null && old[name] != null) {\n      return true\n    }\n  }\n\n  if (old.children.length > 0 || attrs.children.length > 0) {\n    return true\n  }\n\n  for (name in attrs) {\n    if (name != 'children') {\n      let type = typeof attrs[name]\n      if (type == 'function' || type == 'object') {\n        return true\n      } else if (attrs[name] != old[name]) {\n        return true\n      }\n    }\n  }\n}\n\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n *\t@param {Component} component\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n *\t@private\n */\nexport function renderComponent(component, opts, mountAll, isChild) {\n  if (component._disable) return\n\n  let props = component.props,\n    data = component.data,\n    context = component.context,\n    previousProps = component.prevProps || props,\n    previousState = component.prevState || data,\n    previousContext = component.prevContext || context,\n    isUpdate = component.base,\n    nextBase = component.nextBase,\n    initialBase = isUpdate || nextBase,\n    initialChildComponent = component._component,\n    skip = false,\n    rendered,\n    inst,\n    cbase\n\n  // if updating\n  if (isUpdate) {\n    component.props = previousProps\n    component.data = previousState\n    component.context = previousContext\n    if (component.store || opts == FORCE_RENDER || shallowComparison(previousProps, props)) {\n      skip = false\n      if (component.beforeUpdate) {\n        component.beforeUpdate(props, data, context)\n      }\n    } else {\n      skip = true\n    }\n    component.props = props\n    component.data = data\n    component.context = context\n  }\n\n  component.prevProps = component.prevState = component.prevContext = component.nextBase = null\n\n  if (!skip) {\n    component.beforeRender && component.beforeRender()\n    rendered = component.render(props, data, context)\n\n    //don't rerender\n    if (component.css) {\n      addScopedAttrStatic(\n        rendered,\n        '_s' + getCtorName(component.constructor)\n      )\n    }\n\n    if (component.dynamicCss) {\n      addScopedAttr(\n        rendered,\n        component.dynamicCss(),\n        '_s' + component.elementId,\n        component\n      )\n    }\n\n    scopeHost(rendered, component.scopedCssAttr)\n\n    // context to pass to the child, can be updated via (grand-)parent component\n    if (component.getChildContext) {\n      context = extend(extend({}, context), component.getChildContext())\n    }\n\n    let childComponent = rendered && rendered.nodeName,\n      toUnmount,\n      base,\n      ctor = options.mapping[childComponent]\n\n    if (ctor) {\n      // set up high order component link\n\n      let childProps = getNodeProps(rendered)\n      inst = initialChildComponent\n\n      if (inst && inst.constructor === ctor && childProps.key == inst.__key) {\n        setComponentProps(inst, childProps, SYNC_RENDER, context, false)\n      } else {\n        toUnmount = inst\n\n        component._component = inst = createComponent(ctor, childProps, context)\n        inst.nextBase = inst.nextBase || nextBase\n        inst._parentComponent = component\n        setComponentProps(inst, childProps, NO_RENDER, context, false)\n        renderComponent(inst, SYNC_RENDER, mountAll, true)\n      }\n\n      base = inst.base\n    } else {\n      cbase = initialBase\n\n      // destroy high order component link\n      toUnmount = initialChildComponent\n      if (toUnmount) {\n        cbase = component._component = null\n      }\n\n      if (initialBase || opts === SYNC_RENDER) {\n        if (cbase) cbase._component = null\n        base = diff(\n          cbase,\n          rendered,\n          context,\n          mountAll || !isUpdate,\n          initialBase && initialBase.parentNode,\n          true\n        )\n      }\n    }\n\n    if (initialBase && base !== initialBase && inst !== initialChildComponent) {\n      let baseParent = initialBase.parentNode\n      if (baseParent && base !== baseParent) {\n        baseParent.replaceChild(base, initialBase)\n\n        if (!toUnmount) {\n          initialBase._component = null\n          recollectNodeTree(initialBase, false)\n        }\n      }\n    }\n\n    if (toUnmount) {\n      unmountComponent(toUnmount)\n    }\n\n    component.base = base\n    if (base && !isChild) {\n      let componentRef = component,\n        t = component\n      while ((t = t._parentComponent)) {\n        ;(componentRef = t).base = base\n      }\n      base._component = componentRef\n      base._componentConstructor = componentRef.constructor\n    }\n  }\n\n  if (!isUpdate || mountAll) {\n    mounts.unshift(component)\n  } else if (!skip) {\n    // Ensure that pending componentDidMount() hooks of child components\n    // are called before the componentDidUpdate() hook in the parent.\n    // Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n    // flushMounts();\n\n    if (component.afterUpdate) {\n      //deprecated\n      component.afterUpdate(previousProps, previousState, previousContext)\n    }\n    if (component.updated) {\n      component.updated(previousProps, previousState, previousContext)\n    }\n    if (options.afterUpdate) options.afterUpdate(component)\n  }\n\n  if (component._renderCallbacks != null) {\n    while (component._renderCallbacks.length)\n      component._renderCallbacks.pop().call(component)\n  }\n\n  if (!diffLevel && !isChild) flushMounts()\n}\n\n/** Apply the Component referenced by a VNode to the DOM.\n *\t@param {Element} dom\tThe DOM node to mutate\n *\t@param {VNode} vnode\tA Component-referencing VNode\n *\t@returns {Element} dom\tThe created/mutated element\n *\t@private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n  let c = dom && dom._component,\n    originalComponent = c,\n    oldDom = dom,\n    isDirectOwner = c && dom._componentConstructor === vnode.nodeName,\n    isOwner = isDirectOwner,\n    props = getNodeProps(vnode)\n  while (c && !isOwner && (c = c._parentComponent)) {\n    isOwner = c.constructor === vnode.nodeName\n  }\n\n  if (c && isOwner && (!mountAll || c._component)) {\n    setComponentProps(c, props, ASYNC_RENDER, context, mountAll)\n    dom = c.base\n  } else {\n    if (originalComponent && !isDirectOwner) {\n      unmountComponent(originalComponent)\n      dom = oldDom = null\n    }\n\n    c = createComponent(vnode.nodeName, props, context, vnode)\n    if (dom && !c.nextBase) {\n      c.nextBase = dom\n      // passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n      oldDom = null\n    }\n    setComponentProps(c, props, SYNC_RENDER, context, mountAll)\n    dom = c.base\n\n    if (oldDom && dom !== oldDom) {\n      oldDom._component = null\n      recollectNodeTree(oldDom, false)\n    }\n  }\n\n  return dom\n}\n\n/** Remove a component from the DOM and recycle it.\n *\t@param {Component} component\tThe Component instance to unmount\n *\t@private\n */\nexport function unmountComponent(component) {\n  if (options.beforeUnmount) options.beforeUnmount(component)\n\n  let base = component.base\n\n  component._disable = true\n\n  if (component.uninstall) component.uninstall()\n\n  component.base = null\n\n  // recursively tear down & recollect high-order component children:\n  let inner = component._component\n  if (inner) {\n    unmountComponent(inner)\n  } else if (base) {\n    if (base[ATTR_KEY] != null) applyRef(base[ATTR_KEY].ref, null)\n\n    component.nextBase = base\n\n    removeNode(base)\n    collectComponent(component)\n\n    removeChildren(base)\n  }\n\n  applyRef(component.__ref, null)\n}\n","import { FORCE_RENDER } from './constants'\nimport { renderComponent } from './vdom/component'\nimport options from './options'\nimport { nProps, assign } from './util'\n\nlet id = 0\n\nexport default class Component {\n  static is = 'WeElement'\n\n  constructor(props, store) {\n    this.props = assign(\n      nProps(this.constructor.props),\n      this.constructor.defaultProps,\n      props\n    )\n    this.elementId = id++\n    this.data = this.constructor.data || this.data || {}\n\n    this._preCss = null\n\n    this.store = store\n  }\n\n  update(callback) {\n    this._willUpdate = true\n    if (callback)\n      (this._renderCallbacks = this._renderCallbacks || []).push(callback)\n    renderComponent(this, FORCE_RENDER)\n    if (options.componentChange) options.componentChange(this, this.base)\n    this._willUpdate = false\n  }\n\n  fire(type, data) {\n    Object.keys(this.props).every(key => {\n      if ('on' + type.toLowerCase() === key.toLowerCase()) {\n        this.props[key]({ detail: data })\n        return false\n      }\n      return true\n    })\n  }\n\n  render() {}\n}\n","import { diff } from './vdom/diff'\n\n/** Render JSX into a `parent` Element.\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n *\t@param {Element} parent\t\tDOM element to render into\n *\t@param {object} [store]\n *\t@public\n */\nexport function render(vnode, parent, store, empty, merge) {\n  parent = typeof parent === 'string' ? document.querySelector(parent) : parent\n\n  if (empty) {\n    while (parent.firstChild) {\n      parent.removeChild(parent.firstChild)\n    }\n  }\n\n  if (merge) {\n    merge =\n      typeof merge === 'string'\n        ? document.querySelector(merge)\n        : merge\n  }\n\n  return diff(merge, vnode, store, false, parent, false)\n}\n","import options from './options'\n\nexport function define(name, ctor) {\n  options.mapping[name] = ctor\n}\n","export function rpx(str) {\n  return str.replace(/([1-9]\\d*|0)(\\.\\d*)*rpx/g, (a, b) => {\n    return (window.innerWidth * Number(b)) / 750 + 'px'\n  })\n}\n","/**\n * classNames based on https://github.com/JedWatson/classnames\n * by Jed Watson\n * Licensed under the MIT License\n * https://github.com/JedWatson/classnames/blob/master/LICENSE\n * modified by dntzhang\n */\n\nvar hasOwn = {}.hasOwnProperty\n\nexport function classNames() {\n  var classes = []\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    if (!arg) continue\n\n    var argType = typeof arg\n\n    if (argType === 'string' || argType === 'number') {\n      classes.push(arg)\n    } else if (Array.isArray(arg) && arg.length) {\n      var inner = classNames.apply(null, arg)\n      if (inner) {\n        classes.push(inner)\n      }\n    } else if (argType === 'object') {\n      for (var key in arg) {\n        if (hasOwn.call(arg, key) && arg[key]) {\n          classes.push(key)\n        }\n      }\n    }\n  }\n\n  return classes.join(' ')\n}\n\nexport function extractClass() {\n  const [props, ...args] = Array.prototype.slice.call(arguments, 0)\n  if (props) {\n    if (props.class) {\n      args.unshift(props.class)\n      delete props.class\n    } else if (props.className) {\n      args.unshift(props.className)\n      delete props.className\n    }\n  }\n  if (args.length > 0) {\n    return { class: classNames.apply(null, args) }\n  }\n}\n","export function getHost(component) {\n  let base = component.base\n  if (base) {\n    while (base.parentNode) {\n      if (base.parentNode._component) {\n        return base.parentNode._component\n      } else {\n        base = base.parentNode\n      }\n    }\n  }\n}","function getGlobal() {\n  if (\n    typeof global !== 'object' ||\n    !global ||\n    global.Math !== Math ||\n    global.Array !== Array\n  ) {\n    if (typeof self !== 'undefined') {\n      return self\n    } else if (typeof window !== 'undefined') {\n      return window\n    } else if (typeof global !== 'undefined') {\n      return global\n    }\n    return (function() {\n      return this\n    })()\n  }\n  return global\n}\n\n/** Global options\n *\t@public\n *\t@namespace options {Object}\n */\nexport default {\n  scopedStyle: true,\n  mapping: {},\n  isWeb: true,\n  staticStyleMapping: {},\n  doc: typeof document === 'object' ? document : null,\n  root: getGlobal(),\n  //styleCache :[{ctor:ctor,ctorName:ctorName,style:style}]\n  styleCache: []\n  //componentChange(component, element) { },\n  /** If `true`, `prop` changes trigger synchronous component updates.\n   *\t@name syncComponentUpdates\n   *\t@type Boolean\n   *\t@default true\n   */\n  //syncComponentUpdates: true,\n\n  /** Processes all created VNodes.\n   *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n   */\n  //vnode(vnode) { }\n\n  /** Hook invoked after a component is mounted. */\n  //afterMount(component) { },\n\n  /** Hook invoked after the DOM is updated with a component's latest render. */\n  //afterUpdate(component) { }\n\n  /** Hook invoked immediately before a component is unmounted. */\n  // beforeUnmount(component) { }\n}\n","import Component from './component'\n\nexport default class ModelView extends Component {\n  static observe = true\n\n  static mergeUpdate = true\n\n  beforeInstall() {\n    this.data = this.vm.data\n  }\n}\n","import { h, h as createElement } from './h'\nimport { cloneElement } from './clone-element'\nimport Component from './component'\nimport { render } from './render'\nimport { rerender } from './render-queue'\nimport options from './options'\nimport { define } from './define'\nimport { rpx } from './rpx'\nimport ModelView from './model-view'\nimport { classNames, extractClass } from './class'\nimport { getHost } from './get-host'\n\nconst WeElement = Component\nconst defineElement = define\nfunction createRef() {\n  return {}\n}\n\noptions.root.Omi = {\n  h,\n  createElement,\n  cloneElement,\n  createRef,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n  ModelView,\n  defineElement,\n  classNames,\n  extractClass,\n  getHost\n}\noptions.root.omi = Omi\noptions.root.Omi.version = 'omio-1.3.1'\n\nexport default {\n  h,\n  createElement,\n  cloneElement,\n  createRef,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n  ModelView,\n  defineElement,\n  classNames,\n  extractClass,\n  getHost\n}\n\nexport {\n  h,\n  createElement,\n  cloneElement,\n  createRef,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n  ModelView,\n  defineElement,\n  classNames,\n  extractClass,\n  getHost\n}\n"]}