{"version":3,"sources":["../src/obaa.js","../src/path.js","../src/vue.js","../src/omiv.js"],"names":["obaa","target","arr","callback","eventPropArr","isArray","length","__o_","__r_","__p_","mock","prop","hasOwnProperty","isInArray","push","watch","isString","__c_","propChanged","all","root","methods","forEach","item","old","Array","prototype","slice","call","this","result","apply","arguments","RegExp","test","triggerStr","cprop","isFunction","onPropertyChanged","substring","toUpperCase","path","undefined","currentValue","Object","defineProperty","get","set","value","configurable","enumerable","oldValue","nan","rootName","getRootName","i","len","handler","indexOf","obj","toString","isNaN","split","getPath","out","name","tempPath","keys","needUpdate","diffResult","updatePath","keyA","keyB","includePath","pathA","pathB","next","substr","fixPath","mpPath","replace","index","Number","$","options","beforeCreate","destroyed","use","useSelf","computed","store","reset","$store","isMultiStore","storeName","components","__$updatePath_","updateSelfPath","updateSelfComponents","__$updateSelfPath_","key","removeItem","state","k","data","recUpdate","$forceUpdate","$children","child","observe","window","val","patch","component","p","sp","splice","render","app","renderTo","initStore","Vue","assign","h","$mount","process","env","NODE_ENV","console","error","s","install","_Vue","applyMixin","omivInit","_this","$options","parent","replaceState","startsWith","omivDestroyed","omivComputed","$state","mixin","join","add","size","module","exports","Omiv","self"],"mappings":"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","file":"omiv.js","sourcesContent":["export function obaa(target, arr, callback) {\n  let eventPropArr = []\n  if (isArray(target)) {\n    if (target.length === 0) {\n      target.__o_ = {\n        __r_: target,\n        __p_: '#'\n      }\n    }\n    mock(target, target)\n  }\n  for (let prop in target) {\n    if (target.hasOwnProperty(prop)) {\n      if (callback) {\n        if (isArray(arr) && isInArray(arr, prop)) {\n          eventPropArr.push(prop)\n          watch(target, prop, null, target)\n        } else if (isString(arr) && prop === arr) {\n          eventPropArr.push(prop)\n          watch(target, prop, null, target)\n        }\n      } else {\n        eventPropArr.push(prop)\n        watch(target, prop, null, target)\n      }\n    }\n  }\n  if (!target.__c_) {\n    target.__c_ = []\n  }\n  let propChanged = callback ? callback : arr\n  target.__c_.push({\n    all: !callback,\n    propChanged,\n    eventPropArr\n  })\n}\n\nlet triggerStr = [\n  'concat',\n  'copyWithin',\n  'fill',\n  'pop',\n  'push',\n  'reverse',\n  'shift',\n  'sort',\n  'splice',\n  'unshift',\n  'size'\n].join(',')\n\nlet methods = [\n  'concat',\n  'copyWithin',\n  'entries',\n  'every',\n  'fill',\n  'filter',\n  'find',\n  'findIndex',\n  'forEach',\n  'includes',\n  'indexOf',\n  'join',\n  'keys',\n  'lastIndexOf',\n  'map',\n  'pop',\n  'push',\n  'reduce',\n  'reduceRight',\n  'reverse',\n  'shift',\n  'slice',\n  'some',\n  'sort',\n  'splice',\n  'toLocaleString',\n  'toString',\n  'unshift',\n  'values',\n  'size'\n]\n\nfunction mock(target, root) {\n  methods.forEach(item => {\n    target[item] = function() {\n      let old = Array.prototype.slice.call(this, 0)\n      let result = Array.prototype[item].apply(\n        this,\n        Array.prototype.slice.call(arguments)\n      )\n      if (new RegExp('\\\\b' + item + '\\\\b').test(triggerStr)) {\n        for (let cprop in this) {\n          if (this.hasOwnProperty(cprop) && !isFunction(this[cprop])) {\n            watch(this, cprop, this.__o_.__p_, root)\n          }\n        }\n        //todo\n        onPropertyChanged(\n          'Array-' + item,\n          this,\n          old,\n          this,\n          this.__o_.__p_,\n          root\n        )\n      }\n      return result\n    }\n    target[\n      'pure' + item.substring(0, 1).toUpperCase() + item.substring(1)\n    ] = function() {\n      return Array.prototype[item].apply(\n        this,\n        Array.prototype.slice.call(arguments)\n      )\n    }\n  })\n}\n\nfunction watch(target, prop, path, root) {\n  if (prop === '__o_') return\n  if (isFunction(target[prop])) return\n  if (!target.__o_)\n    target.__o_ = {\n      __r_: root\n    }\n  if (path !== undefined && path !== null) {\n    target.__o_.__p_ = path\n  } else {\n    target.__o_.__p_ = '#'\n  }\n\n  let currentValue = (target.__o_[prop] = target[prop])\n  Object.defineProperty(target, prop, {\n    get() {\n      return this.__o_[prop]\n    },\n    set(value) {\n      let old = this.__o_[prop]\n      this.__o_[prop] = value\n      onPropertyChanged(prop, value, old, this, target.__o_.__p_, root)\n    },\n    configurable: true,\n    enumerable: true\n  })\n  if (typeof currentValue === 'object') {\n    if (isArray(currentValue)) {\n      mock(currentValue, root)\n      if (currentValue.length === 0) {\n        if (!currentValue.__o_) currentValue.__o_ = {}\n        if (path !== undefined && path !== null) {\n          currentValue.__o_.__p_ = path + '-' + prop\n        } else {\n          currentValue.__o_.__p_ = '#-' + prop\n        }\n      }\n    }\n    for (let cprop in currentValue) {\n      if (currentValue.hasOwnProperty(cprop)) {\n        watch(currentValue, cprop, target.__o_.__p_ + '-' + prop, root)\n      }\n    }\n  }\n}\n\nfunction onPropertyChanged(prop, value, oldValue, target, path, root) {\n  if (value !== oldValue && !(nan(value) && nan(oldValue)) && root.__c_) {\n    let rootName = getRootName(prop, path)\n    for (let i = 0, len = root.__c_.length; i < len; i++) {\n      let handler = root.__c_[i]\n      if (\n        handler.all ||\n        isInArray(handler.eventPropArr, rootName) ||\n        rootName.indexOf('Array-') === 0\n      ) {\n        handler.propChanged.call(target, prop, value, oldValue, path)\n      }\n    }\n  }\n\n  if (prop.indexOf('Array-') !== 0 && typeof value === 'object') {\n    watch(target, prop, target.__o_.__p_, root)\n  }\n}\n\nfunction isFunction(obj) {\n  return Object.prototype.toString.call(obj) === '[object Function]'\n}\n\nfunction nan(value) {\n  return typeof value === 'number' && isNaN(value)\n}\n\nfunction isArray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nfunction isString(obj) {\n  return typeof obj === 'string'\n}\n\nfunction isInArray(arr, item) {\n  for (let i = arr.length; --i > -1; ) {\n    if (item === arr[i]) return true\n  }\n  return false\n}\n\nfunction getRootName(prop, path) {\n  if (path === '#') {\n    return prop\n  }\n  return path.split('-')[1]\n}\n\nobaa.add = function(obj, prop) {\n  watch(obj, prop, obj.__o_.__p_, obj.__o_.__r_)\n}\n\nobaa.set = function(obj, prop, value) {\n  watch(obj, prop, obj.__o_.__p_, obj.__o_.__r_)\n  obj[prop] = value\n}\n\n//@ts-ignore\n/* eslint-disable */\nArray.prototype.size = function (length) {\n  this.length = length\n}\n","export function getUsing(data, paths) {\n  const obj = []\n  paths.forEach((path, index) => {\n    const isPath = typeof path === 'string'\n    if (isPath) {\n      obj[index] = getTargetByPath(data, path)\n    } else {\n      const key = Object.keys(path)[0]\n      const value = path[key]\n      if (typeof value === 'string') {\n        obj[index] = getTargetByPath(data, value)\n      } else {\n        const tempPath = value[0]\n        if (typeof tempPath === 'string') {\n          const tempVal = getTargetByPath(data, tempPath)\n          obj[index] = value[1] ? value[1](tempVal) : tempVal\n        } else {\n          const args = []\n          tempPath.forEach(path => {\n            args.push(getTargetByPath(data, path))\n          })\n          obj[index] = value[1].apply(null, args)\n        }\n      }\n      obj[key] = obj[index]\n    }\n  })\n  return obj\n}\n\nexport function getTargetByPath(origin, path) {\n  const arr = path\n    .replace(/]/g, '')\n    .replace(/\\[/g, '.')\n    .split('.')\n  let current = origin\n  for (let i = 0, len = arr.length; i < len; i++) {\n    current = current[arr[i]]\n  }\n  return current\n}\n\nexport function getPath(obj, out, name) {\n  const result = {}\n  obj.forEach(item => {\n    if (typeof item === 'string') {\n      result[item] = true\n    } else {\n      const tempPath = item[Object.keys(item)[0]]\n      if (typeof tempPath === 'string') {\n        result[tempPath] = true\n      } else if (typeof tempPath[0] === 'string') {\n        result[tempPath[0]] = true\n      } else {\n        tempPath[0].forEach(path => (result[path] = true))\n      }\n    }\n  })\n  out && (out[name] = result)\n  return result\n}\n\nexport function needUpdate(diffResult, updatePath) {\n  for (let keyA in diffResult) {\n    if (updatePath[keyA]) {\n      return true\n    }\n    for (let keyB in updatePath) {\n      if (includePath(keyA, keyB)) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nfunction includePath(pathA, pathB) {\n  if (pathA.indexOf(pathB) === 0) {\n    const next = pathA.substr(pathB.length, 1)\n    if (next === '[' || next === '.') {\n      return true\n    }\n  }\n  return false\n}\n\nexport function fixPath(path) {\n  let mpPath = ''\n  const arr = path.replace('#-', '').split('-')\n  arr.forEach((item, index) => {\n    if (index) {\n      if (isNaN(Number(item))) {\n        mpPath += '.' + item\n      } else {\n        mpPath += '[' + item + ']'\n      }\n    } else {\n      mpPath += item\n    }\n  })\n  return mpPath\n}\n","import { obaa } from './obaa'\nimport { getPath, needUpdate, fixPath } from './path'\n\nlet Vue\nlet store\nlet isMultiStore = false\n\nexport function $(options) {\n  const beforeCreate = options.beforeCreate\n  const destroyed = options.destroyed\n  const use = options.use\n  const useSelf = options.useSelf\n  options.computed = options.computed || {}\n\n  if (options.store) {\n    reset(options.store)\n  }\n\n  options.beforeCreate = function () {\n    this.$store = store\n    if (isMultiStore) {\n      if (use) {\n        let updatePath = {}\n        for (let storeName in use) {\n          getPath(use[storeName], updatePath, storeName)\n          store[storeName].components.push(this)\n        }\n        this.__$updatePath_ = updatePath\n      }\n\n      if (useSelf) {\n        let updateSelfPath = {}\n        for (let storeName in useSelf) {\n          getPath(useSelf[storeName], updateSelfPath, storeName)\n          store[storeName].updateSelfComponents.push(this)\n        }\n        this.__$updateSelfPath_ = updateSelfPath\n      }\n    } else {\n      if (use) {\n        this.__$updatePath_ = getPath(use)\n        store.components.push(this)\n      }\n      if (useSelf) {\n        this.__$updateSelfPath_ = getPath(useSelf)\n        store.updateSelfComponents.push(this)\n      }\n    }\n    beforeCreate && beforeCreate.apply(this, arguments)\n  }\n\n  options.destroyed = function () {\n    if (isMultiStore) {\n      for (let key in store) {\n        if (key !== 'replaceState') {\n          removeItem(this, store[key].components)\n          removeItem(this, store[key].updateSelfComponents)\n        }\n      }\n    } else {\n      removeItem(this, store.updateSelfComponents)\n      removeItem(this, store.components)\n    }\n\n    destroyed && destroyed.apply(this, arguments)\n  }\n\n  options.computed.state = function () {\n    if (isMultiStore) {\n      let state = {}\n      Object.keys(store).forEach(k => {\n        state[k] = store[k].data\n      })\n      return state\n    }\n    return store.data\n  }\n\n  options.computed.store = function () {\n    return store\n  }\n\n  return options\n}\n\nfunction recUpdate(root) {\n  root.$forceUpdate()\n  root.$children.forEach(child => {\n    recUpdate(child)\n  })\n}\n\nfunction observe(store, storeName) {\n  store.components = []\n  store.updateSelfComponents = []\n\n  // 非 window 环境下不需要观察数据\n  if (typeof window === 'undefined') return\n\n  obaa(store.data, (prop, val, old, path) => {\n    const patch = {}\n\n    patch[fixPath(path + '-' + prop)] = true\n    store.components.forEach(component => {\n      const p = component.__$updatePath_\n      if (storeName) {\n        if (p && p[storeName] && needUpdate(patch, p[storeName])) {\n          recUpdate(component)\n        }\n      } else if (p && needUpdate(patch, p)) {\n        recUpdate(component)\n      }\n    })\n\n    store.updateSelfComponents.forEach(component => {\n      const sp = component.__$updateSelfPath_\n      if (storeName) {\n        if (sp && sp[storeName] && needUpdate(patch, sp[storeName])) {\n          component.$forceUpdate()\n        }\n      } else if (sp && needUpdate(patch, sp)) {\n        component.$forceUpdate()\n      }\n    })\n  })\n}\n\nfunction removeItem(item, arr) {\n  for (let i = 0, len = arr.length; i < len; i++) {\n    if (arr[i] === item) {\n      arr.splice(i, 1)\n      break\n    }\n  }\n}\n\nexport function render(app, renderTo, initStore, options) {\n  if (!Vue) {\n    if (process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line\n      console.error(\n        '[Omiv] has not been installed yet. Vue.use(Omiv) should be called first.'\n      )\n    }\n    return\n  }\n  // fix: 如果是在子节点通过 $ 注入的 store， 在 根实例中拿不到 $store\n  initStore = initStore || store\n  reset(initStore)\n\n  return new Vue(\n    Object.assign(\n      {\n        render: h => h(app)\n      },\n      options,\n      initStore ? { store: initStore } : {}\n    )\n  ).$mount(renderTo)\n}\n\nexport function reset(s) {\n  if (s) {\n    store = s\n    if (store.data) {\n      isMultiStore = false\n      observe(store)\n    } else {\n      isMultiStore = true\n      for (let key in store) {\n        if (store[key].data) {\n          observe(store[key], key)\n        }\n      }\n    }\n  } else {\n    // 为了测试用例正确执行的特殊处理，测试用例中多次执行 Omiv.render\n    // 导致 store 变量存储的是上一个用例的 store，使得再次调用 Omiv.render(Component, '#app')\n    // 不传 store 的时候，会被污染，导致用例执行异常。正常项目中应该不会走到这里的逻辑。\n    store = undefined\n  }\n}\n\n// Vue.use 会判断是否重复安装\nexport function install(_Vue) {\n  Vue = _Vue\n  applyMixin(Vue)\n}\n\nfunction applyMixin(Vue) {\n  const omivComputed = {\n    $state() {\n      if (isMultiStore) {\n        let state = {}\n        Object.keys(this.$store).forEach(k => {\n          state[k] = store[k].data\n        })\n        return state\n      }\n      return this.$store.data\n    }\n  }\n\n  function omivInit() {\n    const options = this.$options\n    const use = options.use\n    const useSelf = options.useSelf\n\n    // TODO: 可能要处理一下在不同地方注入多个 store ？\n\n    if (options.store) {\n      this.$store =\n        typeof options.store === 'function' ? options.store() : options.store\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store\n    }\n\n    // 在 ssr 中用于替换 store\n    if (this.$store && !this.$store.replaceState) {\n      this.$store.replaceState = (store = {}) => {\n        Object.keys(store).forEach(key => {\n          // 过滤观察字段\n          if (!key.startsWith('_')) {\n            this.$store.data[key] = store[key]\n          }\n        })\n      }\n    }\n\n    // 修复不是在 main.js 中注入 store 的问题\n    if (this.$store && !store) {\n      reset(this.$store)\n    }\n\n    if (isMultiStore) {\n      if (use) {\n        let updatePath = {}\n        for (let storeName in use) {\n          getPath(use[storeName], updatePath, storeName)\n          this.$store[storeName].components.push(this)\n        }\n        this.__$updatePath_ = updatePath\n      }\n\n      if (useSelf) {\n        let updateSelfPath = {}\n        for (let storeName in useSelf) {\n          getPath(useSelf[storeName], updateSelfPath, storeName)\n          this.$store[storeName].updateSelfComponents.push(this)\n        }\n        this.__$updateSelfPath_ = updateSelfPath\n      }\n    } else {\n      if (use) {\n        // { count: true }\n        this.__$updatePath_ = getPath(use)\n        // 依赖 store 的组件，压入了一个 vm 实例\n        this.$store.components.push(this)\n      }\n      if (useSelf) {\n        this.__$updateSelfPath_ = getPath(useSelf)\n        this.$store.updateSelfComponents.push(this)\n      }\n    }\n  }\n\n  function omivDestroyed() {\n    if (isMultiStore) {\n      for (let key in this.$store) {\n        if (key !== 'replaceState') {\n          removeItem(this, this.$store[key].components)\n          removeItem(this, this.$store[key].updateSelfComponents)\n        }\n      }\n    } else {\n      removeItem(this, this.$store.updateSelfComponents)\n      removeItem(this, this.$store.components)\n    }\n  }\n\n  Vue.mixin({\n    beforeCreate: omivInit,\n    computed: omivComputed,\n    destroyed: omivDestroyed\n  })\n}\n","import { $, render, reset, install } from './vue'\n\nexport default { $, render, reset, install }\n\nexport { $, render, reset, install }\n"]}